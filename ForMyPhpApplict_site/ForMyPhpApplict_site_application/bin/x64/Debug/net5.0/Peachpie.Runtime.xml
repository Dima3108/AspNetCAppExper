<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Peachpie.Runtime</name>
    </assembly>
    <members>
        <member name="T:Pchp.Core.ScriptAttribute">
            <summary>
            Annotates a script class.
            </summary>
        </member>
        <member name="P:Pchp.Core.ScriptAttribute.Path">
            <summary>
            Script path relative to the root.
            </summary>
        </member>
        <member name="P:Pchp.Core.ScriptAttribute.LastModifiedTime">
            <summary>
            Last modified time of the source file (UTC).
            Can be <c>default</c> if not set.
            </summary>
        </member>
        <member name="P:Pchp.Core.ScriptAttribute.IsAutoloaded">
            <summary>
            Gets value indicating whether the file is marked to be autoloaded for each request.
            </summary>
        </member>
        <member name="T:Pchp.Core.PharAttribute">
            <summary>
            Annotates a script class from a phar archive.
            </summary>
        </member>
        <member name="P:Pchp.Core.PharAttribute.PharFile">
            <summary>
            PHAR file name.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpExtensionAttribute">
            <summary>
            Assembly attribute indicating the assembly represents an extension.
            When this attribute is used on an assembly, declared types and methods are not visible to compiler as they are,
            instead, only public static members are visible as global declarations.
            
            When used on the class, the attribute also annotates extension name and its set of functions.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpExtensionAttribute.KnownExtensionNames">
            <summary>
            Well known PHP extension names.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpExtensionAttribute.Extensions">
            <summary>
            Extensions name list.
            Cannot be <c>null</c>.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpExtensionAttribute.FirstExtensionOrDefault">
            <summary>
            Gets the first specified extension name or <c>null</c>.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpExtensionAttribute._extensions">
            <summary>
            <see cref="T:System.String"/>, <see cref="T:System.String"/>[] or <c>null</c>.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpExtensionAttribute.Registrator">
            <summary>
            Optional.
            Type of class that will be instantiated in order to subscribe to <see cref="T:Pchp.Core.Context"/> events and/or perform one-time initialization.
            </summary>
            <remarks>
            The object is used to handle one-time initialization and context life-cycle.
            Implement initialization and subscription logic in .ctor.
            </remarks>
        </member>
        <member name="T:Pchp.Core.TargetPhpLanguageAttribute">
            <summary>
            Assembly attribute specifying language option used to compile the assembly.
            </summary>
        </member>
        <member name="P:Pchp.Core.TargetPhpLanguageAttribute.ShortOpenTag">
            <summary>
            Whether short open tags were enabled to compile the sources.
            </summary>
        </member>
        <member name="P:Pchp.Core.TargetPhpLanguageAttribute.LanguageVersion">
            <summary>
            The language version of compiled sources.
            Can be <c>null</c> in case the version was not specified.
            </summary>
        </member>
        <member name="M:Pchp.Core.TargetPhpLanguageAttribute.#ctor(System.String,System.Boolean)">
            <summary>
            Construct the attribute.
            </summary>
            <exception cref="T:System.FormatException"><paramref name="langVersion"/> is an invalid version string.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="langVersion"/> is empty or invalid version string.</exception>
        </member>
        <member name="T:Pchp.Core.PhpHiddenAttribute">
            <summary>
            Marks public declarations that won't be visible in the PHP context.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpTypeAttribute">
            <summary>
            Marks public class or interface declaration as a PHP type visible to the scripts from extension libraries.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpTypeAttribute.ExplicitTypeName">
            <summary>
            Optional. Explicitly set type name.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpTypeAttribute.TypeNameAs">
            <summary>
            Indicates how to treat the type name.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpTypeAttribute.FileName">
            <summary>
            Optional. Relative path to the file where the type is defined.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpTypeAttribute.AutoloadFlag">
            <summary>
            - 0: type is not selected to be autoloaded.<br/>
            - 1: type is marked to be autoloaded.<br/>
            - 2: type is marked to be autoloaded and it is the only unconditional declaration in its source file.<br/>
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpTypeAttribute.InheritName">
            <summary>
            Value stating that the type name is inherited from the CLR name excluding its namespace part, see <see cref="F:Pchp.Core.PhpTypeAttribute.PhpTypeName.NameOnly"/>.
            It causes CLR type <c>A.B.C.X</c> to appear in PHP as <c>X</c>.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpTypeAttribute.PhpTypeName">
            <summary>
            Value indicating how to treat the type name in PHP.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpTypeAttribute.PhpTypeName.Default">
            <summary>
            Full type name including its namespace name is used.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpTypeAttribute.PhpTypeName.NameOnly">
            <summary>
            Namespace of the CLR type is ignored.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpTypeAttribute.PhpTypeName.CustomName">
            <summary>
            The name is set explicitly overriding the CLR's type name.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpTypeAttribute.MinimumLangVersion">
            <summary>
            Named property used annotate the type declaration with minimum language version.
            Used only in compile-time.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpTypeAttribute.#ctor(Pchp.Core.PhpTypeAttribute.PhpTypeName)">
            <summary>
            Annotates the PHP type.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpTypeAttribute.#ctor(System.String,System.String)">
            <summary>
            Annotates the PHP type.
            </summary>
            <param name="phpTypeName">The type name that will be used in PHP context instead of CLR type name.</param>
            <param name="fileName">Optional. Relative path to the file where the type is defined.</param>
        </member>
        <member name="M:Pchp.Core.PhpTypeAttribute.#ctor(System.String,System.String,System.Byte)">
            <summary>
            Annotates the PHP type.
            </summary>
            <param name="phpTypeName">The type name that will be used in PHP context instead of CLR type name.</param>
            <param name="fileName">Relative path to the file where the type is defined.</param>
            <param name="autoload">Optional. Specifies if the type can be autoloaded:<br/>
            - 0: type is not selected to be autloaded.<br/>
            - 1: type is marked to be autoloaded.<br/>
            - 2: type is marked to be autoloaded and it is the only unconditional declaration in its source file.<br/>
            </param>
        </member>
        <member name="T:Pchp.Core.PhpMemberVisibilityAttribute">
            <summary>
            Specifies real member accessibility as it will appear in declaring class.
            </summary>
            <remarks>
            Some members have to be emitted as public to be accessible from outside but appear non-public in PHP context.
            This attribute specifies real visibility of the member - method, property or class constant.
            </remarks>
        </member>
        <member name="P:Pchp.Core.PhpMemberVisibilityAttribute.Accessibility">
            <summary>
            Declared member accessibility flag.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpMemberVisibilityAttribute.#ctor(System.Int32)">
            <summary>
            Initializes the attribute.
            </summary>
        </member>
        <member name="T:Pchp.Core.ImportValueAttribute">
            <summary>
            Denotates a function parameter that will import a special runtime value.
            </summary>
            <remarks>
            This attribute instructs the caller to pass a special value to the parameter.
            It is used byt library functions to get additional runtime information.
            </remarks>
        </member>
        <member name="T:Pchp.Core.ImportValueAttribute.ValueSpec">
            <summary>
            Value to be imported.
            </summary>
        </member>
        <member name="F:Pchp.Core.ImportValueAttribute.ValueSpec.Error">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="F:Pchp.Core.ImportValueAttribute.ValueSpec.CallerClass">
            <summary>
            Current class context.
            The parameter must be of type <see cref="T:System.RuntimeTypeHandle"/>, <see cref="T:Pchp.Core.Reflection.PhpTypeInfo"/> or <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="F:Pchp.Core.ImportValueAttribute.ValueSpec.CallerStaticClass">
            <summary>
            Current late static bound class (<c>static</c>).
            The parameter must be of type <see cref="T:Pchp.Core.Reflection.PhpTypeInfo"/>.
            </summary>
        </member>
        <member name="F:Pchp.Core.ImportValueAttribute.ValueSpec.This">
            <summary>
            Calue of <c>$this</c> variable or <c>null</c> if variable is not defined.
            The parameter must be of type <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="F:Pchp.Core.ImportValueAttribute.ValueSpec.Locals">
            <summary>
            Provides a reference to the array of local PHP variables.
            The parameter must be of type <see cref="T:Pchp.Core.PhpArray"/>.
            </summary>
        </member>
        <member name="F:Pchp.Core.ImportValueAttribute.ValueSpec.CallerArgs">
            <summary>
            Provides callers parameters.
            The parameter must be of type array of <see cref="T:Pchp.Core.PhpValue"/>.
            </summary>
        </member>
        <member name="F:Pchp.Core.ImportValueAttribute.ValueSpec.CallerScript">
            <summary>
            Provides reference to the current script container.
            The parameter must be of type <see cref="T:System.RuntimeTypeHandle"/>.
            </summary>
        </member>
        <member name="F:Pchp.Core.ImportValueAttribute.ValueSpec.LocalVariable">
            <summary>
            Provides reference to local variable with same name as the parameter name.
            </summary>
        </member>
        <member name="T:Pchp.Core.DummyFieldsOnlyCtor">
            <summary>
            Dummy value, used for special generated .ctor symbols so they have a different signature than the regular .ctor.
            </summary>
        </member>
        <member name="T:Pchp.Core.CastToFalse">
            <summary>
            Marks return values of methods implementing PHP functions which returns <B>false</B> on error
            but has other return type than <see cref="T:System.Boolean"/> or <see cref="T:System.Object"/>.
            </summary>
            <remarks>
            Compiler takes care of converting a return value of a method into <B>false</B> if necessary.
            An attribute can be applied only on return values of type <see cref="T:System.Int32"/> or <see cref="T:System.Double"/> (less than 0 is converted to <B>false</B>)
            or of a reference type (<B>null</B> is converted to <B>false</B>).
            </remarks>
        </member>
        <member name="T:Pchp.Core.PhpTraitAttribute">
            <summary>
            Marks classes that are declared as trait.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpConstantAttribute">
            <summary>
            Annotates a compile time constant value.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpConstantAttribute.Expression">
            <summary>
            The constant value expression.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpFieldsOnlyCtorAttribute">
            <summary>
            Compiler generated attribute denoting constructor that initializes only fields and calls minimal base .ctor.
            Such constructor is used for emitting derived class constructor that calls PHP constructor function by itself.
            </summary>
        </member>
        <member name="T:Pchp.Core.DefaultValueAttribute">
            <summary>
            Attribute specifying the parameter default if cannot be stored in standard metadata.
            </summary>
        </member>
        <member name="P:Pchp.Core.DefaultValueAttribute.ExplicitType">
            <summary>
            The type containing the backing field.
            <c>Null</c> indicates the containing type.
            </summary>
        </member>
        <member name="P:Pchp.Core.DefaultValueAttribute.FieldName">
            <summary>
            Name of the backing field.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpRwAttribute">
            <summary>
            Marks arguments having by-value argument pass semantics and data of the value can be changed by a callee.
            </summary>
        </member>
        <member name="T:Pchp.Core.ImportPhpFunctionsAttribute">
            <summary>
            Annotates the DLL uses functions from given static class.
            </summary>
        </member>
        <member name="P:Pchp.Core.ImportPhpFunctionsAttribute.ContainerType">
            <summary>
            The type containing exported functions.
            </summary>
        </member>
        <member name="T:Pchp.Core.ImportPhpConstantsAttribute">
            <summary>
            Annotates the DLL uses constants from given static class.
            </summary>
        </member>
        <member name="P:Pchp.Core.ImportPhpConstantsAttribute.ContainerType">
            <summary>
            The type containing exported constants.
            </summary>
        </member>
        <member name="T:Pchp.Core.ImportPhpTypeAttribute">
            <summary>
            Annotates the DLL imports given type as a PHP type.
            </summary>
        </member>
        <member name="P:Pchp.Core.ImportPhpTypeAttribute.ImportedType">
            <summary>
            The imported type.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpPackageReferenceAttribute">
            <summary>
            Reference to another PHP library which scripts and types has to be loaded into the context during runtime.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpPackageReferenceAttribute.ScriptType">
            <summary>
            The Script type from the dependent assembly.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpCustomAtribute">
            <summary>
            PHP attribute annotation.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpCustomAtribute.TypeName">
            <summary>
            The attribute full type name.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpCustomAtribute.Arguments">
            <summary>
            The attribute arguments encoded as JSON string.
            Cannot be <c>null</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpCustomAtribute.#ctor(System.String,System.Byte[])">
            <summary>
            Initializes the custom attribute data.
            </summary>
            <param name="typename">The type attribute name.</param>
            <param name="utf8value">Arguments in form of associative JSON object or JSON array.</param>
        </member>
        <member name="T:Pchp.Core.Collections.ValueListExtensions">
            <summary>
            Extension method for <see cref="T:Pchp.Core.Collections.ValueList`1"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Collections.ValueListExtensions.Join(Pchp.Core.Collections.ValueList{System.String},System.String)">
            <summary>
            Concatenates all the elements of a string list, using the specified separator between each element.
            </summary>
        </member>
        <member name="M:Pchp.Core.Collections.ValueListExtensions.AddBytes(Pchp.Core.Collections.ValueList{System.Byte}@,System.String,System.Text.Encoding)">
            <summary>
            Decodes string to bytes using given encoding. The result is added efficiently into the <see cref="T:Pchp.Core.Collections.ValueList`1"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Collections.ValueListExtensions.AddBytes(Pchp.Core.Collections.ValueList{System.Byte}@,System.Char[],System.Int32,System.Int32,System.Text.Encoding)">
            <summary>
            Decodes chars to bytes using given encoding. The result is added efficiently into the <see cref="T:Pchp.Core.Collections.ValueList`1"/>.
            </summary>
        </member>
        <member name="T:Pchp.Core.Collections.ValueList`1">
            <summary>
            <see cref="T:System.Collections.Generic.IList`1"/> implementation as a value type.
            </summary>
        </member>
        <member name="P:Pchp.Core.Collections.ValueList`1.Empty">
            <summary>
            Gets new empty list.
            </summary>
        </member>
        <member name="M:Pchp.Core.Collections.ValueList`1.Push(`0)">
            <summary>
            Alias to <see cref="M:Pchp.Core.Collections.ValueList`1.Add(`0)"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Collections.ValueList`1.Pop">
            <summary>
            Pops an element from the end of collection.
            </summary>
            <returns>The last element.</returns>
        </member>
        <member name="M:Pchp.Core.Collections.ValueList`1.SelectDuplicities``1(System.Func{`0,``0},System.Predicate{`0})">
            <summary>
            Returns a collection of items with duplicit <c>key</c> (according to provided <paramref name="keySelector"/>.
            </summary>
            <typeparam name="TKey">Type of the key to be checned.</typeparam>
            <param name="keySelector">Gets the key to be used for the duplicity check.</param>
            <param name="predicate">Optional. Where predicate.</param>
            <returns>Set of duplicit items.</returns>
        </member>
        <member name="M:Pchp.Core.Collections.ValueList`1.AsReadOnly">
            <summary>
            Gets a readonly collection of the elements.
            Note the collection may reference the underlying array, so any changes will be reflected in both returned list and this list as well.
            </summary>
        </member>
        <member name="M:Pchp.Core.Collections.ValueList`1.ToArray">
            <summary>
            Gets array with the elements.
            Note the array may reference the underlying array, so any changes will be reflected in both returned list and this list as well.
            </summary>
        </member>
        <member name="T:Pchp.Core.KeyComparer">
            <summary>
            Compares keys of dictionary entries by specified comparer.
            </summary>
        </member>
        <member name="F:Pchp.Core.KeyComparer.Default">
            <summary>Regular comparer.</summary>
        </member>
        <member name="F:Pchp.Core.KeyComparer.Numeric">
            <summary>Numeric comparer.</summary>
        </member>
        <member name="M:Pchp.Core.KeyComparer.String(Pchp.Core.Context)">
            <summary>String comparer.</summary>
        </member>
        <member name="F:Pchp.Core.KeyComparer.ArrayKeys">
            <summary>Array keys comparer.</summary>
        </member>
        <member name="F:Pchp.Core.KeyComparer.Reverse">
            <summary>Regular comparer with reverse order.</summary>
        </member>
        <member name="F:Pchp.Core.KeyComparer.ReverseNumeric">
            <summary>Numeric comparer with reverse order.</summary>
        </member>
        <member name="M:Pchp.Core.KeyComparer.ReverseString(Pchp.Core.Context)">
            <summary>String comparer with reverse order.</summary>
        </member>
        <member name="F:Pchp.Core.KeyComparer.ReverseArrayKeys">
            <summary>Locale string comparer with reverse order.</summary>
        </member>
        <member name="F:Pchp.Core.KeyComparer.comparer">
            <summary>
            The comparer which will be used to compare keys.
            </summary>
        </member>
        <member name="F:Pchp.Core.KeyComparer.reverse">
            <summary>
            Plus or minus 1 depending on whether the comparer compares reversly.
            </summary>
        </member>
        <member name="M:Pchp.Core.KeyComparer.#ctor(System.Collections.Generic.IComparer{Pchp.Core.PhpValue},System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:Pchp.Core.KeyComparer"/>.
            </summary>
            <param name="comparer">The comparer which will be used to compare keys.</param>
            <param name="reverse">Whether to compare reversly.</param>
        </member>
        <member name="T:Pchp.Core.ValueComparer">
            <summary>
            Compares values of dictionary entries by specified comparer.
            </summary>
        </member>
        <member name="F:Pchp.Core.ValueComparer.Default">
            <summary>Regular comparer.</summary>
        </member>
        <member name="F:Pchp.Core.ValueComparer.Numeric">
            <summary>Numeric comparer.</summary>
        </member>
        <member name="M:Pchp.Core.ValueComparer.String(Pchp.Core.Context)">
            <summary>String comparer.</summary>
        </member>
        <member name="F:Pchp.Core.ValueComparer.Reverse">
            <summary>Regular comparer with reverse order.</summary>
        </member>
        <member name="F:Pchp.Core.ValueComparer.ReverseNumeric">
            <summary>Numeric comparer with reverse order.</summary>
        </member>
        <member name="M:Pchp.Core.ValueComparer.ReverseString(Pchp.Core.Context)">
            <summary>String comparer with reverse order.</summary>
        </member>
        <member name="F:Pchp.Core.ValueComparer.comparer">
            <summary>The comparer which will be used to compare values.</summary>
        </member>
        <member name="F:Pchp.Core.ValueComparer.reverse">
            <summary>Plus or minus 1 depending on whether the comparer compares reversly.</summary>
        </member>
        <member name="M:Pchp.Core.ValueComparer.#ctor(System.Collections.Generic.IComparer{Pchp.Core.PhpValue},System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:Pchp.Core.ValueComparer"/>.
            </summary>
            <param name="comparer">The comparer which will be used to compare values.</param>
            <param name="reverse">Whether to compare reversly.</param>
        </member>
        <member name="T:Pchp.Core.EntryComparer">
            <summary>
            Compares dictionary entries using specified value and key comparers.
            </summary>
        </member>
        <member name="M:Pchp.Core.EntryComparer.#ctor(System.Collections.Generic.IComparer{Pchp.Core.PhpValue},System.Boolean,System.Collections.Generic.IComparer{Pchp.Core.PhpValue},System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:Pchp.Core.EntryComparer"/> with specified value and key comparers.
            </summary>
            <param name="keyComparer">The comparer used on keys.</param>
            <param name="keyReverse">Whether the the result of the key comparer is inversed.</param>
            <param name="valueComparer">The comparer used on values.</param>
            <param name="valueReverse">Whether the the result of the value comparer is inversed</param>
        </member>
        <member name="T:Pchp.Core.PhpComparer">
            <summary>
            Implements PHP regular comparison.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpComparer.#ctor">
            <summary>Prevents from creating instances of this class.</summary>
        </member>
        <member name="F:Pchp.Core.PhpComparer.Default">
            <summary>
            Default comparer used to compare objects where no other comparer is provided by user.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpNumericComparer">
            <summary>
            Implements PHP numeric comparison.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumericComparer.#ctor">
            <summary>Prevents from creating instances of this class.</summary>
        </member>
        <member name="F:Pchp.Core.PhpNumericComparer.Default">
            <summary>
            Default comparer used to compare objects where no other comparer is provided by user.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumericComparer.Compare(Pchp.Core.PhpValue,Pchp.Core.PhpValue)">
            <summary>
            Compares two objects in a manner of PHP numeric comparison.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpStringComparer">
            <summary>
            Implements PHP string comparison.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpStringComparer.#ctor(Pchp.Core.Context)">
            <summary>Prevents from creating instances of this class.</summary>
        </member>
        <member name="M:Pchp.Core.PhpStringComparer.Compare(Pchp.Core.PhpValue,Pchp.Core.PhpValue)">
            <summary>
            Compares two objects in a manner of PHP string comparison.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpLocaleStringComparer">
            <summary>
            Implements PHP locale string comparison.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpLocaleStringComparer.Culture">
            <summary>
            A culture used for comparison.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpLocaleStringComparer.CompareOptions">
            <summary>
            Whether the comparer is ignoring case.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpLocaleStringComparer.#ctor(Pchp.Core.Context,System.Globalization.CultureInfo,System.Globalization.CompareOptions)">
            <summary>
            Creates a new string comparer with a specified culture.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpLocaleStringComparer.Compare(Pchp.Core.PhpValue,Pchp.Core.PhpValue)">
            <summary>
            Compares two objects in a manner of PHP string comparison.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpArrayKeysComparer">
            <summary>
            Implements comparison of PHP array keys.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpArrayKeysComparer.#ctor">
            <summary>Prevents from creating instances of this class.</summary>
        </member>
        <member name="F:Pchp.Core.PhpArrayKeysComparer.Default">
            <summary>
            Default comparer.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpArrayKeysComparer.Compare(Pchp.Core.IntStringKey,Pchp.Core.IntStringKey)">
            <summary>
            Compares keys of an array.
            </summary>
            <remarks>
            Keys are compared as strings if at least one of them is a string 
            otherwise they have to be integers and so they are compared as integers.
            </remarks>
        </member>
        <member name="T:Pchp.Core.PhpNaturalComparer">
            <summary>
            Implements PHP natural comparison.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpNaturalComparer._caseInsensitive">
            <summary>Whether comparisons will be case insensitive.</summary>
        </member>
        <member name="M:Pchp.Core.PhpNaturalComparer.#ctor(Pchp.Core.Context,System.Boolean)">
            <summary>Prevents from creating instances of this class.</summary>
            <param name="ctx">Current context. Cannot be <c>null</c>.</param>
            <param name="caseInsensitive">Whether comparisons will be case insensitive.</param>
        </member>
        <member name="M:Pchp.Core.PhpNaturalComparer.Compare(Pchp.Core.PhpValue,Pchp.Core.PhpValue)">
            <summary>
            Compares two objects using the natural ordering.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNaturalComparer.CompareStrings(System.String,System.String,System.Boolean)">
            <summary>
            Compares two strings using the natural ordering.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNaturalComparer.CompareLeft(System.String,System.String,System.Int32@,System.Int32@)">
            <summary>
            Compares two strings with left-aligned numbers, the first to have a different value wins.
            </summary>
            <param name="x">String that contains the first number.</param>
            <param name="y">String that contains the second number.</param>
            <param name="i">Index in <paramref name="x"/> where the first number begins. Is set to the index
            immediately following the number after returning from this method.</param>
            <param name="j">Index in <paramref name="y"/> where the second number begins. Is set to the index
            immediately following the number after returning from this method.</param>
            <returns>
            Negative integer if the first number is less than the second number, 
            zero if the two numbers are equal and
            positive integer if the first number is greater than the second number.</returns>
            <remarks>Assumes neither <paramref name="x"/> nor <paramref name="y"/> parameter is null.</remarks>
        </member>
        <member name="M:Pchp.Core.PhpNaturalComparer.CompareRight(System.String,System.String,System.Int32@,System.Int32@)">
            <summary>
            Compares two strings with right-aligned numbers, The longest run of digits wins.
            </summary>
            <param name="x">String that contains the first number.</param>
            <param name="y">String that contains the second number.</param>
            <param name="i">Index in <paramref name="x"/> where the first number begins. Is set to the index
            immediately following the number after returning from this method.</param>
            <param name="j">Index in <paramref name="y"/> where the second number begins. Is set to the index
            immediately following the number after returning from this method.</param>
            <returns>
            Negative integer if the first number is less than the second number, 
            zero if the two numbers are equal and
            positive integer if the first number is greater than the second number.</returns>
            <remarks>Assumes neither <paramref name="x"/> nor <paramref name="y"/> parameter is null.</remarks>
        </member>
        <member name="T:Pchp.Core.PhpUserComparer">
            <summary>
            Implements PHP numeric comparison.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpUserComparer._compare">
            <summary>User defined PHP method used to compare given objects.</summary>
        </member>
        <member name="M:Pchp.Core.PhpUserComparer.#ctor(Pchp.Core.Context,Pchp.Core.IPhpCallable)">
            <summary>
            Creates a new instance of a comparer using <see cref="T:Pchp.Core.PhpCallback"/> for comparisons.
            </summary>
            <param name="ctx">Current context. Cannot be <c>null</c>.</param>
            <param name="compare">User callback which provides comparing functionality.</param>
            <remarks>
            <para>
            Callback should have the signature <c>object(object,object)</c> and should already be bound.
            </para>
            <para>
            The result of calback's invocation is converted to a double by <see cref="M:Pchp.Core.PhpValue.ToDouble"/>
            and than the sign is taken as a result of the comparison.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="compare"/> is a <B>null</B> reference.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="compare"/> callback is not bound.</exception>
        </member>
        <member name="M:Pchp.Core.PhpUserComparer.Compare(Pchp.Core.PhpValue,Pchp.Core.PhpValue)">
            <summary>
            Compares two objects in a manner of PHP numeric comparison.
            </summary>
        </member>
        <member name="T:Pchp.Core.IPhpComparable">
            <summary>
            Defines comparison methods which are used to compare PHP.NET types.
            </summary>
        </member>
        <member name="M:Pchp.Core.IPhpComparable.Compare(Pchp.Core.PhpValue)">
            <summary>
            Compares the current instance with another object using default comparer.
            </summary>
            <param name="obj">Object to compare with.</param>
            <returns>Negative, Positive or Zero.</returns>
            <exception cref="T:System.ArgumentException">Incomparable objects have been compared.</exception>
        </member>
        <member name="T:Pchp.Core.Comparison">
            <summary>
            PHP comparison semantic.
            </summary>
        </member>
        <member name="M:Pchp.Core.Comparison.CompareObjects(System.Object,System.Object,Pchp.Core.PhpComparer,System.Boolean@)">
            <summary>
            Compares two class instances.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="comparer">The comparer.</param>
            <param name="incomparable">
            Whether objects are incomparable while no difference is found before both objects enter an infinite recursion, returns zero.
            </param>
        </member>
        <member name="M:Pchp.Core.Comparison.Compare(System.Int64,System.Int64)">
            <summary>
            Compares two long integer values.
            </summary>
            <returns>(+1,0,-1)</returns>
        </member>
        <member name="M:Pchp.Core.Comparison.Compare(System.Double,System.Double)">
            <summary>
            Compares two double values.
            </summary>
            <returns>(+1,0,-1)</returns>
            <remarks>We cannot used <see cref="M:System.Math.Sign(System.Double)"/> on <c>x - y</c> since the result can be NaN.</remarks>
        </member>
        <member name="M:Pchp.Core.Comparison.Compare(System.String,System.String)">
            <summary>
            Compares string in a manner of PHP. 
            </summary>
            <remarks>Note that this comparison is not transitive (e.g. {"2","10","10a"} leads to a contradiction).</remarks>
        </member>
        <member name="M:Pchp.Core.Comparison.Compare(Pchp.Core.PhpString.Blob,Pchp.Core.PhpString.Blob)">
            <summary>
            Compares string in a manner of PHP, same as <see cref="M:Pchp.Core.Comparison.Compare(System.String,System.String)"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Comparison.Compare(System.String,System.Int64)">
            <summary>
            Compares a <see cref="T:System.String"/> with <see cref="T:System.Int64"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Comparison.Compare(System.String,System.Double)">
            <summary>
            Compares a <see cref="T:System.String"/> with <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Comparison.Equals(System.String,System.Int64)">
            <summary>
            Compares two objects for equality in a manner of the PHP regular comparison.
            </summary>
            <param name="x">The first object.</param>
            <param name="ly">The second object.</param>
            <returns>Whether the values of operands are the same.</returns>
        </member>
        <member name="M:Pchp.Core.Comparison.Equals(System.String,System.Double)">
            <summary>
            Compares two objects for equality in a manner of the PHP regular comparison.
            </summary>
            <param name="x">The first object.</param>
            <param name="dy">The second object.</param>
            <returns>Whether the values of operands are the same.</returns>
        </member>
        <member name="T:Pchp.Core.StrictComparison">
            <summary>
            PHP strict comparison semantic.
            </summary>
        </member>
        <member name="T:Pchp.Core.Context">
            <summary>
            Runtime context for a PHP application.
            </summary>
            <remarks>
            The object represents a current Web request or the application run.
            Its instance is passed to all PHP function.
            The context is not thread safe.
            </remarks>
        </member>
        <member name="M:Pchp.Core.Context.DeclareFunction(System.String,System.Delegate)">
            <summary>
            Declare user function into the PHP runtime context.
            </summary>
            <param name="name">Global PHP function name.</param>
            <param name="delegate">Delegate to represent the PHP function.</param>
        </member>
        <member name="M:Pchp.Core.Context.Call(System.String)">
            <summary>
            Call a function by its name dynamically.
            </summary>
            <param name="function">Function name valid within current runtime context.</param>
            <returns>Returns value given from the function call.</returns>
        </member>
        <member name="M:Pchp.Core.Context.Call(System.String,Pchp.Core.PhpValue[])">
            <summary>
            Call a function by its name dynamically.
            </summary>
            <param name="function">Function name valid within current runtime context.</param>
            <param name="arguments">Arguments to be passed to the function call.</param>
            <returns>Returns value given from the function call.</returns>
        </member>
        <member name="M:Pchp.Core.Context.Call(System.String,System.Object[])">
            <summary>
            Call a function by its name dynamically.
            </summary>
            <param name="function">Function name valid within current runtime context.</param>
            <param name="arguments">Arguments to be passed to the function call.</param>
            <returns>Returns value given from the function call.</returns>
        </member>
        <member name="M:Pchp.Core.Context.Create``1(Pchp.Core.PhpValue[])">
            <summary>
            Creates an instance of a type dynamically with constructor overload resolution.
            </summary>
            <typeparam name="T">Object type.</typeparam>
            <param name="arguments">Arguments to be passed to the constructor.</param>
            <returns>New instance of <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:Pchp.Core.Context.Create``1(System.RuntimeTypeHandle,Pchp.Core.PhpValue[])">
            <summary>
            Creates an instance of a type dynamically with constructor overload resolution.
            </summary>
            <typeparam name="T">Object type.</typeparam>
            <param name="caller">
            Class context for resolving constructors visibility.
            Can be <c>default(<see cref="T:System.RuntimeTypeHandle"/>)</c> to resolve public constructors only.</param>
            <param name="arguments">Arguments to be passed to the constructor.</param>
            <returns>New instance of <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:Pchp.Core.Context.Create(System.String)">
            <summary>
            Creates an instance of a type dynamically.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the class is not declared.</exception>
        </member>
        <member name="M:Pchp.Core.Context.Create(System.String,System.Object[])">
            <summary>
            Creates an instance of a type dynamically with constructor overload resolution.
            </summary>
            <param name="classname">Full name of the class to instantiate. The name uses PHP syntax of name separators (<c>\</c>) and is case insensitive.</param>
            <param name="arguments">Arguments to be passed to the constructor.</param>
            <returns>The object instance.</returns>
            <exception cref="T:System.InvalidOperationException">If the class is not declared.</exception>
        </member>
        <member name="M:Pchp.Core.Context.Create(System.String,Pchp.Core.PhpValue[])">
            <summary>
            Creates an instance of a type dynamically with constructor overload resolution.
            </summary>
            <param name="classname">Full name of the class to instantiate. The name uses PHP syntax of name separators (<c>\</c>) and is case insensitive.</param>
            <param name="arguments">Arguments to be passed to the constructor.</param>
            <returns>The object instance.</returns>
            <exception cref="T:System.InvalidOperationException">If the class is not declared.</exception>
        </member>
        <member name="M:Pchp.Core.Context.Create(System.RuntimeTypeHandle,System.String,Pchp.Core.PhpValue[])">
            <summary>
            Creates an instance of a type dynamically with constructor overload resolution.
            </summary>
            <param name="caller">
            Class context for resolving constructors visibility.
            Can be <c>default(<see cref="T:System.RuntimeTypeHandle"/>)</c> to resolve public constructors only.</param>
            <param name="classname">Full name of the class to instantiate. The name uses PHP syntax of name separators (<c>\</c>) and is case insensitive.</param>
            <param name="arguments">Arguments to be passed to the constructor.</param>
            <returns>The object instance.</returns>
            <exception cref="T:System.InvalidOperationException">If the class is not declared.</exception>
        </member>
        <member name="M:Pchp.Core.Context.Create(System.RuntimeTypeHandle,Pchp.Core.Reflection.PhpTypeInfo,Pchp.Core.PhpValue[])">
            <summary>
            Creates an instance of a type dynamically with constructor overload resolution.
            </summary>
            <param name="caller">
            Class context for resolving constructors visibility.
            Can be <c>default(<see cref="T:System.RuntimeTypeHandle"/>)</c> to resolve public constructors only.</param>
            <param name="tinfo">Type to be instantiated.</param>
            <param name="arguments">Arguments to be passed to the constructor.</param>
            <returns>The object instance.</returns>
            <exception cref="T:System.ArgumentNullException">If provided <paramref name="tinfo"/> is <c>null</c>.</exception>
        </member>
        <member name="M:Pchp.Core.Context.GetLoadedExtensions">
            <summary>
            Gets collection of extension names loaded into the application context.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.IsExtensionLoaded(System.String)">
            <summary>
            Gets value indicating that given extension was loaded.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.GetRoutinesByExtension(System.String)">
            <summary>
            Gets routines associated with specified extension.
            </summary>
            <param name="extension">Extension name.</param>
            <returns>Enumeration of routine names associated with given extension.</returns>
        </member>
        <member name="M:Pchp.Core.Context.GetTypesByExtension(System.String)">
            <summary>
            Gets types (classes, interfaces and traits) associated with specified extension.
            </summary>
            <param name="extension">Extension name.</param>
            <returns>Enumeration of types associated with given extension.</returns>
        </member>
        <member name="M:Pchp.Core.Context.GetIncludedScripts">
            <summary>
            Gets enumeration of scripts that were included.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.DeclareScript(System.String,Pchp.Core.Context.MainDelegate)">
            <summary>
            Declares or redeclares script within runtime using delegate.
            The script will be available for inclusions.
            </summary>
            <param name="relpath">Relative path of the script without leading slash.</param>
            <param name="main">Script entry point.</param>
        </member>
        <member name="M:Pchp.Core.Context.TryResolveScript(System.String,System.String)">
            <summary>
            Tries to resolve compiled script according to given path.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.TryGetDeclaredScript(System.String)">
            <summary>
            Gets script according to its relative path as it was declared in <see cref="T:Pchp.Core.Context"/>.
            </summary>
            <param name="relpath">Relative script path.</param>
            <returns>Script descriptor, can be invalid if script was not declared.</returns>
        </member>
        <member name="M:Pchp.Core.Context.TryGetScriptsInDirectory(System.String,System.String,Pchp.Core.Context.ScriptInfo[]@)">
            <summary>
            Gets scripts in given directory.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.TryGetConstant(System.String,Pchp.Core.PhpValue@)">
            <summary>
            Tries to get a global constant from current context.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.TryGetConstant(System.String,Pchp.Core.PhpValue@,System.Int32@)">
            <summary>
            Tries to get a global constant from current context.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.DefineConstant(System.String,Pchp.Core.PhpValue,System.Boolean)">
            <summary>
            Defines a user constant.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.DefineConstant(System.String,Pchp.Core.PhpValue,System.Int32@,System.Boolean)">
            <summary>
            Defines a user constant.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.IsConstantDefined(System.String)">
            <summary>
            Determines whether a constant with given name is defined.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.GetConstants(System.String)">
            <summary>
            Gets enumeration of all available constants and their values.
            </summary>
            <param name="extension">Optionally specify the extension name; only constants defined within this extension will be enumerated.</param>
        </member>
        <member name="M:Pchp.Core.Context.AutoloadFiles">
            <summary>
            Invokes scripts marked as to be autoloaded.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.Pchp#Core#IPhpAutoloadService#AutoloadTypeByName(System.String)">
            <summary>
            Default implementation of PHP autoload.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.DefaultAutoloadTypeByName(System.String)">
            <summary>
            Default implementation of PHP autoload looks for <c>__autoload</c> global function and calls it.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.AutoloadByTypeNameFromClassMap(System.String,System.Boolean)">
            <summary>
            Performs autoload from class map which is constructed in build time from specified class map and psr-4 schemas.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.ImplicitAutoloadTypeByName(System.String)">
            <summary>
            Implicit autoload mechanism working through CLR reflection.
            This ensures when even the caller does not define PHP class autoloading, we allows seamless use of PHP classes and PHP program.
            This mechanism gets enabled by default, disabled only when SPL autoload gets initiated (or anything that sets own <see cref="P:Pchp.Core.Context.AutoloadService"/>).
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.s_typeMap">
            <summary>
            Map of all PHP types in loaded assemblies.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.AutoloadFunctionName">
            <summary>
            Default autoload function in PHP to be used when there is no autoload service.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context._lazyAutoloadRoutine">
            <summary>
            Lazily resolved <c>__autoload</c> routine in current context.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.AutoloadService">
            <summary>
            Gets instance of <see cref="T:Pchp.Core.IPhpAutoloadService"/> to be used for resolving autoloads.
            Cannot get a <c>null</c> reference.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.Configuration">
            <summary>
            Gets a service providing access to current runtime configuration.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.RegisterConfiguration``1(``0)">
            <summary>
            Registers a configuration to be accessed through <see cref="M:Pchp.Core.IPhpConfigurationService.Get``1"/> with default values.
            </summary>
            <typeparam name="TOptions">Type of the configuration interface.</typeparam>
            <param name="defaults">The instance providing default values.
            This instance is intended to be cloned for new <see cref="T:Pchp.Core.Context"/> instances.</param>
        </member>
        <member name="F:Pchp.Core.Context.s_defaultConfigs">
            <summary>
            Set of registered configurations and their default values.
            </summary>
        </member>
        <member name="T:Pchp.Core.Context.ConsoleContext">
            <summary>
            Implementation of a console application runtime context.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.ConsoleContext.ServerApi">
            <summary>
            Gets server type interface name.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.ConsoleContext.#ctor(System.String,System.String,System.IO.Stream,System.String[])">
            <summary>
            Initializes the console context.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.InitializeServerVars(System.String)">
            <summary>Initialize additional <c>$_SERVER</c> entries.</summary>
            <param name="mainscript"></param>
        </member>
        <member name="M:Pchp.Core.Context.InitializeArgvArgc(System.String,System.String[])">
            <summary>Initializes global $argv and $argc variables and corresponding $_SERVER entries.</summary>
        </member>
        <member name="M:Pchp.Core.Context.CreateConsole(System.String)">
            <summary>
            Creates context to be used within a console application.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.CreateConsole(System.String,System.String[])">
            <summary>
            Creates context to be used within a console application.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.CreateConsole(System.String,System.String,System.IO.Stream,System.String[])">
            <summary>
            Creates context to be used within a console application.
            </summary>
            <param name="mainscript">Informational. Used for <c>PHP_SELF</c> global variable and related variables.</param>
            <param name="rootPath">
            The path to be recognized as the application root path.
            Also used as the internal current working directory.
            Can be changed by setting <see cref="P:Pchp.Core.Context.RootPath"/> and <see cref="P:Pchp.Core.Context.WorkingDirectory"/>.
            </param>
            <param name="output">Optional. The output stream.</param>
            <param name="args">Optional. Application arguments. Used to set <c>$argv</c> and <c>$argc</c> global variable.</param>
        </member>
        <member name="T:Pchp.Core.Context.ConstName">
            <summary>
            Constant name.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.ConstName.Name">
            <summary>
            Constant name.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.ConstName.StringComparer">
            <summary>
            Comparer used to compare the name.
            </summary>
        </member>
        <member name="T:Pchp.Core.Context.ConstData">
            <summary>
            Information about app constants.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.ConstData.Data">
            <summary>
            The constant value or value getter Func&lt;PhpValue&gt;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.ConstData.HasValue">
            <summary>
            Gets a value indicating the constant has been initialized.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.ConstData.GetValue(Pchp.Core.Context)">
            <summary>
            Resolves the constant value.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.ConstData.ExtensionName">
            <summary>
            Optional extension name that the constant belongs to.
            </summary>
        </member>
        <member name="T:Pchp.Core.Context.ConstantInfo">
            <summary>
            Information about a global constant.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.ConstsMap.s_map">
            <summary>
            Maps of constant name to its ID.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.ConstsMap.s_rwLock">
            <summary>
            Lock mechanism for accessing statics.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.ConstsMap.s_valuesApp">
            <summary>
            Maps constant ID to its actual value, accross all contexts (application wide).
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.ConstsMap.s_countApp">
            <summary>
            Actual count of defined constant names.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.ConstsMap.s_countCtx">
            <summary>
            Actual count of defined constant names.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.ConstsMap._valuesCtx">
            <summary>
            Maps constant ID to its actual value in current context.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.ConstsMap._ctx">
            <summary>
            Runtime context.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.ConstsMap.Create(Pchp.Core.Context)">
            <summary>
            Initializes <see cref="T:Pchp.Core.Context.ConstsMap"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.ConstsMap.RegisterConstantId(System.String,System.Boolean,System.Boolean)">
            <summary>
            Ensures unique constant ID for given constant name.
            Gets positive ID for runtime constant, negative ID for application constant.
            IDs are indexed from <c>1</c>. Zero is invalid ID.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.ConstsMap.SetValue(System.Nullable{Pchp.Core.PhpValue}@,Pchp.Core.PhpValue)">
            <summary>
            Overwrites given slot with value in case the slot is not set yet.
            </summary>
            <param name="slot">Constant slot to be set.</param>
            <param name="value">Value to be set.</param>
            <returns>True if slot was set, otherwise false.</returns>
        </member>
        <member name="M:Pchp.Core.Context.ConstsMap.TryGetConstant(System.String,Pchp.Core.PhpValue@)">
            <summary>
            Gets constant value by its name.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.ConstsMap.TryGetConstant(System.String,System.Int32@,Pchp.Core.PhpValue@)">
            <summary>
            Gets constant value by its name. Uses cache variable to remember constants index.
            </summary>
            <param name="name">Variable name used if <paramref name="idx"/> is not provided.</param>
            <param name="idx">Variable containing cached constant index.</param>
            <param name="value">The resulting value.</param>
            <returns>Whether the constant is defined.</returns>
        </member>
        <member name="M:Pchp.Core.Context.ConstsMap.TryGetConstant(System.Int32,Pchp.Core.PhpValue@)">
            <summary>
            Gets constant value by constant index.
            Negative numbers denotates app constants, positive numbers conrrespond to constants defined within <see cref="T:Pchp.Core.Context"/> (user constants).
            </summary>
        </member>
        <member name="T:Pchp.Core.Context.ConstsMap.Enumerator">
            <summary>
            Enumerator traversing all defined constants.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.ConstsMap.Enumerator.Extension">
            <summary>
            Optional condition for the constant.
            Specified the extension name where the constant must be defined.
            If specified, user-constants are skipped.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.ConstsMap.Enumerator._index">
            <summary>
            =0 : uninitialized<br/>
            &lt;0 : app constants - 1<br/>
            &gt;0 : ctx constants + 1<br/>
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.ConstsMap.Enumerator.Reset">
            <summary>
            Reset the enumeration.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.ConstsMap.Enumerator.MoveNext">
            <summary>
            No alloc enumeration over defined constants.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.#ctor(System.IServiceProvider)">
            <summary>
            Initializes instance of context.
            </summary>
            <param name="services">Service provider. Can be <c>null</c> reference to use implicit services.</param>
        </member>
        <member name="M:Pchp.Core.Context.CreateEmpty(System.String[])">
            <summary>
            Create default context with no output.
            </summary>
            <param name="cmdargs">
            Optional arguments to be passed to PHP <c>$argv</c> and <c>$argc</c> global variables.
            If the array is empty, variables are not created.
            </param>
        </member>
        <member name="F:Pchp.Core.Context._services">
            <summary>
            Base service provider, can be <c>null</c>.
            Used to provide services to this instance of context.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.System#IServiceProvider#GetService(System.Type)">
            <summary>
            Resolves service.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.DllLoaderImpl.ProcessedAssemblies">
            <summary>
            Set of reflected script assemblies.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.DllLoaderImpl.AddPhpPackageReference(System.Type)">
            <summary>
            Processes referenced assembly which is annotated as [PhpExtension]
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.DllLoaderImpl.TryAddAssembly(System.Reflection.Assembly)">
            <summary>
            Adds assembly to the list of referenced packages.
            This is used
            - by `eval()` to collect references
            - to avoid processing same assembly twice
            - as a recursion prevention
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.DllLoaderImpl.AddScriptReference(System.Reflection.Assembly)">
            <summary>
            Reflects given assembly for PeachPie compiler specifics - compiled scripts, references to other assemblies, declared functions and classes.
            Scripts and declarations are loaded into application context (static).
            </summary>
            <param name="assembly">PeachPie compiler generated assembly.</param>
            <remarks>Not thread safe.</remarks>
        </member>
        <member name="M:Pchp.Core.Context.DllLoaderImpl.DefineCoreConstants">
            <summary>
            Defines Core constants depending on host OS and runtime.
            </summary>
        </member>
        <member name="T:Pchp.Core.Context.DllLoader`1">
            <summary>
            Helper class called one-time from compiled DLL static .cctor.
            </summary>
            <typeparam name="TScript">Type of module's script class.</typeparam>
        </member>
        <member name="M:Pchp.Core.Context.DllLoader`1.AddScriptReference">
            <summary>
            Module initialization method.
            Reflects given assembly (through <typeparamref name="TScript"/>.Assembly) 
            </summary>
        </member>
        <member name="F:Pchp.Core.Context._functions">
            <summary>
            Map of global functions.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context._types">
            <summary>
            Map of global types.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context._constants">
            <summary>
            Map of global constants.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context._scripts">
            <summary>
            Set of scripts that have been included in current context.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.AddScriptReference(System.Reflection.Assembly)">
            <summary>
            Load PHP scripts and referenced symbols from PHP assembly.
            </summary>
            <param name="assembly">PHP assembly containing special <see cref="F:Pchp.Core.Context.ScriptInfo.ScriptTypeName"/> class.</param>
            <exception cref="T:System.ArgumentNullException">In case given assembly is a <c>null</c> reference.</exception>
        </member>
        <member name="M:Pchp.Core.Context.GetScriptReferences">
            <summary>
            Internal.
            Gets enumeration of <see cref="T:System.Reflection.Assembly"/> representing script assemblies that were reflected.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.DeclareFunction(Pchp.Core.Reflection.RoutineInfo)">
            <summary>
            Declare a runtime user function.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.CheckFunctionDeclared(Pchp.Core.Context,System.Int32,System.Int32)">
            <summary>
            Internal.
            Used by callsites cache to check whether called function is the same as the one declared.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.GetDeclaredFunction(System.String)">
            <summary>
            Gets declared function with given name. In case of more items they are considered as overloads.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.GetDeclaredFunctions">
            <summary>Gets enumeration of all functions declared within the context, including library and user functions.</summary>
            <returns>Enumeration of all routines. Cannot be <c>null</c>.</returns>
        </member>
        <member name="M:Pchp.Core.Context.DeclareType``1">
            <summary>
            Declare a runtime user type.
            </summary>
            <typeparam name="T">Type to be declared in current context.</typeparam>
        </member>
        <member name="M:Pchp.Core.Context.DeclareType(Pchp.Core.Reflection.PhpTypeInfo,System.String)">
            <summary>
            Declare a runtime user type unser an aliased name.
            </summary>
            <param name="tinfo">Original type descriptor.</param>
            <param name="typename">Type name alias, can differ from <see cref="P:Pchp.Core.Reflection.PhpTypeInfo.Name"/>.</param>
        </member>
        <member name="M:Pchp.Core.Context.ExpectTypeDeclared``1">
            <summary>
            Called by runtime when it expects that given type is declared.
            If not, autoload is invoked and if the type mismatches or cannot be declared, an exception is thrown.
            </summary>
            <typeparam name="T">Type which is expected to be declared.</typeparam>
        </member>
        <member name="M:Pchp.Core.Context.ExpectTypeDeclared(Pchp.Core.Reflection.PhpTypeInfo)">
            <summary>
            Called by runtime when it expects that given type is declared.
            If not, autoload is invoked and if the type mismatches or cannot be declared, an exception is thrown.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.GetDeclaredType(System.String,System.Boolean)">
            <summary>
            Gets runtime type information, or <c>null</c> if type with given is name not declared.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.GetDeclaredTypeOrThrow(System.String,System.Boolean)">
            <summary>
            Gets runtime type information, or throws if type with given name is not declared.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.ResolveType(System.String,System.RuntimeTypeHandle,System.Boolean)">
            <summary>
            Gets runtime type information of given type by its name.
            Resolves reserved type names according to current caller context.
            Returns <c>null</c> if type was not resolved.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.GetDeclaredTypes">
            <summary>
            Gets enumeration of all types declared in current context.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.IsUserTypeDeclared(Pchp.Core.Reflection.PhpTypeInfo)">
            <summary>
            Checks the user type is declared in the current state of <see cref="T:Pchp.Core.Context"/>.
            </summary>
            <param name="phptype">PHP type runtime information. Must not be <c>null</c>.</param>
            <returns>True if the type has been declared on the current <see cref="T:Pchp.Core.Context"/>.</returns>
        </member>
        <member name="M:Pchp.Core.Context.CheckIncludeOnce``1">
            <summary>
            Used by runtime.
            Determines whether the <c>include_once</c> or <c>require_once</c> is allowed to proceed.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.OnInclude``1">
            <summary>
            Used by runtime.
            Called by scripts Main method at its begining.
            </summary>
            <typeparam name="TScript">Script type containing the Main method/</typeparam>
        </member>
        <member name="M:Pchp.Core.Context.Include(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Resolves path according to PHP semantics, lookups the file in runtime tables and calls its Main method within the global scope.
            </summary>
            <param name="dir">Current script directory. Used for relative path resolution. Can be <c>null</c> to not resolve against current directory.</param>
            <param name="path">The relative or absolute path to resolve and include.</param>
            <param name="once">Whether to include according to include once semantics.</param>
            <param name="throwOnError">Whether to include according to require semantics.</param>
            <returns>Inclusion result value.</returns>
        </member>
        <member name="M:Pchp.Core.Context.Include(System.String,System.String,Pchp.Core.PhpArray,System.Object,System.RuntimeTypeHandle,System.Boolean,System.Boolean)">
            <summary>
            Resolves path according to PHP semantics, lookups the file in runtime tables and calls its Main method.
            </summary>
            <param name="cd">Current script directory. Used for relative path resolution. Can be <c>null</c> to not resolve against current directory.</param>
            <param name="path">The relative or absolute path to resolve and include.</param>
            <param name="locals">Variables scope for the included script.</param>
            <param name="this">Reference to <c>this</c> variable.</param>
            <param name="self">Reference to current class context.</param>
            <param name="once">Whether to include according to include once semantics.</param>
            <param name="throwOnError">Whether to include according to require semantics.</param>
            <returns>Inclusion result value.</returns>
        </member>
        <member name="M:Pchp.Core.Context.TryIncludeFileContent(System.String)">
            <summary>
            Tries to read a file and outputs its content.
            </summary>
            <param name="path">Path to the file. Will be resolved using available stream wrappers.</param>
            <returns><c>true</c> if file was read and outputted, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Pchp.Core.Context.RegisterShutdownCallback(System.Action{Pchp.Core.Context})">
            <summary>
            Enqueues a callback to be invoked at the end of request.
            </summary>
            <param name="action">Callback. Cannot be <c>null</c>.</param>
        </member>
        <member name="M:Pchp.Core.Context.ProcessShutdownCallbacks">
            <summary>
            Invokes callbacks in <see cref="F:Pchp.Core.Context._lazyShutdownCallbacks"/> and disposes the list.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.ShutdownSessionHandler">
            <summary>
            Closes current web session if opened.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.OnUnhandledException(System.Exception)">
            <summary>
            Handles program unhandled exception according to PHP's semantic.
            If no user exception handler is defined, the function returns <c>false</c>.
            </summary>
            <param name="exception">Unhandled exception. Cannot be <c>null</c>.</param>
            <returns>Value indicating the exception was handled.</returns>
        </member>
        <member name="M:Pchp.Core.Context.ApplyExecutionTimeout(System.TimeSpan)">
            <summary>
            Sets the request time limit, from now.
            Infinite span causes the pending time limit to be canceled.
            </summary>
            <param name="span"></param>
        </member>
        <member name="M:Pchp.Core.Context.ApplyExecutionTimeout(System.Int32)">
            <summary>
            Sets the request time limit, from now.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context._temporaryFiles">
            <summary>
            A list of temporary files which was created during the request and should be deleted at its end.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.DeleteTemporaryFiles">
            <summary>
            Silently deletes all temporary files.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.AddTemporaryFile(System.String)">
            <summary>
            Adds temporary file to current handler's temp files list.
            </summary>
            <param name="path">A path to the file.</param>
        </member>
        <member name="M:Pchp.Core.Context.IsTemporaryFile(System.String)">
            <summary>
            Checks whether the given filename is a path to a temporary file
            (for example created using the filet upload mechanism).
            </summary>
            <remarks>
            The stored paths are checked case-insensitively.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Argument is a <B>null</B> reference.</exception>
        </member>
        <member name="M:Pchp.Core.Context.RemoveTemporaryFile(System.String)">
            <summary>
            Removes a file from a list of temporary files.
            </summary>
            <param name="path">A full path to the file.</param>
            <exception cref="T:System.ArgumentNullException">Argument is a <B>null</B> reference.</exception>
        </member>
        <member name="P:Pchp.Core.Context.IsDisposed">
            <summary>
            Gets value indicating the context has been disposed.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.DebugDisplay">
            <summary>The debug view text.</summary>
        </member>
        <member name="T:Pchp.Core.Context.ContextDebugView">
            <summary>Content in debug view.</summary>
        </member>
        <member name="P:Pchp.Core.Context.ErrorReportingDisabled">
            <summary>
            Gets whether error reporting is disabled or enabled.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.DisableErrorReporting">
            <summary>
            Disables error reporting. Can be called for multiple times. To enable reporting again 
            <see cref="M:Pchp.Core.Context.EnableErrorReporting"/> should be called as many times as <see cref="M:Pchp.Core.Context.DisableErrorReporting"/> was.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.EnableErrorReporting">
            <summary>
            Enables error reporting disabled by a single call to <see cref="M:Pchp.Core.Context.DisableErrorReporting"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.Assert(System.Boolean,Pchp.Core.PhpValue)">
            <summary>
            Performs debug assertion.
            </summary>
            <param name="condition">Condition to be checked.</param>
            <param name="action">Either nothing, a message or a <c>Throwable</c>(implementing <see cref="T:System.Exception"/>).</param>
            <returns></returns>
        </member>
        <member name="M:Pchp.Core.Context.AssertFailed(Pchp.Core.PhpValue)">
            <summary>
            Invoked by runtime when PHP assertion fails.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.InitOutput(System.IO.Stream,System.IO.TextWriter,System.Boolean)">
            <summary>
            Initialize output of this context.
            To be used by the context constructor.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context._textSink">
            <summary>
            Textual sink where buffered unicode output is flushed.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context._streamSink">
            <summary>
            Byte stream sink where buffered binary output is flushed.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.BufferedOutput">
            <summary>
            Buffered output associated with the context.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context._bufferedOutput">
            <remarks>Is <c>null</c> reference until it is not used for the first time.</remarks>
        </member>
        <member name="P:Pchp.Core.Context.Output">
            <summary>
            Stream where text output will be sent.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.OutputStream">
            <summary>
            Stream where binary output will be sent.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.IsOutputBuffered">
            <summary>
            Specifies whether script output is passed through <see cref="P:Pchp.Core.Context.BufferedOutput"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.FinalizeBufferedOutput">
            <summary>
            Flushes all remaining data from output buffers.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.StringEncoding">
            <summary>
            Encoding used to convert between unicode strings and binary strings.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.ServerApi">
            <summary>
            Gets name of the server API (aka <c>PHP_SAPI</c> PHP constant).
            Always a lowercase string. Cannot be <c>null</c>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.NumberFormat">
            <summary>
            Gets number format used for converting <see cref="T:System.Double"/> to <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.InvariantNumberFormatInfo">
            <summary>
            Gets invariant number format info for PHP semantic.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.IsWebApplication">
            <summary>
            Gets value indicating whether the application is a web application.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.HttpPhpContext">
            <summary>
            In case of a context providing web features,
            gets instance of <see cref="T:Pchp.Core.IHttpPhpContext"/> for HTTP request manipulation.
            
            If it is a console context or a class library context, the property gets a <c>null</c> reference.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.MainScriptFile">
            <summary>
            Gets or sets the initial script file.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.RootPath">
            <summary>
            Root directory (web root or console app root) where loaded scripts are relative to.
            The root path does not end with directory separator.
            </summary>
            <remarks>
            - <c>__FILE__</c> and <c>__DIR__</c> magic constants are resolved as concatenation with this value.
            - <see cref="P:Pchp.Core.Context.WorkingDirectory"/> is initialized with this value upon context is created.
            </remarks>
        </member>
        <member name="P:Pchp.Core.Context.WorkingDirectory">
            <summary>
            Current working directory.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.IncludePaths">
            <summary>
            Set of include paths to be used to resolve full file path.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.TargetPhpLanguage">
            <summary>
            Gets target PHP language specification.
            By default, this is reflected from the compiled PHP script.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.EnableImplicitAutoload">
            <summary>
            Gets value indicating whether not defined classes should be automatically included when used for the first time.
            Does not apply when SPL autoloading gets enabled.
            This is intended for package distribution without the need of specifying autoload class map or a similar mechanism.
            </summary>
            <remarks>See <see cref="M:Pchp.Core.Context.ImplicitAutoloadTypeByName(System.String)"/> for more details.</remarks>
        </member>
        <member name="P:Pchp.Core.Context.RecursionCheckToken.IsInRecursion">
            <summary>
            Gets value indicating whether the key is in recursion.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.RecursionCheckToken.Dispose">
            <summary>
            Exits recursion check.
            Must be called once.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context._lazyRecursionPrevention">
            <summary>
            Set of scopes we are entered into.
            Recursion prevention.
            </summary>
        </member>
        <member name="T:Pchp.Core.Context.ScriptOptions">
            <summary>
            Script options.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.ScriptOptions.Context">
            <summary>
            Script context.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.ScriptOptions.Location">
            <summary>
            The path and location within the script source if it originated from a file, empty otherwise.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.ScriptOptions.EmitDebugInformation">
            <summary>
            Specifies whether debugging symbols should be emitted.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.ScriptOptions.IsSubmission">
            <summary>
            Value indicating the script is a submission (without opening PHP tag).
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.ScriptOptions.AdditionalReferences">
            <summary>
            Optional. Collection of additional metadata references.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.ScriptOptions.LanguageVersion">
            <summary>
            Optional.
            Sets the language version.
            By default, it uses the version of currently running scripts, or the latest version available.
            </summary>
        </member>
        <member name="T:Pchp.Core.Context.IScript">
            <summary>
            Encapsulates a compiled script that can be evaluated.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.IScript.Evaluate(Pchp.Core.Context,Pchp.Core.PhpArray,System.Object,System.RuntimeTypeHandle)">
            <summary>
            Evaluates the script.
            </summary>
            <param name="ctx">Current runtime context.</param>
            <param name="locals">Array of local variables.</param>
            <param name="this">Optional. Reference to current <c>$this</c> object.</param>
            <param name="self">Optional. Current type context in which the script is included. Used to resolve <c>self</c> and <c>parent</c> in evaluated script.</param>
            <returns>Return value of the script.</returns>
        </member>
        <member name="M:Pchp.Core.Context.IScript.GetGlobalRoutineHandle(System.String)">
            <summary>
            Resolves global function handle(s).
            </summary>
        </member>
        <member name="T:Pchp.Core.Context.IScriptingProvider">
            <summary>
            Provides dynamic scripts compilation in current context.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.IScriptingProvider.CreateScript(Pchp.Core.Context.ScriptOptions,System.String)">
            <summary>
            Gets compiled code.
            </summary>
            <param name="options">Compilation options.</param>
            <param name="code">Script source code.</param>
            <returns>Compiled script instance.</returns>
        </member>
        <member name="P:Pchp.Core.Context.ScriptingProvider">
            <summary>
            Gets dynamic scripting provider.
            Cannot be <c>null</c>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.DefaultScriptingProvider">
            <summary>
            Gets dynamic scripting provider.
            Cannot be <c>null</c>.
            </summary>
        </member>
        <member name="T:Pchp.Core.Context.ScriptIndexHolder`1">
            <summary>
            Helper generic class holding an app static index.
            </summary>
            <typeparam name="T">Type of object kept as context static.</typeparam>
        </member>
        <member name="P:Pchp.Core.Context.ScriptIndexHolder`1.Index">
            <summary>
            Index of the main script contained in type <typeparamref name="T"/>.
            The value is indexed by its file path (scripts with the same path will have the same ID).
            The index is zero-based.
            </summary>
        </member>
        <member name="T:Pchp.Core.Context.MainDelegate">
            <summary>
            Signature of the scripts main method.
            </summary>
            <param name="ctx">Reference to current context. Cannot be <c>null</c>.</param>
            <param name="locals">Reference to variables scope. Cannot be <c>null</c>. Can refer to either globals or new array locals.</param>
            <param name="this">Reference to self in case the script is called within an instance method.</param>
            <param name="self">Reference to current class context.</param>
            <returns>Result of the main method call.</returns>
        </member>
        <member name="T:Pchp.Core.Context.ScriptInfo">
            <summary>
            Script descriptor.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.ScriptInfo.Empty">
            <summary>
            Undefined script.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.ScriptInfo.ScriptTypeName">
            <summary>
            Compiler generated type containing reflection and entry information.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.ScriptInfo.IsValid">
            <summary>
            Whether the script is defined.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.ScriptInfo.Index">
            <summary>
            Internal ID.
            Index to the internal array of compiled scripts.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.ScriptInfo.Path">
            <summary>
            Script path, relative to the <see cref="P:Pchp.Core.Context.RootPath"/>.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.ScriptInfo.MainMethod">
            <summary>
            Emtry method (main method) of the script.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.ScriptInfo.GetScriptType">
            <summary>
            Gets the type containing the <see cref="F:Pchp.Core.Context.ScriptInfo.MainMethod"/>.
            </summary>
            <returns>The type or <c>null</c>.</returns>
        </member>
        <member name="M:Pchp.Core.Context.ScriptInfo.Evaluate(Pchp.Core.Context,Pchp.Core.PhpArray,System.Object,System.RuntimeTypeHandle)">
            <summary>
            Runs the script.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.ScriptInfo.GetGlobalRoutineHandle(System.String)">
            <summary>
            Resolves global function handle(s).
            </summary>
        </member>
        <member name="T:Pchp.Core.Context.ScriptsMap">
            <summary>
            Manages map of known scripts and bit array of already included.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.ScriptsMap._included">
            <summary>
            Mask of script indexes that has been included.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.ScriptsMap.s_scriptsMap">
            <summary>
            Maps script paths to their id.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.ScriptsMap.s_dirsMap">
            <summary>
            Set of script directories and contained script ids.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.ScriptsMap.s_lock">
            <summary>
            <see cref="F:Pchp.Core.Context.ScriptsMap.s_scriptsMap"/> and <see cref="F:Pchp.Core.Context.ScriptsMap.s_dirsMap"/> lock.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.ScriptsMap.s_autoloadfiles">
            <summary>
            Scripts marked as to be autoloaded.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.ScriptsMap.s_scripts">
            <summary>
            Scripts descriptors corresponding to id.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.ScriptsMap.Create">
            <summary>
            Initialize the <see cref="T:Pchp.Core.Context.ScriptsMap"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.ScriptsMap.AutoloadFiles(Pchp.Core.Context)">
            <summary>
            Invokes scripts marked as to be autoloaded.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.ScriptsMap.AddAutoload(Pchp.Core.Context.ScriptInfo)">
            <summary>
            Sets the script to be autoloaded before request starts.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.ScriptsMap.EnsureScriptIndex(System.String@)">
            <summary>
            Associates path with an ID.
            Does not declare the script within <see cref="F:Pchp.Core.Context.ScriptsMap.s_scripts"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.ScriptsMap.ResolveInclude(System.String,System.String,System.String[],System.String,System.String)">
            <summary>
            Resolves script corresponding to given parameters.
            </summary>
            <param name="path">Requested script path, absolute or relative in PHP manner.</param>
            <param name="root_path">The application root path. All scripts are relative to this directory.</param>
            <param name="include_path">List of include paths (absolute or relative) to search in. Can be <c>null</c>.</param>
            <param name="working_dir">Current working directory to search in after <paramref name="include_path"/>. Also <c>.</c> and <c>..</c> are relative to this directory.</param>
            <param name="script_dir">The directory of the currently executing script. Normalized. Can be <c>null</c>. Is relative to <paramref name="root_path"/>.</param>
            <returns>Script descriptor or empty an invalid script in case path inclusion cannot be resolved.</returns>
        </member>
        <member name="M:Pchp.Core.Context.ScriptsMap.GetIncludedScripts">
            <summary>
            Gets enumeration of scripts that were included in current context.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.ScriptsMap.TryGetDirectory(System.String,Pchp.Core.Context.ScriptInfo[]@)">
            <summary>
            Gets scripts in given directory. The path is relative to application root (<see cref="P:Pchp.Core.Context.RootPath"/>).
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.GetStatic``1(System.UInt32)">
            <summary>
            Gets static object instance within the context with given index.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.TryGetProperty``1">
            <summary>
            Tries to get a static property stored within context.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.SetProperty``1(``0)">
            <summary>
            Sets a static property to be stored within context.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.EnsureStatics(System.UInt32)">
            <summary>
            Ensures the <see cref="F:Pchp.Core.Context._statics"/> array has sufficient size to hold <paramref name="idx"/>;
            </summary>
            <param name="idx">Index of an object to be stored within statics.</param>
        </member>
        <member name="M:Pchp.Core.Context.GetStatic``1(System.Object@)">
            <summary>
            Ensures the context static object is initialized.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.GetStatic``1">
            <summary>
            Gets context static object of type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Type of the object to be stored within context.</typeparam>
        </member>
        <member name="M:Pchp.Core.Context.TryGetStatic``1(``0@)">
            <summary>
            Gets context static object of type <typeparamref name="T"/> if it was addedinto the context already.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context._statics">
            <summary>
            Static objects within the context.
            Cannot be <c>null</c>.
            </summary>
        </member>
        <member name="T:Pchp.Core.Context.IStreamWrapper">
            <summary>
            Core stream wrapper interface providing I/O operations by protocol.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.IStreamWrapper.ResolveInclude(Pchp.Core.Context,System.String,System.String,Pchp.Core.Context.ScriptInfo@)">
            <summary>
            Tries to resolve compiled script at given path.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.RegisterGlobalStreamWrapper(System.Lazy{Pchp.Core.Context.IStreamWrapper,System.String})">
            <summary>
            Sets a stresm wrapper for given scheme.
            Previously set stream wrapper is overwritten.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.GetGlobalStreamWrapper(System.String)">
            <summary>
            Gets registered stream wrapper for given scheme.
            </summary>
            <returns>Stream wrapper instance or <c>null</c> if there is no wrapper registered for the given scheme or the wrapper factory method returned <c>null</c>.</returns>
        </member>
        <member name="M:Pchp.Core.Context.GetGlobalStreamWrappers">
            <summary>
            Gets enumeration of registered global stream wrappers.
            </summary>
        </member>
        <member name="T:Pchp.Core.Context.Superglobals">
            <summary>
            Superglobals holder.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.Superglobals.globals">
            <summary>
            Content of superglobal variables.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.Superglobals.server">
            <summary>
            Content of superglobal variables.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.Superglobals.env">
            <summary>
            Content of superglobal variables.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.Superglobals.request">
            <summary>
            Content of superglobal variables.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.Superglobals.files">
            <summary>
            Content of superglobal variables.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.Superglobals.get">
            <summary>
            Content of superglobal variables.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.Superglobals.post">
            <summary>
            Content of superglobal variables.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.Superglobals.session">
            <summary>
            Content of superglobal variables.
            </summary>
        </member>
        <member name="F:Pchp.Core.Context.Superglobals.cookie">
            <summary>
            Content of superglobal variables.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.Superglobals.AddVariable(Pchp.Core.PhpArray,System.String,Pchp.Core.PhpValue,System.String)">
            <summary>
            Adds a variable to auto-global array.
            </summary>
            <param name="array">The array.</param>
            <param name="name">A unparsed name of variable.</param>
            <param name="value">A value to be added.</param>
            <param name="subname">A name of intermediate array inserted before the value.</param>
        </member>
        <member name="M:Pchp.Core.Context.Superglobals.AddVariables(Pchp.Core.PhpArray,Pchp.Core.PhpArray)">
            <summary>
            Adds variables from one auto-global array to another.
            </summary>
            <param name="dst">The target array.</param>
            <param name="src">The source array.</param>
            <remarks>Variable values are deeply copied.</remarks>
        </member>
        <member name="M:Pchp.Core.Context.Superglobals.AddFormFile(Pchp.Core.PhpArray,System.String,System.String,System.String,System.String,System.Int32,System.Int64)">
            <summary>
            Adds a form file to the <c>$_FILES</c> array.
            </summary>
            <param name="files">The $_FILES array.</param>
            <param name="field_name">Form field name.</param>
            <param name="file_name">Original file name, without the directory name.</param>
            <param name="type">Content type.</param>
            <param name="tmp_name">Local full file path where is the uploaded file temporarily stored.</param>
            <param name="error">Error code number.</param>
            <param name="file_length">Uploaded file size in bytes.</param>
        </member>
        <member name="M:Pchp.Core.Context.Superglobals.AddFileVariablesToGlobals(Pchp.Core.PhpArray,Pchp.Core.PhpArray)">
            <summary>
            Adds file variables from $_FILE array to $GLOBALS array.
            </summary>
            <param name="globals">$GLOBALS array.</param>
            <param name="files">$_FILES array.</param>
        </member>
        <member name="P:Pchp.Core.Context.Superglobals.StaticEnv">
            <summary>
            Application wide $_ENV array.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.InitSuperglobals">
            <summary>
            Must be called by derived constructor to initialize content of superglobal variables.
            </summary>
        </member>
        <member name="M:Pchp.Core.Context.InitGlobals(System.String)">
            <summary>
            Initializes <c>_GLOBALS</c> array.
            </summary>
            <param name="registering_order"><c>EGPCS</c> or <c>null</c> if register globals is disabled (default).</param>
        </member>
        <member name="M:Pchp.Core.Context.InitServerVariable">
            <summary>Initialize $_SERVER global variable.</summary>
        </member>
        <member name="M:Pchp.Core.Context.InitRequestVariable(Pchp.Core.PhpArray,Pchp.Core.PhpArray,Pchp.Core.PhpArray,System.String)">
            <summary>Initialize $_REQUEST global variable.</summary>
        </member>
        <member name="M:Pchp.Core.Context.InitGetVariable">
            <summary>Initialize $_GET global variable.</summary>
        </member>
        <member name="M:Pchp.Core.Context.InitPostVariable">
            <summary>Initialize $_POST global variable.</summary>
        </member>
        <member name="M:Pchp.Core.Context.InitFilesVariable">
            <summary>Initialize $_FILES global variable.</summary>
            <remarks>
            <list type="bullet">
              <item>$_FILES[{var_name}]['name'] - The original name of the file on the client machine.</item>
              <item>$_FILES[{var_name}]['type'] - The mime type of the file, if the browser provided this information. An example would be "image/gif".</item>
              <item>$_FILES[{var_name}]['size'] - The size, in bytes, of the uploaded file.</item> 
              <item>$_FILES[{var_name}]['tmp_name'] - The temporary filename of the file in which the uploaded file was stored on the server.</item>
              <item>$_FILES[{var_name}]['error'] - The error code associated with this file upload.</item> 
            </list>
            </remarks>
        </member>
        <member name="M:Pchp.Core.Context.InitCookieVariable">
            <summary>Initialize $_COOKIE global variable.</summary>
        </member>
        <member name="P:Pchp.Core.Context.Globals">
            <summary>
            Array of global variables.
            Cannot be <c>null</c>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.Server">
            <summary>
            Array of server and execution environment information.
            Cannot be <c>null</c>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.Env">
            <summary>
            An associative array of variables passed to the current script via the environment method.
            Cannot be <c>null</c>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.Request">
            <summary>
            An array that by default contains the contents of $_GET, $_POST and $_COOKIE.
            Cannot be <c>null</c>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.Get">
            <summary>
            An associative array of variables passed to the current script via the URL parameters.
            Cannot be <c>null</c>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.Post">
            <summary>
            An associative array of variables passed to the current script via the HTTP POST method.
            Cannot be <c>null</c>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.Files">
            <summary>
            An associative array of items uploaded to the current script via the HTTP POST method.
            Cannot be <c>null</c>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.Session">
            <summary>
            An associative array containing session variables available to the current script.
            Can be <c>null</c>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.Cookie">
            <summary>
            An associative array of variables passed to the current script via the HTTP POST method.
            Cannot be <c>null</c>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Context.HttpRawPostData">
            <summary>
            Gets value of <c>$HTTP_RAW_POST_DATA</c> variable.
            Note this variable has been removed in PHP 7.0 and should not be used.
            </summary>
        </member>
        <member name="T:Pchp.Core.IPhpAutoloadService">
            <summary>
            An interface providing methods for the autoload mechanism in PHP.
            </summary>
        </member>
        <member name="M:Pchp.Core.IPhpAutoloadService.AutoloadTypeByName(System.String)">
            <summary>
            Performs autoload of given type name and gets its <see cref="T:Pchp.Core.Reflection.PhpTypeInfo"/> (type descriptor).
            </summary>
            <param name="fullName">Full class, interface or trait name.</param>
            <returns>Type descriptor or a <c>null</c> reference if the process couldn't resolve the type.</returns>
        </member>
        <member name="T:Pchp.Core.IPhpConfigurationService">
            <summary>
            Interface providing access to configuration.
            </summary>
        </member>
        <member name="M:Pchp.Core.IPhpConfigurationService.Get``1">
            <summary>
            Gets collection of options.
            </summary>
            <typeparam name="TOptions">Type providing the options.</typeparam>
            <returns>The instance of options or <c>null</c> if such options were not registered.</returns>
        </member>
        <member name="P:Pchp.Core.IPhpConfigurationService.Parent">
            <summary>
            Gets parent service providing default values.
            </summary>
        </member>
        <member name="P:Pchp.Core.IPhpConfigurationService.Core">
            <summary>
            Gets core configuration.
            Alias to <see cref="M:Pchp.Core.IPhpConfigurationService.Get``1"/>.
            </summary>
        </member>
        <member name="T:Pchp.Core.IPhpConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pchp.Core.IPhpConfiguration.ExtensionName">
            <summary>
            Gets the corresponding extension name.
            </summary>
        </member>
        <member name="M:Pchp.Core.IPhpConfiguration.Copy">
            <summary>
            Creates the configuration copy.
            </summary>
            <returns>New instance of <c>this</c> with copied values.</returns>
        </member>
        <member name="F:Pchp.Core.PhpCoreConfiguration.EGPCS">
            <summary>
            "EGPCS" string.
            Default for <see cref="P:Pchp.Core.PhpCoreConfiguration.RegisteringOrder"/> and <see cref="P:Pchp.Core.PhpCoreConfiguration.VariablesOrder"/>.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpCoreConfiguration.RegisteringOrder">
            <summary>
            The order in which global will be added to <c>$GLOBALS</c> and 
            <c>$_REQUEST</c> arrays. Can contain only a permutation of "EGPCS" string.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpCoreConfiguration.ValidateRegisteringOrder(System.String)">
            <summary>
            Checks whether a specified value is global valid variables registering order.
            </summary>
            <param name="value">The value.</param>
            <returns>Whether <paramref name="value"/> contains a permutation of "EGPCS".</returns>
        </member>
        <member name="P:Pchp.Core.PhpCoreConfiguration.VariablesOrder">
            <summary>
            <c>variables_order</c> directive.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpCoreConfiguration.ExecutionTimeout">
            <summary>
            Execution timeout in seconds.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpCoreConfiguration.IgnoreUserAbort">
            <summary>
            Whether not to abort on client disconnection.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpCoreConfiguration.AllowUrlFopen">
            <summary>
            Whether file names can be specified as URL (and thus allows to use streams).
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpCoreConfiguration.UserAgent">
            <summary>
            A user agent to send when communicating as client over HTTP.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpCoreConfiguration.DefaultSocketTimeout">
            <summary>
            Default timeout for socket based streams.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpCoreConfiguration.DefaultFileOpenMode">
            <summary>
            A default file open mode used when it is not specified in <c>fopen</c> function explicitly. 
            You can specify either "b" for binary mode or "t" for text mode. Any other value is treated as
            if there is no default value.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpCoreConfiguration.AnonymousFtpPassword">
            <summary>
            A password used when logging to FTP server as an anonymous client.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpCoreConfiguration.IncludePaths">
            <summary>
            A list of semicolon-separated separated by ';' (<c>PATH_SEPARATOR</c>) where file system functions and dynamic 
            inclusion constructs searches for files. A <B>null</B> or an empty string means empty list.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpCoreConfiguration.DefaultIncludePaths">
            <summary>
            Default <see cref="F:Pchp.Core.PhpCoreConfiguration.IncludePaths"/> value.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpCoreConfiguration.IncludePathsArray">
            <summary>
            Gets <see cref="F:Pchp.Core.PhpCoreConfiguration.IncludePaths"/> split into array.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpCoreConfiguration.UserExceptionHandler">
            <summary>
            An exception handler for not handled program exceptions.
            Can be <c>null</c> to not handle exceptions.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpCoreConfiguration.UserErrorHandler">
            <summary>
            An error handler
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpCoreConfiguration.DisplayStartupErrors">
            <summary>
            Whether to throw startup errors.
            </summary>
            <remarks>Actually ignored, there are no startup errors. Errors are handled in compile time already, or .NET assembly loader.</remarks>
        </member>
        <member name="T:Pchp.Core.IStaticInit">
            <summary>
            If implemented on a request-static holder,
            context performs its one-time initialization.
            </summary>
        </member>
        <member name="M:Pchp.Core.IStaticInit.Init(Pchp.Core.Context)">
            <summary>
            One-time initialization routine called by context when instance is created.
            </summary>
        </member>
        <member name="T:Pchp.Core.IPhpConvertible">
            <summary>
            Interface provides methods for conversion between PHP.NET types.
            </summary>
        </member>
        <member name="M:Pchp.Core.IPhpConvertible.ToDouble">
            <summary>
            Converts the object to <see cref="T:System.Double"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pchp.Core.IPhpConvertible.ToLong">
            <summary>
            Converts the object to <see cref="T:System.Int64"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pchp.Core.IPhpConvertible.ToBoolean">
            <summary>
            Converts the object to <see cref="T:System.Boolean"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pchp.Core.IPhpConvertible.ToNumber(Pchp.Core.PhpNumber@)">
            <summary>
            Converts the object to a number.
            </summary>
        </member>
        <member name="M:Pchp.Core.IPhpConvertible.ToString">
            <summary>
            Converts instance to its string representation according to PHP conversion algorithm.
            </summary>
        </member>
        <member name="M:Pchp.Core.IPhpConvertible.ToClass">
            <summary>
            In case of a non class object, boxes value to an object.
            </summary>
        </member>
        <member name="M:Pchp.Core.IPhpConvertible.ToArray">
            <summary>
            Converts the object to array.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ToString(System.Boolean)">
            <summary>
            Gets string representation of a boolean value (according to PHP, it is <c>"1"</c> or <c>""</c>).
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ToString(System.Int64)">
            <summary>
            Gets string representation of an integer value.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ToString(System.Int32)">
            <summary>
            Gets string representation of an integer value.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ToString(System.Double)">
            <summary>
            Gets string representation of a floating point number value.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ToString(System.Object)">
            <summary>
            Converts class instance to a string.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ToString(Pchp.Core.PhpString,Pchp.Core.Context)">
            <summary>
            Converts mutable string to string.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ToString(System.Byte[],Pchp.Core.Context)">
            <summary>
            Gets value as a string.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ToBytes(Pchp.Core.PhpString,Pchp.Core.Context)">
            <summary>
            Converts mutable string to byte[].
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ToBytes(System.String,Pchp.Core.Context)">
            <summary>
            Converts mutable string to byte[].
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ToBytes(Pchp.Core.PhpValue,Pchp.Core.Context)">
            <summary>
            Converts mutable string to byte[].
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ToChar(System.String)">
            <summary>
            Converts string to a single character.
            </summary>
            <param name="str">The string to convert.</param>
            <returns>The first character of the string.</returns>
            <exception cref="T:Pchp.Core.PhpException"><paramref name="str"/> doesn't consist of a single character. (Warning)</exception>
        </member>
        <member name="M:Pchp.Core.Convert.ToChar(Pchp.Core.PhpValue)">
            <summary>
            Converts string to a single character.
            </summary>
            <returns>The first character of the string.</returns>
            <exception cref="T:Pchp.Core.PhpException"><paramref name="value"/> doesn't consist of a single character. (Warning)</exception>
        </member>
        <member name="M:Pchp.Core.Convert.ToBoolean(System.String)">
            <summary>
            Converts string to boolean according to PHP.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ToBoolean(System.Byte[])">
            <summary>
            Converts string to boolean according to PHP.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ToBoolean(System.Char[])">
            <summary>
            Converts string to boolean according to PHP.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ToBoolean(Pchp.Core.Text.BlobChar[])">
            <summary>
            Converts string to boolean according to PHP.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ToBoolean(Pchp.Core.PhpString)">
            <summary>
            Converts string to boolean according to PHP.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ToBoolean(System.Object)">
            <summary>
            Converts class instance to boolean according to PHP.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ToBoolean(Pchp.Core.IPhpConvertible)">
            <summary>
            Converts to boolean according to PHP.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.AsObject(Pchp.Core.PhpValue)">
            <summary>
            Gets underlaying class instance or <c>null</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ToArray(Pchp.Core.PhpValue)">
            <summary>
            Converts value to an array.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.AsArray(Pchp.Core.PhpValue)">
            <summary>
            Casts value to <see cref="T:Pchp.Core.PhpArray"/> or <c>null</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ClassToArray(System.Object)">
            <summary>
            Creates <see cref="T:Pchp.Core.PhpArray"/> from object's properties.
            </summary>
            <param name="obj">Object instance.</param>
            <returns>Array containing given object properties keyed according to PHP specifications.</returns>
        </member>
        <member name="M:Pchp.Core.Convert.ToPhpString(Pchp.Core.PhpValue,Pchp.Core.Context)">
            <summary>
            Gets the underlying PHP string if present, a new PHP string representing the value otherwise.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ToClass(Pchp.Core.PhpValue)">
            <summary>
            Converts given value to a class object.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ToClass(Pchp.Core.IPhpArray)">
            <summary>
            Converts given array object to <see cref="T:stdClass"/>.
            </summary>
            <param name="array">Non-null reference to a PHP array.</param>
            <returns>New instance of <see cref="T:stdClass"/> with runtime fields filled from given array.</returns>
        </member>
        <member name="M:Pchp.Core.Convert.AsCallable(Pchp.Core.PhpValue,System.RuntimeTypeHandle,System.Object)">
            <summary>
            Gets value as a callable object that can be invoked dynamically.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.AsCallable(System.String,System.RuntimeTypeHandle,System.Object)">
            <summary>
            Creates a callable object from string value.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.AsCallable(Pchp.Core.PhpArray,System.RuntimeTypeHandle,System.Object)">
            <summary>
            Creates a callable object from string value.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.IsInstanceOf(System.Object,Pchp.Core.Reflection.PhpTypeInfo)">
            <summary>
            Resolves whether given instance <paramref name="obj"/> is of given type <paramref name="tinfo"/>.
            </summary>
            <param name="obj">Value to be checked.</param>
            <param name="tinfo">Type descriptor.</param>
            <returns>Whether <paramref name="obj"/> is of type <paramref name="tinfo"/>.</returns>
        </member>
        <member name="M:Pchp.Core.Convert.ToNumber(System.String)">
            <summary>
            Converts given string to a number.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ToNumber(Pchp.Core.PhpValue)">
            <summary>
            Performs conversion of a value to a number.
            Additional conversion warnings may be thrown.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ToNumber(Pchp.Core.PhpString)">
            <summary>
            Performs conversion of a value to a number.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ToIntStringKey(Pchp.Core.PhpValue)">
            <summary>
            Converts given value to an array key.
            </summary>
            <exception cref="T:System.ArgumentException">The value cannot be converted to <see cref="T:Pchp.Core.IntStringKey"/>.</exception>
        </member>
        <member name="M:Pchp.Core.Convert.TryToIntStringKey(Pchp.Core.PhpValue,Pchp.Core.IntStringKey@)">
            <summary>
            Tries conversion to an array key.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.StringToArrayKey(System.String)">
            <summary>
            Converts a string to an appropriate integer.
            </summary>
            <param name="str">The string in "{0 | -?[1-9][0-9]*}" format.</param>
            <returns>The array key (integer or string).</returns>
        </member>
        <member name="T:Pchp.Core.Convert.NumberInfo">
            <summary>
            A result of number conversion algorithm.
            </summary>
        </member>
        <member name="F:Pchp.Core.Convert.NumberInfo.IsPhpArray">
            <summary>
            The original object was PHP array. This has an effect on most PHP arithmetic operators.
            </summary>
        </member>
        <member name="F:Pchp.Core.Convert.NumberInfo.IsString">
            <summary>
            The original value was a string.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.AlphaNumericToDigit(System.Char)">
            <summary>
            Converts a character to a digit.
            </summary>
            <param name="c">The character [0-9A-Za-z].</param>
            <returns>The digit represented by the character or <see cref="F:System.Int32.MaxValue"/> 
            on non-alpha-numeric characters.</returns>
        </member>
        <member name="M:Pchp.Core.Convert.IsNumber(System.String,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int64@,System.Double@)">
            <summary>
            Converts a string to integer value and double value and decides whether it represents a number as a whole.
            </summary>
            <param name="s">The string to convert.</param>
            <param name="limit">Maximum zero-based index within given <paramref name="s"/> to be proccessed.
            Must be greater than or equal <c>0</c> and less than or equal to string length.</param>
            <param name="from">
            A position where to start parsing.
            </param>
            <param name="l">
            Returns a position where long-integer-parsing ended 
            (the first character not included in the resulting double value).
            </param>
            <param name="d">
            Returns a position where double-parsing ended
            (the first character not included in the resulting double value).
            </param>
            <param name="longValue">Result of the conversion to long integer.</param>
            <param name="doubleValue">Result of the conversion to double.</param>
            <returns>
            Information about parsed number including its type, which is the narrowest one that fits.
            E.g. 
            IsNumber("10 xyz", ...) includes NumberInfo.Integer,
            IsNumber("10000000000000 xyz", ...) includes NumberInfo.LongInteger,
            IsNumber("10.9 xyz", ...) includes NumberInfo.Double,
            IsNumber("10.9", ...) includes NumberInfo.IsNumber and NumberInfo.Double.
            
            The return value always includes one of NumberInfo.Integer, NumberInfo.LongInteger, NumberInfo.Double
            and never NumberInfo.Unconvertible (as each string is convertible to a number).
            </returns>
        </member>
        <member name="M:Pchp.Core.Convert.ParseDouble(System.String,System.Boolean,System.Double@)">
            <summary>
            Parses given string as a <see cref="T:System.Double"/>, using invariant culture and proper number styles.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.StringToNumber(System.String,System.Int64@,System.Double@)">
            <summary>
            Converts string into integer, long integer and double value using conversion algorithm in a manner of PHP. 
            </summary>
            <param name="str">The string to convert.</param>
            <param name="longValue">The result of conversion to long integer.</param>
            <param name="doubleValue">The result of conversion to double.</param>
            <returns><see cref="T:Pchp.Core.Convert.NumberInfo"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="str"/> is a <B>null</B> reference.</exception>
        </member>
        <member name="M:Pchp.Core.Convert.StringToLongInteger(System.String)">
            <summary>
            Converts a string to long integer using conversion algorithm in a manner of PHP.
            </summary>
            <param name="str">The string to convert.</param>
            <returns>The result of conversion.</returns>
        </member>
        <member name="M:Pchp.Core.Convert.StringToDouble(System.String)">
            <summary>
            Converts a string to double using conversion algorithm in a manner of PHP.
            </summary>
            <param name="str">The string to convert.</param>
            <returns>The result of conversion.</returns>
        </member>
        <member name="M:Pchp.Core.Convert.SubstringToLongInteger(System.String,System.Int32,System.Int32@)">
            <summary>
            Converts a part of a string starting on a specified position to a long integer.
            </summary>
            <param name="str">The string to be parsed.</param>
            <param name="length">Maximal length of the substring to parse.</param>
            <param name="position">
            The position where to start. Points to the first character after the substring storing the integer
            when returned.
            </param>
            <returns>The integer stored in the <paramref name="str"/>.</returns>
        </member>
        <member name="M:Pchp.Core.Convert.SubstringToDouble(System.String,System.Int32,System.Int32@)">
            <summary>
            Converts a part of a string starting on a specified position to a double.
            </summary>
            <param name="str">The string to be parsed. Cannot be <c>null</c>.</param>
            <param name="length">Maximal length of the substring to parse.</param>
            <param name="position">
            The position where to start. Points to the first character after the substring storing the double
            when returned.
            </param>
            <returns>The double stored in the <paramref name="str"/>.</returns>
        </member>
        <member name="M:Pchp.Core.Convert.SubstringToLongStrict(System.String,System.Int32,System.Int32,System.Int64,System.Int32@)">
            <summary>
            Converts a substring to almost long integer in a specified base.
            Stops parsing if result overflows unsigned integer.
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.TryParseDigits(System.ReadOnlySpan{System.Char},System.Int32@,System.Boolean,System.Int32@,System.Int32@)">
            <summary>
            Helper method that constructs an integer from leading digits starting at s[offset].  "offset" is
            updated to contain an offset just beyond the last digit.  The number of digits consumed is returned in
            cntDigits.  The integer is returned (0 if no digits).  If the digits cannot fit into an Int32:
              1. If eatDigits is true, then additional digits will be silently discarded (don't count towards numDigits)
              2. If eatDigits is false, an overflow exception is thrown
            </summary>
        </member>
        <member name="M:Pchp.Core.Convert.ToDateTime(Pchp.Core.PhpValue)">
            <summary>
            Converts a value to <see cref="T:System.DateTime"/>.
            Supports
            - implicit conversions from an object (like PHP <c>DateTime</c>)
            - conversions from <see cref="T:System.String"/>.
            </summary>
            <exception cref="T:System.InvalidCastException">When an unsupported value is used.</exception>
        </member>
        <member name="T:Pchp.Core.StrictConvert">
            <summary>
            Strict type conversion operations.
            Throws an exception if type does not match and numeric conversion does not exist.
            </summary>
        </member>
        <member name="M:Pchp.Core.StrictConvert.ToDouble(Pchp.Core.PhpValue)">
            <summary>
            Explicit conversion to <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.StrictConvert.ToString(Pchp.Core.PhpValue,Pchp.Core.Context)">
            <summary>
            Gets value as a string or throws <c>TypeError</c> exception.
            </summary>
        </member>
        <member name="M:Pchp.Core.StrictConvert.ToString(System.Byte[],Pchp.Core.Context)">
            <summary>
            Gets value as a string.
            </summary>
        </member>
        <member name="M:Pchp.Core.StrictConvert.ToPhpString(Pchp.Core.PhpValue,Pchp.Core.Context)">
            <summary>
            Gets the underlying PHP string if present, a new PHP string representing the value otherwise.
            </summary>
        </member>
        <member name="M:Pchp.Core.StrictConvert.ToString(Pchp.Core.PhpArray)">
            <summary>
            Unconvertible.
            Throws <c>TypeError</c> exception.
            </summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.BinderFactory">
            <summary>
            Constructs callsite binders.
            </summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.BinderFactory.BinderKey">
            <summary>
            Cache key of a binder instance.
            </summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.BinderFactory.BinderKeyComparer">
            <summary>
            Comparer of <see cref="T:Pchp.Core.Dynamic.BinderFactory.BinderKey"/>.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.BinderFactory._bindersCache">
            <summary>
            Cache of instantiated binders.
            They hold rules cache which should be shared in order to not bind everythiung over and over.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.BinderHelpers.IsImplicitParameter(System.Reflection.ParameterInfo)">
            <summary>
            Determines the parameter is considered as implicitly passed by runtime.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.BinderHelpers.IsNullable_T(System.Type,System.Type@)">
            <summary>
            Gets value indicating the given type is of type <c>Nullable&lt;T&gt;</c>.
            </summary>
            <param name="type">Tested type.</param>
            <param name="T">In case <paramref name="type"/> is nullable, this will be set to the generic argument of given nullable.</param>
            <returns>Whether the type is nullable.</returns>
        </member>
        <member name="M:Pchp.Core.Dynamic.BinderHelpers.IsRuntimeChain(System.Type)">
            <summary>
            Checks the given type refers to <see cref="T:Pchp.Core.Dynamic.IRuntimeChain"/> value.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.BinderHelpers.IsRuntimeChain(System.Type,System.Reflection.MethodInfo@,System.Reflection.MethodInfo@)">
            <summary>
            Checks the given type refers to <see cref="T:Pchp.Core.Dynamic.IRuntimeChain"/> value.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.BinderHelpers.IsMandatoryParameter(System.Reflection.ParameterInfo)">
            <summary>
            Determines the parameter does not have a default value explicitly specified.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.BinderHelpers.DetermineClrSemantic(System.Reflection.ParameterInfo)">
            <summary>
            Determine whether the argument load complies with CLR semantic rather than PHP semantic.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.BinderHelpers.GetStatic_T_Method(System.Type)">
            <summary>
            Gets <see cref="M:Pchp.Core.Context.GetStatic``1"/> method bound to a type.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.BinderHelpers.TryTargetAsObject(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject@)">
            <summary>
            Access <paramref name="target"/> as object instance.
            </summary>
            <param name="target">Given target.</param>
            <param name="instance">Resolved instance with restrictions.</param>
            <returns>Whether <paramref name="target"/> contains an object instance.</returns>
            <remarks>Necessary restriction are already resolved within returned <paramref name="instance"/>.</remarks>
        </member>
        <member name="M:Pchp.Core.Dynamic.BinderHelpers.VariableMisusedAsObject(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
            Template: PhpException.VariableMisusedAsObject( var, bool ) : void
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.BinderHelpers.EmptyArray(System.Type)">
            <summary>
            Gets expression representing <code>Array&lt;paramref name="element_type"&gt;.Empty()</code>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.BinderHelpers.IsArgumentUnpacking(System.Linq.Expressions.Expression)">
            <summary>
            Determines whether given expression represents argument unpacking.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.BinderHelpers.LookupRuntimeFields(System.Type)">
            <summary>
            Find field corresponding to object's runtime fields.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.BinderHelpers.TryResolveDeclaredProperty(Pchp.Core.Reflection.PhpTypeInfo,System.Type,System.Boolean,System.String,Pchp.Core.Reflection.PhpPropertyInfo@)">
            <summary>
            Resolves property with respect to staticness and visibility.
            </summary>
            <param name="type">Property receiver.</param>
            <param name="classCtx">Current class context (visibility).</param>
            <param name="static">Whether to lookup static properties.</param>
            <param name="name">Property name.</param>
            <param name="property">Set to the resolved property. Can be set even the methods returns <c>false</c> which means the property is there but inaccessible.</param>
        </member>
        <member name="M:Pchp.Core.Dynamic.BinderHelpers.BindFuncInvoke``1(System.MulticastDelegate)">
            <summary>
            Compiles delegate that invokes a Func{Context, TOut} and converts the result to <typeparamref name="TResult"/>.
            </summary>
            <typeparam name="TResult">The result of expression.</typeparam>
            <param name="funcdelegate">The func delegate to be invoked.</param>
        </member>
        <member name="M:Pchp.Core.Dynamic.BinderHelpers.InvokeHandler(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression,Pchp.CodeAnalysis.Semantics.AccessMask,System.Linq.Expressions.Expression,System.Type)">
            <summary>
            Binds recursion check for property magic method.
            </summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.BinderHelpers.WriteBackInfo">
            <summary>
            Temporary information for parameters passed by CLR ref/out semantic.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.BinderHelpers.HasToBeCalledNonVirtually(System.Linq.Expressions.Expression,System.Reflection.MethodBase,System.Boolean)">
            <summary>
            Determines whether we has to use ".call" opcode explicitly.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.BinderHelpers.WrapInstanceMethodToStatic(System.Reflection.MethodInfo)">
            <summary>
            Builds MethodInfo as a static method calling an instance method nonvirtually inside.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.Cache.Operators.SetValue_PhpValueRef_PhpValue">
            <summary><see cref="M:Pchp.Core.Operators.SetValue(Pchp.Core.PhpValue@,Pchp.Core.PhpValue)"/>.</summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.Cache.Operators.PhpValue_ToArrayOrThrow">
            <summary>Get the underlying PhpArray, or <c>null</c>. Throws in case of a scalar or object.</summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.Cache.Operators.Cast_PhpValue_T">
            <summary>T Cast{T}(PhpValue)</summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.Cache.Object.ToString">
            <summary><see cref="T:System.Object"/>.</summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.Cache.GetMethod(System.Type,System.String,System.Type[])">
            <summary>
            Gets method info in given type.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.Cache.GetCtor(System.Type,System.Type[])">
            <summary>
            Gets .ctor in given type.
            </summary>
        </member>
        <member name="P:Pchp.Core.Dynamic.CallBinder.HasTarget">
            <summary>
            Gets value indicating whether the function has a target instance.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.CallBinder.ResolveMethods(Pchp.Core.Dynamic.CallSiteContext)">
            <summary>
            Resolves methods to be called.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.CallBinder.IsClrMagicCallWithParams(System.Reflection.MethodInfo)">
            <summary>
            Checks the method's signature is in format:
            - <c>(name, params T[])</c>
            - <c>(name, ...)</c>
            Ignores implicit arguments at the beginning of the signature.
            </summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.CallFunctionBinder">
            <summary>
            Binder to a global function call.
            </summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.CallInstanceMethodBinder">
            <summary>
            Binder to an instance function call.
            </summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.CallStaticMethodBinder">
            <summary>
            Binder to an instance function call.
            </summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.CallSiteContext">
            <summary>
            Provides information about the call.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.CallSiteContext.BindTraitSelf">
            <summary>
            In case <see cref="P:Pchp.Core.Dynamic.CallSiteContext.TargetType"/> is a trait definition,
            this method binds its <c>TSelf</c> generic parameter to current class context.
            </summary>
        </member>
        <member name="P:Pchp.Core.Dynamic.CallSiteContext.Arguments">
            <summary>
            Resolved actual arguments.
            </summary>
        </member>
        <member name="P:Pchp.Core.Dynamic.CallSiteContext.HasArgumentUnpacking">
            <summary>
            Gets value indicating there is an argument unpacking (<c>...</c>) in <see cref="P:Pchp.Core.Dynamic.CallSiteContext.Arguments"/> list.
            </summary>
        </member>
        <member name="P:Pchp.Core.Dynamic.CallSiteContext.Restrictions">
            <summary>
            Resolved binding restrictions.
            </summary>
        </member>
        <member name="P:Pchp.Core.Dynamic.CallSiteContext.Context">
            <summary>
            Runtime context expression.
            </summary>
        </member>
        <member name="P:Pchp.Core.Dynamic.CallSiteContext.CurrentContext">
            <summary>
            Current runtime context.
            </summary>
        </member>
        <member name="P:Pchp.Core.Dynamic.CallSiteContext.TargetInstance">
            <summary>
            Either instance or null.
            </summary>
        </member>
        <member name="P:Pchp.Core.Dynamic.CallSiteContext.LateStaticType">
            <summary>
            Optional. Late static bound type, results in <see cref="T:Pchp.Core.Reflection.PhpTypeInfo"/>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Dynamic.CallSiteContext.CurrentTargetInstance">
            <summary>
            Current target instance or <c>null</c>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Dynamic.CallSiteContext.TargetType">
            <summary>
            Gets <see cref="T:Pchp.Core.Reflection.PhpTypeInfo"/> of target if any.
            </summary>
        </member>
        <member name="P:Pchp.Core.Dynamic.CallSiteContext.ClassContext">
            <summary>
            Current class context.
            </summary>
        </member>
        <member name="P:Pchp.Core.Dynamic.CallSiteContext.IndirectName">
            <summary>
            Name specified indirectly.
            </summary>
        </member>
        <member name="P:Pchp.Core.Dynamic.CallSiteContext.Name">
            <summary>
            Gets member name if set in compile time or if provided by <see cref="P:Pchp.Core.Dynamic.CallSiteContext.IndirectName"/>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Dynamic.CallSiteContext.TypeArguments">
            <summary>
            Type arguments in case of a generic method call.
            Can be <c>null</c> or empty array.
            </summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.ConversionCost">
            <summary>
            Conversion value used for overload resolution.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.ConversionCost.Pass">
            <summary>
            No conversion is needed. Best case.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.ConversionCost.PassCostly">
            <summary>
            The operation is costly but the value is kept without loosing precision.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.ConversionCost.ImplicitCast">
            <summary>
            Conversion using implicit cast without loosing precision.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.ConversionCost.LoosingPrecision">
            <summary>
            Conversion using explicit cast that may loose precision.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.ConversionCost.Warning">
            <summary>
            Conversion is possible but the value is lost and warning should be generated.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.ConversionCost.DefaultValue">
            <summary>
            Implicit value will be used, argument is missing and parameter is optional.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.ConversionCost.TooManyArgs">
            <summary>
            Too many arguments provided. Arguments will be omitted.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.ConversionCost.MissingArgs">
            <summary>
            Missing mandatory arguments, default values will be used instead.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.ConversionCost.NoConversion">
            <summary>
            Conversion does not exist.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.ConversionCost.Error">
            <summary>
            Unspecified error.
            </summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.ConvertExpression">
            <summary>
            Helper methods for converting expressions (implicit conversions).
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.ConvertExpression.Bind(System.Linq.Expressions.Expression,System.Type,System.Linq.Expressions.Expression)">
            <summary>
            Creates expression that converts <paramref name="arg"/> to <paramref name="target"/> type.
            </summary>
            <param name="arg">Source expression to be converted.</param>
            <param name="target">Target type.</param>
            <param name="ctx">Expression with current context.</param>
            <returns>Expression converting <paramref name="arg"/> to <paramref name="target"/> type.</returns>
        </member>
        <member name="M:Pchp.Core.Dynamic.ConvertExpression.BindToValue(System.Linq.Expressions.Expression)">
            <summary>
            Creates <see cref="T:Pchp.Core.PhpValue"/> from given expression.
            </summary>
            <returns>Expression resulting in <see cref="T:Pchp.Core.PhpValue"/>.</returns>
        </member>
        <member name="M:Pchp.Core.Dynamic.ConvertExpression.IsScalarType(System.Type,System.String@)">
            <summary>
            Gets value indicating the type is PHP scalar for sure.
            Returns false if it's an object type or <see cref="T:Pchp.Core.PhpValue"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.ConvertExpression.ThrowTypeError(System.String)">
            <summary>
            Expression: throw new TypeError(message);
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.ConvertExpression.BindCost(System.Linq.Expressions.Expression,System.Type)">
            <summary>
            Creates expression that calculates cost of conversion from <paramref name="arg"/> to type <paramref name="target"/>.
            In some cases, returned expression is a constant and can be used in compile time.
            </summary>
            <param name="arg">Expression to be converted.</param>
            <param name="target">Target type.</param>
            <returns>Expression calculating the cost of conversion.</returns>
        </member>
        <member name="T:Pchp.Core.Dynamic.CostOf">
            <summary>
            Runtime routines that calculates cost of conversion.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.CostOf.Min(Pchp.Core.Dynamic.ConversionCost,Pchp.Core.Dynamic.ConversionCost)">
            <summary>
            Gets minimal value of given operands.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.CostOf.Max(Pchp.Core.Dynamic.ConversionCost,Pchp.Core.Dynamic.ConversionCost)">
            <summary>
            Gets maximal value of given operands.
            </summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.OverloadBinder">
            <summary>
            Helper class for method overload resolution and binding to an <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.OverloadBinder.ImplicitParametersCount(System.Reflection.ParameterInfo[])">
            <summary>
            Gets count of implicit parameters.
            Such parameters are passed by runtime automatically and not read from given arguments.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.OverloadBinder.DifferentArgumentTypeIndexes(System.Reflection.MethodBase[])">
            <summary>
            Gets array of parameters indexes that have different type in provided methods.
            Implicitly declared parameters are skipped, indexes start with first PHP parameter.
            </summary>
            <remarks>
            This optimizes costof() operation for method overloads which have usually same leading parameters.</remarks>
        </member>
        <member name="T:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder">
            <summary>
            Helper object managing access to arguments.
            Different for arguments passed as an array of values and arguments passed through callsite binder, where their count and types are known.
            </summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder.TmpVarKey">
            <summary>
            Describes what is computed.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder.TmpVarKey.Priority">
            <summary>
            Order in which values are initialized.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder.TmpVarKey.ArgIndex">
            <summary>
            Index of argument we check for. Index from <c>0</c>.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder.TmpVarKey.TargetTypeOpt">
            <summary>
            Optional target type in case of conversion or cost operation.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder.TmpVarKey.Prefix">
            <summary>
            Textual prefix used for compare different keys and to create variable name.
            </summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder.TmpVarValue">
            <summary>
            Bound expression to corresponding <see cref="T:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder.TmpVarKey"/>.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder.TmpVarValue.Expression">
            <summary>
            The expression to use. Can be constant or variable.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder.TmpVarValue.TrueInitializer">
            <summary>
            In case of variable, this is its initializer (actual expression).
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder.TmpVarValue.FalseInitializer">
            <summary>
            Initializer in case argument is not provided.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder._ctx">
            <summary>
            Context expression. Cannot be <c>null</c>.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder._lazyInitBlock">
            <summary>
            Block of code that initializes temporary variables created by subsequent calls to binding methods.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder._tmpvars">
            <summary>
            Temporary variables created by binding operations.
            Each variable is bound to an argument index - the argument is provided or not.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder.BindArgsCount">
            <summary>
            Gets expression (dynamic or constant) representing arguments count.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder.BindArgument(System.Int32,System.Reflection.ParameterInfo)">
            <summary>
            Gets argument at index bound to given parameter.
            The expression can be constant in case of default argument value.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder.BindWriteBack(System.Int32,System.Linq.Expressions.Expression)">
            <summary>
            Assigns value to <paramref name="targetarg"/>
            </summary>
            <param name="targetarg">Target argument index.</param>
            <param name="expression">Expression to be assigned to the argument.</param>
            <returns>The bound assign expression.</returns>
        </member>
        <member name="M:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder.BindParams(System.Int32,System.Type)">
            <summary>
            Bind arguments to array of parameters.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder.BindCostOf(System.Int32,System.Type,System.Boolean,System.Boolean)">
            <summary>
            Gets expression representing cost of argument binding operation.
            The expression can be constant.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder.BindCostOfTooManyArgs(System.Int32)">
            <summary>
            Gets expression resulting in <see cref="F:Pchp.Core.Dynamic.ConversionCost.Pass"/> or <see cref="F:Pchp.Core.Dynamic.ConversionCost.TooManyArgs"/> based on actual arguments count.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder.CreatePreamble(System.Collections.Generic.List{System.Linq.Expressions.ParameterExpression})">
            <summary>
            After all bindings, creates an expression that initializes the call.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder.BindDefaultValue(System.Type,Pchp.Core.DefaultValueAttribute)">
            <summary>
            Creates expression representing value from [DefaultValueAttribute]
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder.ArgsArrayBinder._argsarray">
            <summary>
            Expression representing array of input arguments.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder.ArgsArrayBinder._lazyArgc">
            <summary>
            Lazily initialized variable with arguments count.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder.ArgsBinder._args">
            <summary>
            List of given call arguments.
            May contain a runtime chain following an argument (argument of a value type implementing <see cref="T:Pchp.Core.Dynamic.IRuntimeChain"/>).
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder.ArgsBinder._classContext">
            <summary>
            Class context for visibility checks.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder.ArgsBinder._lazyArgc">
            <summary>
            Lazily initialized variable with arguments count.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.OverloadBinder.BindCostOf(System.Reflection.MethodBase,Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder,System.Collections.BitArray,Pchp.Core.Dynamic.ConversionCost@)">
            <summary>
            Creates expression that computes cost of the method call with given arguments.
            </summary>
            <param name="method">Method to calculate the cost.</param>
            <param name="args">Arguments provider.</param>
            <param name="costofargs">Indexes of parameters which costof() have to be calculated.</param>
            <param name="minCost">Gets minimal compile-time cost of conversion.</param>
            <returns>Expression getting cost of conversion.</returns>
        </member>
        <member name="T:Pchp.Core.Dynamic.OverloadBinder.MethodCostInfo">
            <summary>
            Helper struct containing result of method cost.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.OverloadBinder.MethodCostInfo.CostExpr">
            <summary>
            Expression determining the cost of method call.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.OverloadBinder.MethodCostInfo.Method">
            <summary>
            Method.
            </summary>
        </member>
        <member name="P:Pchp.Core.Dynamic.OverloadBinder.MethodCostInfo.ResolvedCost">
            <summary>
            Optional. Resolved cost.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.OverloadBinder.MethodCostInfo.MinimalCost">
            <summary>
            Minimal cost known in compile time.
            </summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.OverloadBinder.MethodCostInfoComparer">
            <summary>
            Helper comparer providing cheaper and shorter methods first.
            Handles case when two methods are candidates with the same cost (the first one gets called).
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.OverloadBinder.BindOverloadCall(System.Type,System.Linq.Expressions.Expression,System.Reflection.MethodBase[]@,System.Linq.Expressions.Expression,Pchp.Core.Dynamic.OverloadBinder.ArgumentsBinder,System.Boolean,System.Object)">
            <summary>
            Creates expression with overload resolution.
            </summary>
            <param name="treturn">Expected return type.</param>
            <param name="target">Target instance in case of instance methods.</param>
            <param name="methods">List of methods to resolve overload.</param>
            <param name="ctx">Expression of current runtime context.</param>
            <param name="args">Provides arguments.</param>
            <param name="isStaticCallSyntax">Whether the call is in form of a static method call (TYPE::METHOD()).</param>
            <param name="lateStaticType">Optional type used to statically invoke the method (late static type).</param>
            <returns>Expression representing overload call with resolution or <c>null</c> in case binding should be restarted with updated array of <paramref name="methods"/>.</returns>
        </member>
        <member name="M:Pchp.Core.Dynamic.OverloadBinder.BindCastToFalse(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
            In case the method has [return: CastToFalse],
            the return value -1 or null is converted to false.
            </summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.OverloadResolver">
            <summary>
            Methods for selecting best method overload from possible candidates.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.OverloadResolver.SelectRuntimeMethods(Pchp.Core.Reflection.PhpTypeInfo,System.String,System.Type)">
            <summary>
            Selects only candidates of given name.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.OverloadResolver.NonStaticPreferably(System.Reflection.MethodInfo[])">
            <summary>
            Gets non-static methods only if there are any. Otherwise returns everything.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.OverloadResolver.SelectStatic(System.Collections.Generic.IEnumerable{System.Reflection.MethodBase})">
            <summary>
            Selects only static methods.
            </summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.RuntimeChainOperation">
            <summary>
            Describes what operation is being performed within the <see cref="T:Pchp.Core.Dynamic.IRuntimeChain"/>.
            </summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.IRuntimeChain">
            <summary>
            Describes an operation of accessing a variable/property/item in runtime.
            This operation will be defined by compiler and value resolved by runtime dynamically.
            </summary>
        </member>
        <member name="P:Pchp.Core.Dynamic.IRuntimeChain.Operation">
            <summary>
            Gets the operation type.
            </summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.ISpecialParamHolder">
            <summary>
            Denotates a parameter that is special, provided by compiler.
            </summary>
        </member>
        <member name="P:Pchp.Core.Dynamic.ISpecialParamHolder.IsImplicit">
            <summary>
            Gets value indicating the parameter is loaded by compiler providing context.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.ISpecialParamHolder.Process(Pchp.Core.Dynamic.CallSiteContext,System.Linq.Expressions.Expression)">
            <summary>
            Sets information to the callsite context.
            </summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.ContextParam">
            <summary>
            Wraps an argument passed to callsite denotating a special meaning of the value.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.ContextParam.Value">
            <summary>
            Runtime context.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.ContextParam.#ctor(Pchp.Core.Context)">
            <summary>Initializes the structure.</summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.NameParam`1">
            <summary>
            Wraps an argument passed to callsite denotating a function or property name.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.NameParam`1.Value">
            <summary>
            The invoked member, <c>callable</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.NameParam`1.#ctor(`0)">
            <summary>Initializes the structure.</summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.TargetTypeParam">
            <summary>
            Wraps an argument passed to callsite denotating target type of a static invocation operation (call, static field, class const).
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.TargetTypeParam.Value">
            <summary>
            Target type.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.TargetTypeParam.#ctor(Pchp.Core.Reflection.PhpTypeInfo)">
            <summary>Initializes the structure.</summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.LateStaticTypeParam">
            <summary>
            Wraps an argument passed to callsite denotating late static type of a method call through self:: or parent::.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.LateStaticTypeParam.Value">
            <summary>
            Target type.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.LateStaticTypeParam.#ctor(Pchp.Core.Reflection.PhpTypeInfo)">
            <summary>Initializes the structure.</summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.GenericParam">
            <summary>
            Wraps an argument passed to callsite denotating a generic argument.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.GenericParam.Value">
            <summary>
            A generic argument.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.GenericParam.#ctor(Pchp.Core.Reflection.PhpTypeInfo)">
            <summary>Initializes the structure.</summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.CallerTypeParam">
            <summary>
            Wraps an argument passed to callsite denotating a caller type.
            </summary>
        </member>
        <member name="F:Pchp.Core.Dynamic.CallerTypeParam.Value">
            <summary>
            Caller type context.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.CallerTypeParam.#ctor(System.RuntimeTypeHandle)">
            <summary>Initializes the structure.</summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.UnpackingParam`1">
            <summary>
            Wraps the argument unpacking.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.UnpackingParam`1.#ctor(`0)">
            <summary>Initializes the structure.</summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.IStructBox">
            <summary>
            Base interface for <see cref="T:Pchp.Core.Dynamic.StructBox`1"/>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Dynamic.IStructBox.BoxedValue">
            <summary>
            Gets the underlying boxed value boxed as an <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:Pchp.Core.Dynamic.StructBox`1">
            <summary>
            Boxed value type allowing to call member methods without unboxing and boxing back.
            </summary>
        </member>
        <member name="P:Pchp.Core.Dynamic.StructBox`1.Pchp#Core#Dynamic#IStructBox#BoxedValue">
            <inheritdoc/>
        </member>
        <member name="F:Pchp.Core.Dynamic.StructBox`1.Value">
            <summary>
            The boxed value.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.StructBox`1.#ctor(`0)">
            <summary>
            Initializes the instance.
            </summary>
        </member>
        <member name="M:Pchp.Core.Dynamic.StructBox`1.Pchp#Core#IPhpCloneable#Clone">
            <inheritdoc/>
        </member>
        <member name="M:Pchp.Core.Dynamic.StructBox`1.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Pchp.Core.PhpError">
            <summary>
            Set of error types.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpError.E_ERROR">
            <summary>Error.</summary>
        </member>
        <member name="F:Pchp.Core.PhpError.E_WARNING">
            <summary>Warning.</summary>
        </member>
        <member name="F:Pchp.Core.PhpError.E_PARSE">
            <summary>Parse error.</summary>
        </member>
        <member name="F:Pchp.Core.PhpError.E_NOTICE">
            <summary>Notice.</summary>
        </member>
        <member name="F:Pchp.Core.PhpError.E_CORE_ERROR">
            <summary>Core error.</summary>
        </member>
        <member name="F:Pchp.Core.PhpError.E_CORE_WARNING">
            <summary>Core warning.</summary>
        </member>
        <member name="F:Pchp.Core.PhpError.E_COMPILE_ERROR">
            <summary>Compile error.</summary>
        </member>
        <member name="F:Pchp.Core.PhpError.E_COMPILE_WARNING">
            <summary>Compile warning.</summary>
        </member>
        <member name="F:Pchp.Core.PhpError.E_USER_ERROR">
            <summary>User error.</summary>
        </member>
        <member name="F:Pchp.Core.PhpError.E_USER_WARNING">
            <summary>User warning.</summary>
        </member>
        <member name="F:Pchp.Core.PhpError.E_USER_NOTICE">
            <summary>User notice.</summary>
        </member>
        <member name="F:Pchp.Core.PhpError.E_STRICT">
            <summary>Strict error.</summary>
        </member>
        <member name="F:Pchp.Core.PhpError.E_RECOVERABLE_ERROR">
            <summary>E_RECOVERABLE_ERROR error.</summary>
        </member>
        <member name="F:Pchp.Core.PhpError.E_DEPRECATED">
            <summary>Deprecated error.</summary>
        </member>
        <member name="F:Pchp.Core.PhpError.E_USER_DEPRECATED">
            <summary>Deprecated error.</summary>
        </member>
        <member name="F:Pchp.Core.PhpError.E_ALL">
            <summary>All errors but strict.</summary>
        </member>
        <member name="T:Pchp.Core.PhpErrorSets">
            <summary>
            Sets of error types.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpErrorSets.None">
            <summary>Empty error set.</summary>
        </member>
        <member name="F:Pchp.Core.PhpErrorSets.Standard">
            <summary>Standard errors used by Core and Class Library.</summary>
        </member>
        <member name="F:Pchp.Core.PhpErrorSets.User">
            <summary>User triggered errors.</summary>
        </member>
        <member name="F:Pchp.Core.PhpErrorSets.System">
            <summary>Core system errors.</summary>
        </member>
        <member name="F:Pchp.Core.PhpErrorSets.AllButStrict">
            <summary>All possible errors except for the strict ones.</summary>
        </member>
        <member name="F:Pchp.Core.PhpErrorSets.All">
            <summary>All possible errors. 30719 in PHP 5.3</summary>
        </member>
        <member name="F:Pchp.Core.PhpErrorSets.Handleable">
            <summary>Errors which can be handled by the user defined routine.</summary>
        </member>
        <member name="F:Pchp.Core.PhpErrorSets.Fatal">
            <summary>Errors which causes termination of a running script.</summary>
        </member>
        <member name="T:Pchp.Core.PhpException">
            <summary>
            Provides standard PHP errors.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpException.ThrowHandler">
            <summary>
            Handles a generic PHP error.
            </summary>
            <param name="error">The error severity.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="E:Pchp.Core.PhpException.OnError">
            <summary>
            An event raised when a PHP error occurs.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpException.TriggerError(Pchp.Core.Context,Pchp.Core.PhpError,System.String)">
            <summary>
            Triggers the error by passing it to
            the user handler first (<see cref="P:Pchp.Core.PhpCoreConfiguration.UserErrorHandler"/> and then to
            the internal handler (<see cref="M:Pchp.Core.PhpException.Throw(Pchp.Core.PhpError,System.String)"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpException.NotifiyOnError(Pchp.Core.PhpError,System.String)">
            <summary>
            Invokes configured error event handlers on <see cref="E:Pchp.Core.PhpException.OnError"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpException.InvalidArgument(System.String)">
            <summary>
            Invalid argument error.
            </summary>
            <param name="argument">The name of the argument being invalid.</param>
        </member>
        <member name="M:Pchp.Core.PhpException.InvalidArgument(System.String,System.String)">
            <summary>
            Invalid argument error with a description of a reason. 
            </summary>
            <param name="argument">The name of the argument being invalid.</param>
            <param name="message">The message - what is wrong with the argument. Must contain "{0}" which is replaced by argument's name.
            </param>
        </member>
        <member name="M:Pchp.Core.PhpException.InvalidArgumentType(System.String,System.String)">
            <summary>
            An argument violates a type hint.
            </summary>
            <param name="argName">The name of the argument.</param>
            <param name="typeName">The name of the hinted type.</param>
        </member>
        <member name="M:Pchp.Core.PhpException.ArgumentNull(System.String)">
            <summary>
            Argument null error. Thrown when argument can't be null but it is.
            </summary>
            <param name="argument">The name of the argument.</param>
        </member>
        <member name="M:Pchp.Core.PhpException.IllegalOffsetType">
            <summary>
            Outputs warning: Illegal offset type.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpException.UndefinedOffset(Pchp.Core.IntStringKey)">
            <summary>
            Outputs error: Undefined offset ({0}).
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpException.ThrowIfArgumentNull(System.Object,System.Int32)">
            <summary>
            Argument type mismatch error.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpException.ArgumentValueNotSupported(System.String,System.Object)">
            <summary>
            The value of an argument is not invalid but unsupported.
            </summary>
            <param name="argument">The argument which value is unsupported.</param>
            <param name="value">The value which is unsupported.</param>
        </member>
        <member name="M:Pchp.Core.PhpException.InvalidArgumentCount(System.String,System.String)">
            <summary>
            Emitted to a library function call which has invalid actual argument count.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpException.InvalidForeachArgument">
            <summary>
            Emitted to the foreach statement if the variable to be enumerated doesn't implement 
            the <see cref="T:Pchp.Core.IPhpEnumerable"/> interface.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpException.InvalidImplicitCast(System.String,System.String,System.String)">
            <summary>
            Emitted to the function call if an argument cannot be implicitly casted.
            </summary>
            <param name="argument">The argument name which is casted.</param>
            <param name="targetType">The type to which is casted.</param>
            <param name="functionName">The name of the function called.</param>
        </member>
        <member name="M:Pchp.Core.PhpException.FunctionNotSupported(System.String)">
            <summary>
            Called function is not supported.
            </summary>
            <param name="function">Not supported function name.</param>
        </member>
        <member name="M:Pchp.Core.PhpException.FunctionDeprecated(System.String)">
            <summary>
            Called function is not supported.
            </summary>
            <param name="function">Not supported function name.</param>
        </member>
        <member name="M:Pchp.Core.PhpException.MethodOnNonObject(System.String)">
            <summary>
            Call to a member function <paramref name="methodName"/>() on a non-object.
            </summary>
            <param name="methodName">The method name.</param>
        </member>
        <member name="M:Pchp.Core.PhpException.UndefinedFunctionCalled(System.String)">
            <summary>new Error("Call to undefined function {<paramref name="funcName"/>}()")</summary>
            <param name="funcName">The function name.</param>
        </member>
        <member name="M:Pchp.Core.PhpException.UndefinedMethodCalled(System.String,System.String)">
            <summary>new Error("Call to undefined function {<paramref name="funcName"/>}()")</summary>
            <param name="typeName">Class name.</param>
            <param name="funcName">The function name.</param>
        </member>
        <member name="M:Pchp.Core.PhpException.UndefinedProperty(System.String,System.String)">
            <summary>
            NOTICE: Notice: Undefined property {0}::${1}.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpException.VariableMisusedAsObject(Pchp.Core.PhpValue,System.Boolean)">
            <summary>
            Reports an error when a variable should be PHP object but it is not.
            </summary>
            <param name="reference">Whether a reference modifier (=&amp;) is used.</param>
            <param name="var">The variable which was misused.</param>
            <exception cref="T:Pchp.Core.PhpException"><paramref name="var"/> is <see cref="T:Pchp.Core.PhpArray"/> (Warning).</exception>
            <exception cref="T:Pchp.Core.PhpException"><paramref name="var"/> is scalar type (Warning).</exception>
            <exception cref="T:Pchp.Core.PhpException"><paramref name="var"/> is a string (Warning).</exception>
        </member>
        <member name="M:Pchp.Core.PhpException.ObjectToStringNotSupported(System.Object)">
            <summary>
            Recoverable fatal error: Object of class X could not be converted to string.
            </summary>
            <param name="instance">The object instance.</param>
        </member>
        <member name="M:Pchp.Core.PhpException.ObjectConvertError(System.String,System.String)">
            <summary>
            Recoverable fatal error: Object of class {0} could not be converted to {1}.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpException.ToErrorMessage(System.String)">
            <summary>
            Converts exception message (ending by dot) to error message (not ending by a dot).
            </summary>
            <param name="exceptionMessage">The exception message.</param>
            <returns>The error message.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="exceptionMessage"/> is a <B>null</B> reference.</exception>
        </member>
        <member name="M:Pchp.Core.PhpException.NextArrayKeyUnavailable">
            <summary>
            Internal warning when new element cannot be added to array because there are no more free keys.
            </summary>
        </member>
        <member name="T:Pchp.Core.LogEventSource">
            <summary>
            Provides logging of errors into system events log.
            </summary>
        </member>
        <member name="F:Pchp.Core.LogEventSource.Log">
            <summary>
            Public singleton to be used.
            Cannot be <c>null</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.LogEventSource.ErrorLog(System.String)">
            <summary>
            Logs user's error message.
            </summary>
        </member>
        <member name="M:Pchp.Core.LogEventSource.HandleWarning(System.String)">
            <summary>
            Logs non-fatal error.
            </summary>
        </member>
        <member name="M:Pchp.Core.LogEventSource.HandleFatal(System.String)">
            <summary>
            Logs fatal error.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpErrorException">
            <summary>
            PHP runtime exception.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpFatalErrorException">
            <summary>
            Fatal PHP error causing the script to be terminated.
            </summary>
        </member>
        <member name="T:Pchp.Core.ScriptDiedException">
            <summary>
            Thrown by exit/die language constructs to cause immediate termination of a script being executed.
            </summary>
        </member>
        <member name="P:Pchp.Core.ScriptDiedException.Status">
            <summary>
            The exist status.
            </summary>
        </member>
        <member name="P:Pchp.Core.ScriptDiedException.ExitCode">
            <summary>
            Gets exit code from the status code.
            </summary>
        </member>
        <member name="M:Pchp.Core.ScriptDiedException.ProcessStatus(Pchp.Core.Context)">
            <summary>
            Status of a different type than integer is printed,
            exit code according to PHP semantic is returned.
            </summary>
        </member>
        <member name="T:Pchp.Core.ScriptIncludeException">
            <summary>
            Thrown when a script couldn't be included because it was not found.
            See <see cref="P:Pchp.Core.ScriptIncludeException.Path"/> for the script file path.
            </summary>
        </member>
        <member name="P:Pchp.Core.ScriptIncludeException.Path">
            <summary>
            Original path to the script that failed to be included.
            </summary>
        </member>
        <member name="T:Pchp.Core.IEncodingProvider">
            <summary>
            Provides encoding to be used for conversion between byte array and unicode string.
            </summary>
        </member>
        <member name="P:Pchp.Core.IEncodingProvider.StringEncoding">
            <summary>
            Encoding used to convert between unicode strings and binary strings.
            </summary>
        </member>
        <member name="T:Pchp.Core.Utf8EncodingProvider">
            <summary>
            <see cref="T:Pchp.Core.IEncodingProvider"/> providing <see cref="P:System.Text.Encoding.UTF8"/>.
            </summary>
        </member>
        <member name="F:Pchp.Core.Utf8EncodingProvider.Instance">
            <summary>
            Singletong instance.
            </summary>
        </member>
        <member name="P:Pchp.Core.Utf8EncodingProvider.StringEncoding">
            <summary>
            Gets UTF8.
            </summary>
        </member>
        <member name="T:Pchp.Core.IHttpPhpContext">
            <summary>
            Interface providing web features.
            </summary>
        </member>
        <member name="P:Pchp.Core.IHttpPhpContext.HeadersSent">
            <summary>Gets value indicating HTTP headers were already sent.</summary>
        </member>
        <member name="M:Pchp.Core.IHttpPhpContext.GetHeaders">
            <summary>Enumerates HTTP headers in current response.</summary>
        </member>
        <member name="P:Pchp.Core.IHttpPhpContext.CacheControl">
            <summary>Gets or sets current cache-control header.</summary>
        </member>
        <member name="E:Pchp.Core.IHttpPhpContext.HeadersSending">
            <summary>
            Event fired before headers are sent.
            </summary>
        </member>
        <member name="P:Pchp.Core.IHttpPhpContext.RequestHeaders">
            <summary>
            Gets the current request headers.
            </summary>
        </member>
        <member name="P:Pchp.Core.IHttpPhpContext.StatusCode">
            <summary>
            Gets or sets HTTP response status code.
            </summary>
        </member>
        <member name="P:Pchp.Core.IHttpPhpContext.InputStream">
            <summary>
            Stream with contents of the incoming HTTP entity body.
            </summary>
        </member>
        <member name="M:Pchp.Core.IHttpPhpContext.AddCookie(System.String,System.String,System.Nullable{System.DateTimeOffset},System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Adds a cookie into the response.
            </summary>
        </member>
        <member name="M:Pchp.Core.IHttpPhpContext.Flush(System.Boolean)">
            <summary>
            Flushes the response stream of the HTTP server.
            </summary>
            <param name="endRequest">If set, flushes all response data to the client and finishes the request.</param>
            <exception cref="T:System.ObjectDisposedException">The response has been disposed already.</exception>
        </member>
        <member name="P:Pchp.Core.IHttpPhpContext.MaxRequestSize">
            <summary>
            Gets max request size (upload size, post size) in bytes.
            Gets <c>-1</c> if limit is not set.
            </summary>
        </member>
        <member name="P:Pchp.Core.IHttpPhpContext.IsClientConnected">
            <summary>
            Whether the underlaying connection is alive.
            </summary>
        </member>
        <member name="P:Pchp.Core.IHttpPhpContext.SessionHandler">
            <summary>
            Gets or sets session handler for current context.
            </summary>
        </member>
        <member name="P:Pchp.Core.IHttpPhpContext.SessionState">
            <summary>
            Gets or sets session state.
            </summary>
        </member>
        <member name="T:Pchp.Core.IndirectLocal">
            <summary>
            Represents access to an unoptimized local variable.
            - Used for passing unoptimized local/global variables to call sites.
            - Used for caching lookups to the hashtable.
            - Used for debugger purposes to reveal unoptimized locals in Watch and Locals window.
            </summary>
        </member>
        <member name="M:Pchp.Core.IndirectLocal.EnsureAlias">
            <summary>
            Gets underlaying value as <see cref="T:Pchp.Core.PhpAlias"/>.
            Modifies the underlaying table.
            </summary>
        </member>
        <member name="M:Pchp.Core.IndirectLocal.GetValue">
            <summary>
            Gets the underlaying value or <c>NULL</c> if value does not exist.
            </summary>
        </member>
        <member name="M:Pchp.Core.IndirectLocal.AssignValue(Pchp.Core.PhpValue)">
            <summary>
            Sets the underlaying value using assignment semantic.
            </summary>
        </member>
        <member name="T:Pchp.Core.Location">
            <summary>
            Provides location in the source code, source file, containing line and column.
            </summary>
        </member>
        <member name="P:Pchp.Core.Location.Path">
            <summary>
            Source file path.
            </summary>
        </member>
        <member name="P:Pchp.Core.Location.Line">
            <summary>
            Containing line number.
            </summary>
        </member>
        <member name="P:Pchp.Core.Location.Column">
            <summary>
            Containing solumn number.
            </summary>
        </member>
        <member name="M:Pchp.Core.Location.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes location.
            </summary>
            <param name="path">Source file path.</param>
            <param name="line">Containing line number.</param>
            <param name="col">Column number.</param>
        </member>
        <member name="F:Pchp.Core.Operators.LONG_SIGN_MASK">
            <summary>
            Bit mask corresponding to the sign in <see cref="T:System.Int64"/> value.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.BitAnd(Pchp.Core.PhpValue@,Pchp.Core.PhpValue@)">
            <summary>
            Performs bitwise and operation.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.BitOr(Pchp.Core.PhpValue@,Pchp.Core.PhpValue@)">
            <summary>
            Performs bitwise or operation.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.BitXor(Pchp.Core.PhpValue@,Pchp.Core.PhpValue@)">
            <summary>
            Performs exclusive or operation.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.BitXor(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Performs specified binary operation on arrays of bytes.
            </summary>
            <param name="result">An array where to store the result. Data previously stored here will be overwritten.</param>
            <param name="x">The first operand.</param>
            <param name="y">The second operand</param>
            <returns>The reference to the the <paramref name="result"/> array.</returns>
        </member>
        <member name="M:Pchp.Core.Operators.BitNot(Pchp.Core.PhpValue@)">
            <summary>
            Performs bitwise negation.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.Div(Pchp.Core.PhpValue@,Pchp.Core.PhpValue@)">
            <summary>
            Performs division according to PHP semantics.
            </summary>
            <remarks>The division operator ("/") returns a float value unless the two operands are integers
            (or strings that get converted to integers) and the numbers are evenly divisible,
            in which case an integer value will be returned.</remarks>
        </member>
        <member name="M:Pchp.Core.Operators.SetValue(Pchp.Core.PhpValue@,Pchp.Core.PhpValue)">
            <summary>
            Assigns a PHP value by value according to the PHP semantics.
            </summary>
            <param name="target">Target of the assignment.</param>
            <param name="value">Value to be assigned.</param>
        </member>
        <member name="M:Pchp.Core.Operators.SetValue(Pchp.Core.PhpAlias,Pchp.Core.PhpValue)">
            <summary>
            Assigns a PHP value to an aliased place.
            </summary>
            <param name="target">Target of the assignment.</param>
            <param name="value">Value to be assigned.</param>
        </member>
        <member name="M:Pchp.Core.Operators.UnsetValue(Pchp.Core.PhpValue@)">
            <summary>
            "unset" operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.UnsetValue(Pchp.Core.PhpAlias@)">
            <summary>
            "unset" operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.EnsureObject(System.Object@)">
            <summary>
            Ensures given variable is not <c>null</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.EnsureArray(Pchp.Core.PhpArray@)">
            <summary>
            Ensures given variable is not <c>null</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.EnsureArray(Pchp.Core.IPhpArray@)">
            <summary>
            Ensures given variable is not <c>null</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.EnsureWritableString(Pchp.Core.PhpValue@)">
            <summary>
            Ensures the value is <see cref="T:Pchp.Core.PhpString"/> and gets mutable access to the value (non-shared).
            </summary>
            <returns>Object on which edit operations can be performed. Cannot be <c>null</c>.</returns>
        </member>
        <member name="M:Pchp.Core.Operators.IsSet(Pchp.Core.PhpValue)">
            <summary>
            Implementation of PHP <c>isset</c> operator.
            </summary>
            <remarks>Value (eventualy dereferenced value) is not <c>NULL</c>.</remarks>
        </member>
        <member name="M:Pchp.Core.Operators.IsEmpty(Pchp.Core.PhpValue)">
            <summary>
            Implements <c>empty</c> operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.IsEmpty(System.Object)">
            <summary>
            Implements <c>empty</c> operator on objects.
            </summary>
        </member>
        <member name="T:Pchp.Core.Operators.ArrayAccessAsPhpArray">
            <summary>
            Provides <see cref="T:Pchp.Core.IPhpArray"/> interface for <see cref="T:ArrayAccess"/> instance.
            </summary>
        </member>
        <member name="T:Pchp.Core.Operators.GetSetItemAsPhpArray">
            <summary>
            Helper class representing array access for classes with CLR "get_Item" / "set_Item" indexer method.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.GetArrayAccess(Pchp.Core.PhpValue@)">
            <summary>
            Gets <see cref="T:Pchp.Core.IPhpArray"/> instance providing access to the value with array operators.
            Returns <c>null</c> if underlaying value does provide array access.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.GetListAccess(Pchp.Core.PhpValue)">
            <summary>
            Gets <see cref="T:Pchp.Core.IPhpArray"/> to be used as R-value of <c>list</c> expression.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.GetListAccess(System.Object)">
            <summary>
            Gets <see cref="T:Pchp.Core.IPhpArray"/> to be used as R-value of <c>list</c> expression.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.GetItemValue(System.String,System.Int64)">
            <summary>
            Implements <c>[]</c> operator on <see cref="T:System.String"/>.
            </summary>
            <param name="value">String to be accessed as array.</param>
            <param name="index">Index.</param>
            <returns>Character on index or empty string if index is our of range.</returns>
        </member>
        <member name="M:Pchp.Core.Operators.GetItemValue(System.String,Pchp.Core.IntStringKey)">
            <summary>
            Implements <c>[]</c> operator on <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.GetItemValueOrNull(System.String,Pchp.Core.IntStringKey)">
            <summary>
            Implements <c>[]</c> operator on <see cref="T:System.String"/> with <c>isset</c> semantics.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.GetItemValue(System.String,Pchp.Core.PhpValue,System.Boolean)">
            <summary>
            Implements <c>[]</c> operator on <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.GetItemOrdValue(Pchp.Core.PhpValue,System.Int64)">
            <summary>
            Shortcut for calling <c>ord($s[$i])</c> on a <see cref="T:Pchp.Core.PhpValue"/>
            without any extra allocation.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.GetItemOrdValue(System.String,System.Int64)">
            <summary>
            Shortcut for calling <c>ord($s[$i])</c> on a <see cref="T:System.String"/>
            without any extra allocation.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.GetItemOrdValue(Pchp.Core.PhpString,System.Int64)">
            <summary>
            Shortcut for calling <c>ord($s[$i])</c> on a <see cref="T:Pchp.Core.PhpString"/>
            without any extra allocation.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.GetItemValue(Pchp.Core.PhpValue,Pchp.Core.PhpValue,System.Boolean)">
            <summary>
            Implements <c>[]</c> operator on <see cref="T:Pchp.Core.PhpValue"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.GetItemValue(System.Object,Pchp.Core.PhpValue,System.Boolean,System.Boolean)">
            <summary>
            Implements <c>[]</c> operator on <see cref="T:Pchp.Core.PhpValue"/>.
            </summary>
            <param name="obj">Object reference.</param>
            <param name="index">Item key.</param>
            <param name="quiet">Whether to not report error if the index is not found.</param>
            <param name="propertiesAsItems">
            In case the object does not provide the array access, lookup its properties instead.
            Object will be treated as array.
            </param>
            <returns>Item value or <c>NULL</c> if the item does not exist.</returns>
        </member>
        <member name="M:Pchp.Core.Operators.EnsureItemAlias_Old(Pchp.Core.PhpValue,Pchp.Core.PhpValue,System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.EnsureItemAlias(Pchp.Core.PhpValue@,Pchp.Core.PhpValue,System.Boolean)">
            <summary>
            Implements <c>&amp;[]</c> operator on <see cref="T:Pchp.Core.PhpValue"/>.
            Ensures the value is an array and item at given <paramref name="index"/> is an alias.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.TypeNameOrObjectToType(Pchp.Core.Context,Pchp.Core.PhpValue)">
            <summary>
            Gets <see cref="T:Pchp.Core.Reflection.PhpTypeInfo"/> from a string or an object instance.
            </summary>
            <param name="ctx">Current runtime context.</param>
            <param name="object">String or object. Other value types cause an exception.</param>
            <returns>Corresponding <see cref="T:Pchp.Core.Reflection.PhpTypeInfo"/> descriptor. Cannot be <c>null</c>.</returns>
        </member>
        <member name="M:Pchp.Core.Operators.RuntimePropertyGetValue(Pchp.Core.Context,System.Object,System.String,System.Boolean)">
            <summary>
            Resolves the runtime property by looking into runtime properties and eventually invoking the <c>__get</c> magic method.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.RuntimePropertyGetValue(Pchp.Core.Context,Pchp.Core.Reflection.PhpTypeInfo,System.Object,System.String,System.Boolean)">
            <summary>
            Resolves the runtime property by looking into runtime properties and eventually invoking the <c>__get</c> magic method.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.GetSelf(System.RuntimeTypeHandle)">
            <summary>
            Gets <see cref="T:Pchp.Core.Reflection.PhpTypeInfo"/> of self.
            Throws in case of self being used out of class context.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.GetSelfOrNull(System.RuntimeTypeHandle)">
            <summary>
            Gets <see cref="T:Pchp.Core.Reflection.PhpTypeInfo"/> of self or <c>null</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.GetParent(System.RuntimeTypeHandle)">
            <summary>
            Gets <see cref="T:Pchp.Core.Reflection.PhpTypeInfo"/> of parent.
            Throws in case of parent being used out of class context or within a parentless class.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.GetParent(Pchp.Core.Reflection.PhpTypeInfo)">
            <summary>
            Gets <see cref="T:Pchp.Core.Reflection.PhpTypeInfo"/> of parent.
            Throws in case of parent being used out of class context or within a parentless class.
            </summary>
        </member>
        <member name="T:Pchp.Core.Operators.PhpIteratorEnumerator">
            <summary>
            Provides the <see cref="T:Pchp.Core.IPhpEnumerator"/> interface by wrapping a user-implemeted <see cref="T:Iterator"/>.
            </summary>
            <remarks>
            Instances of this class are iterated when <c>foreach</c> is used on object of a class
            that implements <see cref="T:Iterator"/> or <see cref="T:IteratorAggregate"/>.
            </remarks>
        </member>
        <member name="T:Pchp.Core.Operators.PhpFieldsEnumerator">
            <summary>
            Provides <see cref="T:Pchp.Core.IPhpEnumerator"/> implementation enumerating class instance fields and runtime fields.
            </summary>
        </member>
        <member name="T:Pchp.Core.Operators.PhpEmptyEnumerator">
            <summary>
            Implements empty enumeration.
            </summary>
        </member>
        <member name="F:Pchp.Core.Operators.ClrEnumeratorFactory.ClrEnumerator._key">
            <summary>
            Current key and value.
            </summary>
        </member>
        <member name="F:Pchp.Core.Operators.ClrEnumeratorFactory.ClrEnumerator._value">
            <summary>
            Current key and value.
            </summary>
        </member>
        <member name="T:Pchp.Core.Operators.ClrEnumeratorFactory.EnumerableEnumerator">
            <summary>
            Enumerator of <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
        </member>
        <member name="T:Pchp.Core.Operators.ClrEnumeratorFactory.PhpValueEnumerator">
            <summary>
            Enumerator of <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
        </member>
        <member name="T:Pchp.Core.Operators.ClrEnumeratorFactory.DictionaryEnumerator">
            <summary>
            Enumerator of <see cref="T:System.Collections.IDictionary"/>
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.GetForeachEnumerator(Iterator)">
            <summary>
            Gets <see cref="T:Iterator"/> object enumerator.
            </summary>
            <returns>Instance of the enumerator. Cannot be <c>null</c>.</returns>
        </member>
        <member name="M:Pchp.Core.Operators.GetForeachEnumerator(System.Object,System.Boolean,System.RuntimeTypeHandle)">
            <summary>
            Resolves object enumerator.
            </summary>
            <exception cref="T:System.Exception">Object cannot be enumerated.</exception>
            <returns>Instance of the object enumerator. Cannot be <c>null</c>.</returns>
        </member>
        <member name="M:Pchp.Core.Operators.GetForeachEnumerator(System.Collections.IEnumerable)">
            <summary>
            Gets <see cref="T:Pchp.Core.IPhpEnumerator"/> from regular .NET <see cref="T:System.Collections.IEnumerable"/>.
            Enumerator is reflected to properly unwrap <c>key</c> and <c>value</c> of PHP enumeration.
            Supported interfaces are <see cref="T:System.Collections.IDictionaryEnumerator"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.IEnumerable"/> etc.
            See <see cref="T:Pchp.Core.Operators.ClrEnumeratorFactory"/> for more details.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.GetEmptyForeachEnumerator">
            <summary>
            Gets PHP enumerator of <c>NULL</c> or <b>empty</b> value.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.GetForeachEnumerator(Pchp.Core.PhpValue,System.Boolean,System.RuntimeTypeHandle)">
            <summary>
            Gets enumerator object for given value.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.GetFastEnumerator(Pchp.Core.PhpArray,System.Boolean)">
            <summary>
            Gets enumerator of array entries.
            This is internal implementation that avoids allocations in common cases.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.DeepCopy(Pchp.Core.PhpValue)">
            <summary>
            Gets copy of given value.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.PassValue(Pchp.Core.PhpValue@)">
            <summary>
            Deep copies the value in-place.
            Called when this has been passed by value and inplace dereferencing and copying is necessary.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.Clone(Pchp.Core.Context,System.Object)">
            <summary>
            Performs <c>clone</c> operation on given object.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.CloneRaw(Pchp.Core.Context,System.Object)">
            <summary>
            Performs memberwise clone of the object.
            Calling <c>__clone</c> eventually.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.CloneInPlace(System.Object)">
            <summary>
            Every property of type <see cref="T:Pchp.Core.PhpValue"/> will be deeply copied inplace, including runtime fields.
            Calling <c>__clone</c> eventually.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.Unpack(System.Collections.Generic.List{Pchp.Core.PhpValue},Pchp.Core.PhpValue,System.UInt64)">
            <summary>
            The method implements <c>...</c> unpack operator.
            Unpacks <paramref name="argument"/> into <paramref name="stack"/>.
            </summary>
            <param name="stack">The list with unpacked arguments.</param>
            <param name="argument">Value to be unpacked.</param>
            <param name="byrefs">Bit mask of parameters that are passed by reference. Arguments corresponding to <c>1</c>-bit are aliased.</param>
        </member>
        <member name="M:Pchp.Core.Operators.Unpack(System.Collections.Generic.List{Pchp.Core.PhpValue},Pchp.Core.PhpArray,System.UInt64)">
            <summary>
            The method implements <c>...</c> unpack operator.
            Unpacks <paramref name="array"/> into <paramref name="stack"/>.
            </summary>
            <param name="stack">The list with unpacked arguments.</param>
            <param name="array">Value to be unpacked.</param>
            <param name="byrefs">Bit mask of parameters that are passed by reference. Arguments corresponding to <c>1</c>-bit are aliased.</param>
        </member>
        <member name="M:Pchp.Core.Operators.Unpack(System.Collections.Generic.List{Pchp.Core.PhpValue},System.Array,System.UInt64)">
            <summary>
            The method implements <c>...</c> unpack operator.
            Unpacks <paramref name="array"/> into <paramref name="stack"/>.
            </summary>
            <param name="stack">The list with unpacked arguments.</param>
            <param name="array">Value to be unpacked.</param>
            <param name="byrefs">Bit mask of parameters that are passed by reference. Arguments corresponding to <c>1</c>-bit are aliased.</param>
        </member>
        <member name="M:Pchp.Core.Operators.Unpack(System.Collections.Generic.List{Pchp.Core.PhpValue},Traversable,System.UInt64)">
            <summary>
            The method implements <c>...</c> unpack operator.
            Unpacks <paramref name="traversable"/> into <paramref name="stack"/>.
            </summary>
            <param name="stack">The list with unpacked arguments.</param>
            <param name="traversable">Value to be unpacked.</param>
            <param name="byrefs">Bit mask of parameters that are passed by reference. Arguments corresponding to <c>1</c>-bit are aliased.</param>
        </member>
        <member name="M:Pchp.Core.Operators.ReadConstant(Pchp.Core.Context,System.String,System.Int32@)">
            <summary>
            Gets constant value, throws <c>notice</c> if constant is not defined.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.ReadConstant(Pchp.Core.Context,System.String,System.Int32@,System.String)">
            <summary>
            Gets constant value, throws <c>notice</c> if constant is not defined.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.DeclareConstant(Pchp.Core.Context,System.String,System.Int32@,Pchp.Core.PhpValue)">
            <summary>
            Constant declaration.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.BuildClosure(Pchp.Core.Context,Pchp.Core.IPhpCallable,System.Object,System.RuntimeTypeHandle,Pchp.Core.Reflection.PhpTypeInfo,Pchp.Core.PhpArray,Pchp.Core.PhpArray)">
            <summary>
            Create <see cref="T:Closure"/> with specified anonymous function and used parameters.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.Static(Closure)">
            <summary>Resolves late static bound type of closiure. Can be <c>null</c> reference.</summary>
        </member>
        <member name="M:Pchp.Core.Operators.Callable(Closure)">
            <summary>
            Gets internal <see cref="T:Pchp.Core.IPhpCallable"/> object invoked by the closure.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.BuildGenerator(Pchp.Core.Context,Pchp.Core.PhpArray,Pchp.Core.PhpArray,GeneratorStateMachineDelegate,System.RuntimeMethodHandle)">
            <summary>
            Create <see cref="T:Generator"/> with specified state machine function and parameters.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.HandleGeneratorException(Generator)">
            <summary>
            In case generator has an exception, throws it.
            The current exception is then nullified.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.SetGeneratorCurrent(Generator,Pchp.Core.PhpValue)">
            <summary>Set yielded value from generator where key is not specified.</summary>
        </member>
        <member name="M:Pchp.Core.Operators.SetGeneratorCurrentFrom(Generator,Pchp.Core.PhpValue,Pchp.Core.PhpValue)">
            <summary>
            Sets yielded value from generator with key.
            This operator does not update auto-incremented Generator key.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.SetGeneratorCurrent(Generator,Pchp.Core.PhpValue,Pchp.Core.PhpValue)">
            <summary>Set yielded value from generator with key.</summary>
        </member>
        <member name="M:Pchp.Core.Operators.GetGeneratorLazyStatic(Generator)">
            <summary>
            Resolves generator's <c>static</c> type.
            </summary>
            <returns><see cref="T:Pchp.Core.Reflection.PhpTypeInfo"/> refering to the lazy static bound type. Cannot be <c>null</c>.</returns>
        </member>
        <member name="M:Pchp.Core.Operators.Eval(Pchp.Core.Context,Pchp.Core.PhpArray,System.Object,System.RuntimeTypeHandle,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Performs dynamic code evaluation in given context.
            </summary>
            <returns>Evaluated code return value.</returns>
        </member>
        <member name="M:Pchp.Core.Operators.NormalizePath(System.String)">
            <summary>
            Normalizes path's slashes for the current platform.
            </summary>
        </member>
        <member name="T:Pchp.Core.Operators.BoundTargetCallable">
            <summary>
            Helper lightweight class to reuse already bound <see cref="T:Pchp.Core.PhpInvokable"/> to be used as <see cref="T:Pchp.Core.PhpCallable"/>
            by calling it on a given target.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.BindTargetToMethod(System.Object,Pchp.Core.Reflection.RoutineInfo)">
            <summary>
            Creates an <see cref="T:Pchp.Core.IPhpCallable"/> from an instance method, binding the target to call the method on.
            </summary>
        </member>
        <member name="M:Pchp.Core.Operators.Echo(System.Object,Pchp.Core.Context)">
            <summary>Echoes the value into the output.</summary>
        </member>
        <member name="M:Pchp.Core.Operators.Echo(System.String,Pchp.Core.Context)">
            <summary>Echoes the value into the output.</summary>
        </member>
        <member name="M:Pchp.Core.Operators.Echo(Pchp.Core.PhpString,Pchp.Core.Context)">
            <summary>Echoes the value into the output.</summary>
        </member>
        <member name="M:Pchp.Core.Operators.Echo(System.Byte[],Pchp.Core.Context)">
            <summary>Echoes the value into the output.</summary>
        </member>
        <member name="M:Pchp.Core.Operators.Echo(System.ReadOnlySpan{System.Byte},Pchp.Core.Context)">
            <summary>Echoes the value into the output.</summary>
        </member>
        <member name="M:Pchp.Core.Operators.Echo(System.ReadOnlySpan{System.Char},Pchp.Core.Context)">
            <summary>Echoes the value into the output.</summary>
        </member>
        <member name="M:Pchp.Core.Operators.Echo(Pchp.Core.PhpNumber,Pchp.Core.Context)">
            <summary>Echoes the value into the output.</summary>
        </member>
        <member name="M:Pchp.Core.Operators.Echo(Pchp.Core.PhpValue,Pchp.Core.Context)">
            <summary>Echoes the value into the output.</summary>
        </member>
        <member name="M:Pchp.Core.Operators.Echo(Pchp.Core.PhpAlias,Pchp.Core.Context)">
            <summary>Echoes the value into the output.</summary>
        </member>
        <member name="M:Pchp.Core.Operators.Echo(System.Double,Pchp.Core.Context)">
            <summary>Echoes the value into the output.</summary>
        </member>
        <member name="M:Pchp.Core.Operators.Echo(System.Int64,Pchp.Core.Context)">
            <summary>Echoes the value into the output.</summary>
        </member>
        <member name="M:Pchp.Core.Operators.Echo(System.Int32,Pchp.Core.Context)">
            <summary>Echoes the value into the output.</summary>
        </member>
        <member name="M:Pchp.Core.Operators.Echo(System.Boolean,Pchp.Core.Context)">
            <summary>Echoes the value into the output.</summary>
        </member>
        <member name="T:Pchp.Core.SetOperations">
            <summary>
            Implemented set operations over arrays.
            </summary>
        </member>
        <member name="T:Pchp.Core.IntStringKey">
            <summary>
            Represents both integer or string array key.
            </summary>
        </member>
        <member name="F:Pchp.Core.IntStringKey.EmptyStringKey">
            <summary>
            <pre>new IntStringKey( "" )</pre>
            </summary>
        </member>
        <member name="F:Pchp.Core.IntStringKey.InvalidKey">
            <summary>An invalid <see cref="T:Pchp.Core.IntStringKey"/> value.</summary>
        </member>
        <member name="P:Pchp.Core.IntStringKey.IsInvalid">
            <summary>Whether this is the <see cref="F:Pchp.Core.IntStringKey.InvalidKey"/>.</summary>
        </member>
        <member name="F:Pchp.Core.IntStringKey.MaxKeyValue">
            <summary>
            Max value of <see cref="P:Pchp.Core.IntStringKey.Integer"/>.
            </summary>
        </member>
        <member name="P:Pchp.Core.IntStringKey.Integer">
            <summary>
            Integer value iff <see cref="P:Pchp.Core.IntStringKey.IsString"/> return <B>false</B>.
            </summary>
        </member>
        <member name="P:Pchp.Core.IntStringKey.String">
            <summary>
            String value iff <see cref="P:Pchp.Core.IntStringKey.IsString"/> return <B>true</B>.
            </summary>
        </member>
        <member name="P:Pchp.Core.IntStringKey.Object">
            <summary>
            Gets array key, <see cref="T:System.String"/> or <see cref="T:System.Int64"/> as object.
            </summary>
        </member>
        <member name="P:Pchp.Core.IntStringKey.IsEmpty">
            <summary>
            Gets value indicating the key is an empty string.
            Equivalent to <see cref="F:Pchp.Core.IntStringKey.EmptyStringKey"/> which is <c>""</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.IntStringKey.FromString(System.String)">
            <summary>
            Creates the <see cref="T:Pchp.Core.IntStringKey"/> from a string representation.
            Checks for numeric value, and creates either string key or int key.
            </summary>
            <param name="value">A string or <c>null</c>.</param>
            <returns>Properly created key.</returns>
        </member>
        <member name="T:Pchp.Core.OrderedDictionary">
            <summary>
            Implementation of dictionary that keeps order of contained items.
            </summary>
            <remarks>
            Not thread safe.
            </remarks>
        </member>
        <member name="F:Pchp.Core.OrderedDictionary.Bucket.Next">
            <summary>
            Collision detection chain.
            </summary>
        </member>
        <member name="F:Pchp.Core.OrderedDictionary.Bucket.Key">
            <summary>
            The bucket key.
            </summary>
        </member>
        <member name="F:Pchp.Core.OrderedDictionary.Bucket.Value">
            <summary>
            The bucket value.
            </summary>
        </member>
        <member name="P:Pchp.Core.OrderedDictionary.Bucket.IsDeleted">
            <summary>
            The value has been deleted - is not initialized.
            </summary>
        </member>
        <member name="F:Pchp.Core.OrderedDictionary.s_missingBucket">
            <summary>Bucket representing a missing entry.</summary>
        </member>
        <member name="F:Pchp.Core.OrderedDictionary._minCapacity">
            <summary>Minimal internal table capacity. Must be power of 2.</summary>
        </member>
        <member name="F:Pchp.Core.OrderedDictionary._refs">
            <summary>
            Additional references sharing this object.
            Values greater than <c>zero</c> indicated the object is shared and should not be modified directly.
            </summary>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.#ctor(Pchp.Core.OrderedDictionary)">
            <summary>
            Creates clone of the given object.
            </summary>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.ReleaseRef">
            <summary>
            Releases one <see cref="F:Pchp.Core.OrderedDictionary._refs"/> and creates new deeply copied instance of <see cref="T:Pchp.Core.OrderedDictionary"/>.
            </summary>
        </member>
        <member name="P:Pchp.Core.OrderedDictionary.Count">
            <summary>
            Number of items in the dictionary.
            </summary>
        </member>
        <member name="P:Pchp.Core.OrderedDictionary.IsPacked">
            <summary>
            Gets value indicating the array was created in such sequence of operations
            so it only contains numeric keys (0..Count] in ascending order.
            </summary>
            <remarks>Such a data structure does not need a hash table.</remarks>
        </member>
        <member name="P:Pchp.Core.OrderedDictionary.IsShared">
            <summary>
            Gets value indicating the object is being shared.
            </summary>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.FindBucket(Pchp.Core.IntStringKey)">
            <summary>
            Gets index of the item within private <see cref="F:Pchp.Core.OrderedDictionary._data"/> array.
            </summary>
            <param name="key">Key to find.</param>
            <returns>Index of the bucket or <see cref="F:Pchp.Core.OrderedDictionary._invalidIndex"/> if key was not found.</returns>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.TryGetValue(Pchp.Core.IntStringKey,Pchp.Core.PhpValue@)">
            <summary>
            Tries to get value at specified key.
            </summary>
            <param name="key">Key to lookup.</param>
            <param name="value">If key is in the collection, gets the associated value. Otherwise gets <c>default</c>.</param>
            <returns>True if the item was found in the collection.</returns>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.GetValueOrNull(Pchp.Core.IntStringKey)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.EnsureValue(Pchp.Core.IntStringKey)">
            <summary>
            Ensures the item is present in the collection and gets a reference to it.
            </summary>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.ContainsKey(Pchp.Core.IntStringKey)">
            <summary>
            Gets value indicating the item with given <paramref name="key"/> is in the collection.
            </summary>
            <param name="key">Key to be checked.</param>
            <returns><c>true</c> iff an item with the key exists.</returns>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.AssignValue(Pchp.Core.IntStringKey,Pchp.Core.PhpValue)">
            <summary>
            Assigns value using PHP's assign operator.
            </summary>
            <param name="key">Key.</param>
            <param name="value">Non-aliased value to be assigned.</param>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.SetValue(Pchp.Core.IntStringKey,Pchp.Core.PhpValue)">
            <summary>
            Sets the value at given key.
            Previous value will be overriden.
            </summary>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.Add(Pchp.Core.PhpValue)">
            <summary>
            Adds value to the end of collection with newly assigned numeric key.
            </summary>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.Add_Impl(Pchp.Core.IntStringKey,Pchp.Core.PhpValue)">
            <summary>
            Adds item at the end of collection.
            Does not check the <paramref name="key"/> exists already!
            Updates <see cref="F:Pchp.Core.OrderedDictionary._maxIntKey"/> if necessary.
            </summary>
            <param name="key">Item key.</param>
            <param name="value">Item value.</param>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.Add_NoCheck(Pchp.Core.IntStringKey,Pchp.Core.PhpValue)">
            <summary>
            Adds item at the end of collection.
            Does not check the <paramref name="key"/> exists already!
            Does not update <see cref="F:Pchp.Core.OrderedDictionary._maxIntKey"/>.
            </summary>
            <param name="key">Item key.</param>
            <param name="value">Item value.</param>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.Remove(Pchp.Core.IntStringKey)">
            <summary>
            Remove item with given key.
            </summary>
            <returns><c>true</c> if the item was found and removed, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.TryRemoveLast(System.Collections.Generic.KeyValuePair{Pchp.Core.IntStringKey,Pchp.Core.PhpValue}@)">
            <summary>
            Remove the last item in the array and return it, if it exists. If the next free index was its index,
            decrement it (semantics of <c>array_pop</c>).
            </summary>
            <param name="value">The removed item with its key.</param>
            <returns><c>true</c> if the array was non-empty and the item was removed, otherwise <c>false</c></returns>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.AddFirst(Pchp.Core.IntStringKey,Pchp.Core.PhpValue)">
            <summary>
            Prepends an item.
            </summary>
            <remarks>Used mostly by <c>array_unshift</c>.</remarks>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.Clear">
            <summary>
            Clears the data.
            </summary>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.CopyTo(System.Collections.Generic.KeyValuePair{Pchp.Core.IntStringKey,Pchp.Core.PhpValue}[],System.Int32)">
            <summary>
            Copy key-value pairs into given array.
            </summary>
            <param name="array">Target array.</param>
            <param name="arrayIndex">Index where to start copying in <paramref name="array"/>.</param>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.CopyTo(Pchp.Core.PhpValue[],System.Int32)">
            <summary>
            Copy values into given array.
            </summary>
            <param name="array">Target array.</param>
            <param name="arrayIndex">Index where to start copying in <paramref name="array"/>.</param>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.Shuffle(System.Random)">
            <summary>
            Shiffles order of the items randomly.
            </summary>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.Reverse">
            <summary>
            Reverses order of the items.
            </summary>
        </member>
        <member name="T:Pchp.Core.OrderedDictionary.BucketsComparer">
            <summary>Helper comparer that wraps <see cref="T:System.Collections.Generic.IComparer`1"/>.</summary>
        </member>
        <member name="P:Pchp.Core.OrderedDictionary.BucketsComparer.DidSwap">
            <summary>
            Gets value indicating the comparer returned a positive value at some point.
            </summary>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.Sort(System.Collections.Generic.IComparer{System.Collections.Generic.KeyValuePair{Pchp.Core.IntStringKey,Pchp.Core.PhpValue}})">
            <summary>
            Sorts the collection.
            </summary>
        </member>
        <member name="T:Pchp.Core.OrderedDictionary.MultisortComparer">
            <summary>
            Helper comparer for array of indices into array of hash tables. Used for <c>multisort</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.ReindexAll">
            <summary>
            Sets all keys to increasing integers according to their respective order in the list.
            </summary>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.ReindexIntegers(System.Int32)">
            <summary>
            Sets all keys to increasing integers according to their respective order in the list.
            </summary>
            <param name="startIndex">An index from which to start indexing.</param>
            <remarks>If indexing overflows a capacity of integer type it continues with <see cref="F:System.Int32.MinValue"/>.</remarks>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.ReindexAndReplace(System.Int32,System.Int32,System.Collections.Generic.ICollection{Pchp.Core.PhpValue})">
            <summary>
            Replaces a part of the hashtable with specified item(s) and reindexes all integer keys in result.
            </summary>
            <param name="offset">
            The ordinary number of the first item to be replaced. 
            <paramref name="offset"/> should be at least zero and at most equal as the number of items in the array.
            </param>
            <param name="length">
            The number of items to be replaced. Should be at least zero and at most equal 
            to the number of items in the array.
            </param>
            <param name="replacementValues">
            The enumerable collection of values by which items in the range specified by
            <paramref name="offset"/> and <paramref name="length"/> is replaced.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException"><pararef name="offset"/> or <paramref name="length"/> has invalid value.</exception>
        </member>
        <member name="T:Pchp.Core.OrderedDictionary.Enumerator">
            <summary>
            Enumerator object.
            </summary>
        </member>
        <member name="P:Pchp.Core.OrderedDictionary.Enumerator.CurrentValue">
            <summary>
            Current dereferenced value.
            </summary>
        </member>
        <member name="T:Pchp.Core.OrderedDictionary.ReadonlyEnumerator">
            <summary>
            Performs enumeration on the current state of the array.
            Array can be changed during the enumeration with no effect to this enumerator.
            </summary>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{Pchp#Core#IntStringKey,Pchp#Core#PhpValue}}#GetEnumerator">
            <summary>
            Gets enumerator object.
            </summary>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.System#Collections#Generic#IEnumerable{Pchp#Core#PhpValue}#GetEnumerator">
            <summary>
            Gets enumerator object.
            </summary>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets enumerator object.
            </summary>
        </member>
        <member name="T:Pchp.Core.OrderedDictionary.FastEnumerator">
            <summary>
            Enumerator not allocating any memory.
            </summary>
        </member>
        <member name="P:Pchp.Core.OrderedDictionary.FastEnumerator.Current">
            <summary>
            Gets current key-value pair.
            </summary>
        </member>
        <member name="P:Pchp.Core.OrderedDictionary.FastEnumerator.CurrentKey">
            <summary>
            Gets current key.
            </summary>
        </member>
        <member name="P:Pchp.Core.OrderedDictionary.FastEnumerator.CurrentValue">
            <summary>
            Gets ref to current value.
            </summary>
        </member>
        <member name="P:Pchp.Core.OrderedDictionary.FastEnumerator.CurrentValueAliased">
            <summary>
            Ensures the current entry is wrapped in alias and gets its reference.
            </summary>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.FastEnumerator.MoveNext">
            <summary>
            Move to the next item.
            </summary>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.FastEnumerator.MovePrevious">
            <summary>
            Tries to move to a previous item.
            </summary>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.FastEnumerator.MoveLast">
            <summary>
            Moves to the last item.
            </summary>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.FastEnumerator.Reset">
            <summary>
            Resets the enumeration.
            </summary>
        </member>
        <member name="P:Pchp.Core.OrderedDictionary.FastEnumerator.IsDefault">
            <summary>
            Gets value indicating the value is not initialized.
            </summary>
        </member>
        <member name="P:Pchp.Core.OrderedDictionary.FastEnumerator.IsValid">
            <summary>
            Gets value indicating the internal pointer is in bounds.
            </summary>
        </member>
        <member name="P:Pchp.Core.OrderedDictionary.FastEnumerator.AtEnd">
            <summary>
            Gets value indicating the enumerator reached the end of array.
            </summary>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.FastEnumerator.DeleteCurrent">
            <summary>
            Deletes current entry. Does not move the internal enumerator.
            </summary>
            <remarks>Call <see cref="M:Pchp.Core.OrderedDictionary.FastEnumerator.MoveNext"/> or <see cref="M:Pchp.Core.OrderedDictionary.FastEnumerator.MovePrevious"/> manually.</remarks>
        </member>
        <member name="M:Pchp.Core.OrderedDictionary.GetEnumerator">
            <summary>
            Gets enumerator object as a value type.
            Used implicitly by C#'s `foreach` construct.
            </summary>
        </member>
        <member name="T:Pchp.Core.OrderedDictionaryExtensions">
            <summary>
            Extension methods for <see cref="T:Pchp.Core.OrderedDictionary"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.OrderedDictionaryExtensions.GetValues(Pchp.Core.OrderedDictionary)">
            <summary>
            Copies values to a new array.
            </summary>
        </member>
        <member name="T:Pchp.Core.BufferedOutput">
            <summary>
            Provides output buffering functionality. 
            </summary>
        </member>
        <member name="T:Pchp.Core.BufferedOutput.ChunkPosition">
            <summary>
            Position of a chunk of buffered data. 
            </summary>
        </member>
        <member name="F:Pchp.Core.BufferedOutput.BufferElement.size">
            <summary>
            The number of valid bytes/chars of the data array.
            </summary>
        </member>
        <member name="F:Pchp.Core.BufferedOutput.BufferElement.data">
            <summary>
            Array containing buffered data.
            </summary>
        </member>
        <member name="T:Pchp.Core.BufferedOutput.LevelElement">
            <summary>
            Representation of one level of buffering.
            </summary>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.LevelElement.#ctor(Pchp.Core.BufferedOutput.LevelElement)">
            <summary>
            Copies index, name and filter from the element.
            </summary>
            <param name="element"></param>
        </member>
        <member name="F:Pchp.Core.BufferedOutput.LevelElement.Index">
            <summary>
            The index of the level in levels array list.
            </summary>
        </member>
        <member name="F:Pchp.Core.BufferedOutput._levels">
            <summary>
            The list of LevelElements.
            </summary>
        </member>
        <member name="F:Pchp.Core.BufferedOutput._minBufferSize">
            <summary>
            Minimal sizes of buffers. 
            </summary>
        </member>
        <member name="P:Pchp.Core.BufferedOutput.CharSink">
            <summary>
            The writer through which character data will be written.
            </summary>
        </member>
        <member name="P:Pchp.Core.BufferedOutput.ByteSink">
            <summary>
            The stream through which binary data will be written.
            </summary>
        </member>
        <member name="P:Pchp.Core.BufferedOutput.Encoding">
            <summary>
            Encoding used to convert between single-byte string and Unicode string.
            </summary>
        </member>
        <member name="P:Pchp.Core.BufferedOutput.Stream">
            <summary>
            The buffered binary stream used as for loading binary data to buffers.
            </summary>
        </member>
        <member name="F:Pchp.Core.BufferedOutput._ctx">
            <summary>
            Runtime context.
            </summary>
        </member>
        <member name="P:Pchp.Core.BufferedOutput.Level">
            <summary>
            Current buffer level starting from 1. Zero if buffering is disabled.
            </summary>
        </member>
        <member name="P:Pchp.Core.BufferedOutput.Length">
            <summary>
            The total length of data written to the current level of buffering.
            Returns -1 if buffering is disabled.
            </summary>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.#ctor(Pchp.Core.Context,System.Boolean,System.IO.TextWriter,System.IO.Stream)">
            <summary>
            Creates buffered output with specified sinks.
            </summary>
            <param name="ctx">Runtime context.</param>
            <param name="enableBuffering">Whether to immediately enable buffering, i.e. increase the level.</param>
            <param name="charSink">A writer through which character data will be written.</param>
            <param name="byteSink">A stream through which binary data will be written.</param>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.AllocateBuffer(System.Int32,System.Boolean,System.Array@,System.Int32@)">
            <summary>
            Gets a buffer where data of requested size and type can be stored. 
            </summary>
            <param name="sizeNeeded">The number of characters or bytes to be allocated.</param>
            <param name="binary">Whether allocated data are bytes or chars.</param>
            <param name="buffer">Returns the buffer where data can be written to.</param>
            <param name="position">Returns the position where data can be written on.</param>
            <returns>The number of allocated characters or bytes.</returns>
            <remarks>
            The buffer may already exist or new one may be created.
            Works on the current level of buffering.
            </remarks>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.IncreaseLevel">
            <summary>
            Adds a new level of buffering on the top of the levels stack.
            </summary>
            <remarks>Returns the new level index.</remarks>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.ThrowIfDisabled">
            <summary>
            Checks output buffer is not disabled.
            </summary>
            <exception cref="T:System.InvalidOperationException">When buffering is disabled (<see cref="F:Pchp.Core.BufferedOutput._level"/> is <c>null</c>).</exception>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.DecreaseLevel(System.Boolean)">
            <summary>
            Destroys the top level of buffering. 
            </summary>
            <param name="flush">Whether to flush data on the current level. Data will be discarded if not set.</param>
            <remarks>Returns the current level index after decreasing.</remarks>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.SetUserData(System.Object,System.Int32)">
            <summary>
            Assignes an arbitrary data to the specified level of buffering.
            </summary>
            <param name="data">Null reference clears assigned data.</param>
            <param name="levelIndex">The level of buffering which the filter to associate with.</param>
            <remarks>Data are filtered when flushed.</remarks>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.SetUserData(System.Object)">
            <summary>
            Assignes the arbitrary data to the current level of buffering. 
            </summary>
            <param name="data">The reference to data.</param>
            <remarks>Data are filtered when flushed.</remarks>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.SetFilter(Pchp.Core.IPhpCallable,System.Int32)">
            <summary>
            Assignes the filtering callback to the specified level of buffering.
            </summary>
            <param name="filter">The filter. Null reference means no filter.</param>
            <param name="levelIndex">The level of buffering which the filter to associate with.</param>
            <remarks>Data are filtered when flushed.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="levelIndex"/> is out of range.</exception>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.SetFilter(Pchp.Core.IPhpCallable)">
            <summary>
            Assignes the filtering callback to the current level of buffering. 
            </summary>
            <param name="filter">The filter. Null reference means no filter.</param>
            <remarks>Data are filtered when flushed.</remarks>
            <exception cref="T:System.InvalidOperationException">Output buffering is disabled.</exception>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.GetFilter(System.Int32)">
            <summary>
            Gets the filtering callback defined on the specified level of buffering.
            </summary>
            <param name="levelIndex">The level of buffering which the filter to associate with.</param>
            <returns>The callback or <B>null</B> if no filter has been defined.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="levelIndex"/> is out of range.</exception>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.GetFilter">
            <summary>
            Gets the filtering callback defined on the current level of buffering.
            </summary>
            <returns>The callback or <B>null</B> if no filter has been defined.</returns>
            <exception cref="T:System.InvalidOperationException">Output buffering is disabled.</exception>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.SetLevelName(System.Int32,System.String)">
            <summary>
            Set the level name.
            </summary>
            <param name="levelIndex">Index of the level from 1.</param>
            <param name="levelName">New name of the level.</param>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.GetLevelName(System.Int32)">
            <summary>
            Get the name of the level. If the level name is null, the filter.ToString() is used.
            </summary>
            <param name="levelIndex">Index of the level from 1.</param>
            <returns></returns>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.Clean">
            <summary>
            Discards data on the current level of buffering.
            </summary>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.FlushAll">
            <summary>
            Flushes all data from all buffers to sinks. Discards all data and all levels of buffering.
            Disables output buffering.
            </summary>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.FlushLevel">
            <summary>
            Flushes data on current level of buffering to sinks or to the previous level and discards them.
            </summary>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.InternalFlush">
            <summary>
            Flushes data on current level of buffering to the sinks or to the previous level.
            The current level clean up MUST follow this method's call.
            </summary>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.GetContent">
            <summary>
            Gets a content of buffers on current buffering level.
            </summary>
            <returns>The content as <see cref="T:System.String"/> or array of <see cref="T:System.Byte"/>s or a 
            <c>null</c> reference if output buffering is disabled.</returns>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.WriteBytes(System.Byte[])">
            <summary>
            Writes an array of bytes to the output buffer.
            </summary>
            <param name="value">Bytes to be written.</param>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.WriteBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a subarray of bytes to the output buffer.
            </summary>
            <param name="value">Bytes to be written.</param>
            <param name="index">Starting index in the array.</param>
            <param name="count">The number of characters to write.</param>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.Write(System.Char[])">
            <summary>
            Writes a subarray of characters to the output buffer.
            </summary>
            <param name="value">Characters to be written.</param>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.Write(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes a subarray of characters to the output buffer.
            </summary>
            <param name="value">The value to be written.</param>
            <param name="index">Starting index in the array.</param>
            <param name="count">The number of characters to write.</param>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.WriteInternal(System.Array,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Writes a subarray to the output buffer.
            </summary>
            <param name="value">The value to be written.</param>
            <param name="binary">The type of items in array (byte/char).</param>
            <param name="index">Starting index in the array.</param>
            <param name="count">The number of items to write.</param>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.Write(System.Char)">
            <summary>
            Writes a single character to the output buffer.
            </summary>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.Write(System.String)">
            <summary>
            Writes a string value to the output buffer.
            </summary>
            <param name="value">The value to be written.</param>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.GetLevelInfo(System.Int32,Pchp.Core.IPhpCallable@,System.Int32@,System.String@)">
            <summary>
            Gets some information about a specified level.
            </summary>
            <param name="levelIndex">Level index starting from 1.</param>
            <param name="filter">Filtering callback (if any).</param>
            <param name="size">Data size.</param>
            <param name="name">Optionally the level name.</param>
        </member>
        <member name="M:Pchp.Core.BufferedOutput.FindLevelByFilter(Pchp.Core.IPhpCallable)">
            <summary>
            Find level index by the filter callback.
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="T:Pchp.Core.BufferedOutputStream">
            <summary>
            Provides output buffering of streams.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpAlias">
            <summary>
            Represents an aliased value.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpAlias.Value">
            <summary>
            Gets or sets the underlying value.
            </summary>
            <remarks>The field is not wrapped into a property, some internals need to access the raw field.</remarks>
        </member>
        <member name="P:Pchp.Core.PhpAlias.ReferenceCount">
            <summary>
            Gets references count.
            If greater than zero, the <see cref="T:Pchp.Core.PhpAlias"/> acts like a reference.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpAlias.#ctor(System.Int32)">
            <summary>
            Creates an aliased value.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpAlias.EnsureObject">
            <summary>
            Ensures the underlying value is an object and gets its instance.
            Cannot be <c>null</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpAlias.EnsureArray">
            <summary>
            Ensures the underlying value is an array and gets its instance.
            Cannot be <c>null</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpAlias.EnsureWritableString">
            <summary>
            Ensures underlying value as a writable string and gets the containing <see cref="T:Pchp.Core.PhpString.Blob"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpAlias.EnsureItemAlias(Pchp.Core.PhpValue,System.Boolean)">
            <summary>
            Implements <c>&amp;[]</c> operator on <see cref="T:Pchp.Core.PhpValue"/>.
            Ensures the value is an array and item at given <paramref name="index"/> is an alias.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpAlias.DeepCopy">
            <summary>
            Performs deep copy of the value.
            If the value is referenced, the method returns this instance of <see cref="T:Pchp.Core.PhpAlias"/>, otherwise the value is copied.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpAlias.ToObject">
            <summary>
            Casts the value to object instance.
            Non-object values are wrapped to <see cref="T:stdClass"/>.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpArray">
            <summary>
            Implements ordered keyed array of <see cref="T:Pchp.Core.PhpValue"/> with PHP semantics.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpArray.PhpTypeName">
            <summary>
            Used in all PHP functions determining the type name. (<c>var_dump</c>, ...)
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpArray.PrintablePhpTypeName">
            <summary>
            Used in <c>print_r</c> function.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpArray._intrinsicEnumerator">
            <summary>
            Intrinsic enumerator associated with the array.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpArray.Empty">
            <summary>
            Empty array singleton.
            Must not be modified.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpArray.NewEmpty">
            <summary>
            Fast creation of an empty array
            by referencing internal structure of empty singleton.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpArray._visited">
            <summary>
            Helper property used by visitor algorithms.
            Gets value determining whether this instance has been visited during recursive pass of some structure containing <see cref="T:Pchp.Core.PhpArray"/>s.
            </summary>
            <remarks>
            Must be decreased immediately after the pass.
            </remarks>
        </member>
        <member name="M:Pchp.Core.PhpArray.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Pchp.Core.PhpArray"/> with specified capacities for integer and string keys respectively.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpArray.#ctor(System.Int32)">
            <summary>
            Creates a new instance of <see cref="T:Pchp.Core.PhpArray"/> with specified capacities for integer and string keys respectively.
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="M:Pchp.Core.PhpArray.#ctor(Pchp.Core.OrderedDictionary)">
            <summary>
            Creates new instance with given table data.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpArray.#ctor(System.Array)">
            <summary>
            Creates a new instance of <see cref="T:Pchp.Core.PhpArray"/> initialized with all values from <see cref="T:System.Array"/>.
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:Pchp.Core.PhpArray.#ctor(Pchp.Core.PhpValue[])">
            <summary>
            Creates a new instance of <see cref="T:Pchp.Core.PhpArray"/> initialized with all values from <see cref="T:System.Array"/>.
            </summary>
            <param name="values">Array of values.</param>
        </member>
        <member name="M:Pchp.Core.PhpArray.#ctor(System.Nullable{Pchp.Core.PhpValue}[])">
            <summary>
            Creates a new instance of <see cref="T:Pchp.Core.PhpArray"/> initialized with all values from <see cref="T:System.Array"/>.
            </summary>
            <param name="values">Array of values.</param>
        </member>
        <member name="M:Pchp.Core.PhpArray.#ctor(System.String[])">
            <summary>
            Creates a new instance of <see cref="T:Pchp.Core.PhpArray"/> initialized with all values from <see cref="T:System.Array"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpArray.#ctor(System.Array,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of <see cref="T:Pchp.Core.PhpArray"/> initialized with a portion of <see cref="T:System.Array"/>.
            </summary>
            <param name="values"></param>
            <param name="index"></param>
            <param name="length"></param>
        </member>
        <member name="M:Pchp.Core.PhpArray.#ctor(System.Int32[],System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Pchp.Core.PhpArray"/> class filled by values from specified array.
            </summary>
            <param name="values">An array of values to be added to the table.</param>
            <param name="start">An index of the first item from <paramref name="values"/> to add.</param>
            <param name="length">A number of items to add.</param>
            <param name="value">A value to be filtered.</param>
            <param name="doFilter">Wheter to add all items but <paramref name="value"/> (<b>true</b>) or 
            all items with the value <paramref name="value"/> (<b>false</b>).</param>
        </member>
        <member name="M:Pchp.Core.PhpArray.#ctor(System.Collections.IEnumerable)">
            <summary>
            Creates a new instance of <see cref="T:Pchp.Core.PhpArray"/> filled by data from an enumerator.
            </summary>
            <param name="data">The enumerator containing values added to the new instance.</param>
        </member>
        <member name="M:Pchp.Core.PhpArray.#ctor(System.Collections.Generic.IEnumerable{Pchp.Core.PhpValue})">
            <summary>
            Creates a new instance of <see cref="T:Pchp.Core.PhpArray"/> filled by data from an enumerator.
            </summary>
            <param name="data">The enumerator containing values added to the new instance.</param>
        </member>
        <member name="M:Pchp.Core.PhpArray.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Pchp.Core.IntStringKey,Pchp.Core.PhpValue}})">
            <summary>
            Creates a new instance of <see cref="T:Pchp.Core.PhpArray"/> filled by data from an enumerator.
            </summary>
            <param name="data">The enumerator containing values added to the new instance.</param>
        </member>
        <member name="M:Pchp.Core.PhpArray.#ctor(Pchp.Core.PhpArray)">
            <summary>
            Copy constructor. Creates <see cref="T:Pchp.Core.PhpArray"/> that shares internal data table with another <see cref="T:Pchp.Core.PhpArray"/>.
            </summary>
            <param name="array">Table to be shared.</param>
        </member>
        <member name="M:Pchp.Core.PhpArray.New(System.Object[])">
            <summary>
            Creates an instance of <see cref="T:Pchp.Core.PhpArray"/> filled by given values.
            </summary>
            <param name="values">Values to be added to the new instance. 
            Keys will correspond order of values in the array.</param>
        </member>
        <member name="M:Pchp.Core.PhpArray.New(Pchp.Core.PhpValue[])">
            <summary>
            Creates an instance of <see cref="T:Pchp.Core.PhpArray"/> filled by given values.
            </summary>
            <param name="values">Values to be added to the new instance. 
            Keys will correspond order of values in the array.</param>
        </member>
        <member name="M:Pchp.Core.PhpArray.Union(Pchp.Core.PhpArray,Pchp.Core.PhpArray)">
            <summary>
            Makes new array containing union of two arrays.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpArray.Keyed(System.Object[])">
            <summary>
            Creates an instance of <see cref="T:Pchp.Core.PhpArray"/> filled by given entries.
            </summary>
            <param name="keysValues">Keys and values (alternating) or values only.</param>
            <remarks>If the length of <paramref name="keysValues"/> is odd then its last item is added without a key.</remarks>
        </member>
        <member name="M:Pchp.Core.PhpArray.New(Pchp.Core.PhpValue)">
            <summary>
            Creates an instance of <see cref="T:Pchp.Core.PhpArray"/> filled by given values.
            </summary>
            <param name="value">Value to be added to the new instance. 
            Keys will correspond order of values in the array.</param>
        </member>
        <member name="M:Pchp.Core.PhpArray.Create(Pchp.Core.IPhpEnumerator)">
            <summary>
            Creates array from PHP enumerator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpArray.DeepCopy">
            <summary>
            Creates copy of this instance using shared underlaying hashtable.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpArray.Clone">
            <summary>
            Makes clone of this array with deeply copied values.
            </summary>
            <returns>Cloned instance of <see cref="T:Pchp.Core.PhpArray"/>.</returns>
        </member>
        <member name="M:Pchp.Core.PhpArray.AddVariable(System.String,System.String)">
            <summary>
            Adds a variable into the array while keeping duplicit keys in sub-arrays of indexed items.
            </summary>
            <param name="name">Key, respecting <c>[subkey]</c> notation.</param>
            <param name="value">The value.</param>
            <remarks>See <see cref="M:Pchp.Core.Utilities.NameValueCollectionUtils.AddVariable(Pchp.Core.PhpArray,System.String,Pchp.Core.PhpValue,System.String,System.Boolean)"/> for details.</remarks>
        </member>
        <member name="M:Pchp.Core.PhpArray.GetItemRef(Pchp.Core.IntStringKey)">
            <summary>
            Gets reference (<c>ref</c> <see cref="T:Pchp.Core.PhpValue"/>) to the item at given index.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpArray.IsEmpty">
            <summary>
            Gets value indicating the PHP variable is empty (empty array).
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpArray.UnsetValue(Pchp.Core.IntStringKey)">
            <summary>
            Unsets the value.
            Releases reference and removes the value from the collection.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpArray.System#IDisposable#Dispose">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpArray.op_Explicit(Pchp.Core.PhpArray)~System.Int32">
            <summary>
            Explicit cast of array to <see cref="T:System.Int32"/>.
            Gets number of items in the array.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpArray.op_Explicit(Pchp.Core.PhpArray)~System.Double">
            <summary>
            Explicit cast of array to <see cref="T:System.Double"/>.
            Gets number of items in the array.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpArray.op_Explicit(Pchp.Core.PhpArray)~System.String">
            <summary>
            Explicit cast of array to <see cref="T:System.String"/>.
            Always returns <c>"Array"</c> string literal.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpArray.op_Explicit(Pchp.Core.PhpArray)~System.Boolean">
            <summary>
            Explicit cast of array to <see cref="T:System.Boolean"/>.
            Gets <c>true</c> if array contains any elements.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpArray.Pchp#Core#IPhpConvertible#ToClass">
            <summary>
            Creates <see cref="T:stdClass"/> with runtime instance fields copied from entries of this array.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpArray.ToObject">
            <summary>
            Creates <see cref="T:stdClass"/> instance which runtime fields are copied from this array.
            </summary>
            <returns>Instance of <see cref="T:stdClass"/>. Cannot be <c>null</c>.</returns>
        </member>
        <member name="M:Pchp.Core.PhpArray.CompareArrays(Pchp.Core.PhpArray,Pchp.Core.PhpArray,System.Collections.Generic.IComparer{Pchp.Core.PhpValue},System.Boolean@)">
            <summary>
            Compares two instances of <see cref="T:Pchp.Core.PhpArray"/>.
            </summary>
            <param name="x">First operand. Cannot be <c>null</c>.</param>
            <param name="y">Second operand. Cannot be <c>null</c>.</param>
            <param name="comparer">The comparer.</param>
            <param name="incomparable">Whether arrays are incomparable 
            (no difference is found before both arrays enters an infinite recursion). 
            Returns zero then.</param>
        </member>
        <member name="M:Pchp.Core.PhpArray.StrictCompareEq(Pchp.Core.PhpArray)">
            <summary>
            Compares this instance with another <see cref="T:Pchp.Core.PhpArray"/>.
            </summary>
            <param name="array">The array to be strictly compared.</param>
            <returns>Whether this instance strictly equals to <paramref name="array"/>.</returns>
            <remarks>
            Arrays are strictly equal if all entries are strictly equal and in the same order in both arrays.
            Entries are strictly equal if keys are the same and values are strictly equal 
            in the terms of operator <B>===</B>.
            </remarks>
        </member>
        <member name="M:Pchp.Core.PhpArray.StrictCompareArrays(Pchp.Core.PhpArray,Pchp.Core.PhpArray,System.Boolean@)">
            <summary>
            Compares two instances of <see cref="T:Pchp.Core.PhpArray"/> for strict equality.
            </summary>
            <param name="x">First operand. Cannot be <c>null</c>.</param>
            <param name="y">Second operand. Cannot be <c>null</c>.</param>
            <param name="incomparable">Whether arrays are incomparable 
            (no difference is found before both arrays enters an infinite recursion). 
            Returns <B>true</B> then.</param>
        </member>
        <member name="P:Pchp.Core.PhpArray.IntrinsicEnumerator">
            <summary>
            Intrinsic enumerator associated with the array.
            The enumerator points to the first item of the array immediately after the initialization if exists,
            otherwise it points to an invalid item and <see cref="P:Pchp.Core.IPhpEnumerator.AtEnd"/> is <B>true</B>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpArray.RestartIntrinsicEnumerator">
            <summary>
            Restarts intrinsic enumerator - moves it to the first item.
            </summary>
            <remarks>
            If the intrinsic enumerator has never been used on this instance nothing happens.
            </remarks>
        </member>
        <member name="M:Pchp.Core.PhpArray.GetForeachEnumerator(System.Boolean)">
            <summary>
            Creates an enumerator used in foreach statement.
            </summary>
            <param name="aliasedValues">Whether the values returned by enumerator are assigned by reference.</param>
            <returns>The dictionary enumerator.</returns>
        </member>
        <member name="M:Pchp.Core.PhpArray.GetForeachEnumerator(System.Boolean,System.RuntimeTypeHandle)">
            <summary>
            Creates an enumerator used in foreach statement.
            </summary>
            <param name="aliasedValues">Whether the values returned by enumerator are assigned by reference.</param>
            <param name="caller">Type of the caller (ignored).</param>
            <returns>The dictionary enumerator.</returns>
            <remarks>Used for internal purposes only!</remarks>
        </member>
        <member name="T:Pchp.Core.IPhpCallable">
            <summary>
            An object that can be invoked dynamically.
            </summary>
            <remarks>The interface is implemented by compiler for classes with <c>__invoke</c> method.</remarks>
        </member>
        <member name="M:Pchp.Core.IPhpCallable.Invoke(Pchp.Core.Context,Pchp.Core.PhpValue[])">
            <summary>
            Invokes the object with given arguments.
            </summary>
        </member>
        <member name="M:Pchp.Core.IPhpCallable.ToPhpValue">
            <summary>
            Gets PHP value representing the callback.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpCallable">
            <summary>
            Delegate for dynamic routine invocation.
            </summary>
            <param name="ctx">Current runtime context. Cannot be <c>null</c>.</param>
            <param name="arguments">List of arguments to be passed to called routine.</param>
            <returns>Result of the invocation.</returns>
        </member>
        <member name="T:Pchp.Core.PhpInvokable">
            <summary>
            Delegate for dynamic method invocation.
            </summary>
            <param name="ctx">Current runtime context. Cannot be <c>null</c>.</param>
            <param name="target">For instance methods, the target object.</param>
            <param name="arguments">List of arguments to be passed to called routine.</param>
            <returns>Result of the invocation.</returns>
        </member>
        <member name="T:Pchp.Core.PhpCallback">
            <summary>
            Callable object representing callback to a routine.
            Performs dynamic binding to actual method and provides <see cref="T:Pchp.Core.IPhpCallable"/> interface.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpCallback.CallbackFlags.IsInvalid">
            <summary>
            The callback has been marked as invalid.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpCallback.CallbackFlags.InvalidThrowsException">
            <summary>
            When invalid is invoked, exception is thrown.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpCallback._lazyResolved">
            <summary>
            Resolved routine to be invoked.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpCallback.IsValid">
            <summary>
            Gets value indicating the callback is valid.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpCallback.IsResolved">
            <summary>
            Gets value indicating the callback has been already resolved.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpCallback.IsValidBound(Pchp.Core.Context)">
            <summary>
            Tries to bind the callback and checks if the callback is valid.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpCallback.Equals(Pchp.Core.PhpCallback)">
            <summary>
            Gets value indicating this instance represents the same callback as <paramref name="other"/>.
            </summary>
            <param name="other">The other instance to compare with.</param>
            <returns>Both callbacks represents the same routine.</returns>
        </member>
        <member name="F:Pchp.Core.PhpCallback.Empty">
            <summary>
            An empty PHP callback doing no action.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpCallback.FunctionCallback._function">
            <summary>
            Name of the function to be called.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpCallback.MethodCallback.Target">
            <summary>
            Target object instance.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpCallback.ArrayCallback.Target">
            <summary>
            Target object instance as provided.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpCallback.Bind(Pchp.Core.Context)">
            <summary>
            Ensures the routine delegate is bound.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpCallback.BindNew(Pchp.Core.Context)">
            <summary>
            Binds the routine delegate.
            </summary>
            <returns>Instance to the delegate. Cannot be <c>null</c>.</returns>
        </member>
        <member name="M:Pchp.Core.PhpCallback.InvokeError(Pchp.Core.Context,Pchp.Core.PhpValue[])">
            <summary>
            Missing function call callback.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpCallback.BindCore(Pchp.Core.Context)">
            <summary>
            Performs binding to the routine delegate.
            </summary>
            <returns>Actual delegate or <c>null</c> if routine cannot be bound.</returns>
        </member>
        <member name="M:Pchp.Core.PhpCallback.BindToStatic(Pchp.Core.Context,Pchp.Core.Reflection.PhpTypeInfo)">
            <summary>
            Binds callback to given late static bound type.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpCallback.Invoke(Pchp.Core.Context,Pchp.Core.PhpValue[])">
            <summary>
            Invokes the callback with given arguments.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpCallback.ToPhpValue">
            <summary>
            Gets value representing the callback.
            Used for human readable representation of the callback.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpCallableExtension.Bind(Pchp.Core.PhpInvokable,System.Object)">
            <summary>
            Binds <see cref="T:Pchp.Core.PhpInvokable"/> to <see cref="T:Pchp.Core.PhpCallable"/> by fixing the target argument.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpCallableExtension.BindMagicCall(Pchp.Core.PhpInvokable,System.Object,System.String)">
            <summary>
            Binds <see cref="T:Pchp.Core.PhpInvokable"/> to <see cref="T:Pchp.Core.PhpCallable"/> while wrapping arguments to a single argument of type <see cref="T:Pchp.Core.PhpArray"/>.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpCallableToDelegate`1">
            <summary>
            Helper class providing conversion from <see cref="T:Pchp.Core.IPhpCallable"/> to a custom <see cref="T:System.Delegate"/>.
            </summary>
            <typeparam name="TFunc"></typeparam>
        </member>
        <member name="T:Pchp.Core.PhpHashtable">
            <summary>
            The hashtable storing entries with <see cref="T:System.String"/> and <see cref="T:System.Int32"/> keys in a manner of PHP.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpHashtable.table">
            <summary>
            Ordered hashtable where integers are stored.
            </summary>
            <remarks>
            Expose the table to item getters on <see cref="T:Pchp.Core.PhpArray"/> to make them a little bit faster.
            </remarks>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.EnsureWritable">
            <summary>
            Ensures the internal <see cref="T:Pchp.Core.OrderedDictionary"/> will be writable (not shared).
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.#ctor">
            <summary>
            Initializes a new instance of the <c>PhpHashtable</c> class.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <c>PhpHashtable</c> class.
            </summary>
            <param name="capacity">Initial capacity.</param>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.#ctor(System.Array)">
            <summary>
            Initializes a new instance of the <c>PhpHashtable</c> class filled by values from specified array. 
            </summary>
            <param name="values">Values to be added.</param>
            <remarks>
            Adds all pairs key-value where the value is an item of <v>values</v> array 
            and the key is its index in the array.
            </remarks>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.#ctor(System.Array,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <c>PhpHashtable</c> class filled by values from specified array. 
            </summary>
            <param name="values">Values to be added.</param>
            <param name="index">The starting index.</param>
            <param name="length">The number of items to add.</param>
            <remarks>
            Adds at most <c>length</c> pairs key-value where the value is an item of <v>values</v> array 
            and the key is its index in the array starting from the <c>index</c>.
            </remarks>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.#ctor(System.Int32[],System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Pchp.Core.PhpHashtable"/> class filled by values from specified array.
            </summary>
            <param name="values">An array of values to be added to the table.</param>
            <param name="start">An index of the first item from <paramref name="values"/> to add.</param>
            <param name="length">A number of items to add.</param>
            <param name="value">A value to be filtered.</param>
            <param name="doFilter">Wheter to add all items but <paramref name="value"/> (<b>true</b>) or 
            all items with the value <paramref name="value"/> (<b>false</b>).</param>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.#ctor(Pchp.Core.PhpHashtable)">
            <summary>
            Creates PhpHashtable that shares internal <see cref="F:Pchp.Core.PhpHashtable.table"/> with another array.
            </summary>
            <param name="array">The table to be shared.</param>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.GetFastEnumerator">
            <summary>
            Get fast enumerator structure to be used internally.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpHashtable.Count">
            <summary>Retrieves the number of items in this instance.</summary>
        </member>
        <member name="P:Pchp.Core.PhpHashtable.IsSynchronized">
            <summary>This property is always false.</summary>
        </member>
        <member name="P:Pchp.Core.PhpHashtable.SyncRoot">
            <summary>This property always refers to this instance.</summary>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the <see cref="T:Pchp.Core.PhpHashtable"/> or a portion of it to a one-dimensional array.
            </summary>
            <param name="array">The one-dimensional array.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.System#Collections#Generic#ICollection{Pchp#Core#PhpValue}#Remove(Pchp.Core.PhpValue)">
            <summary>
            Removes all occurances of given value.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpHashtable.DictionaryAdapter._enumerator">
            <summary>
            Currently pointed element.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpHashtable.DictionaryKeysOrValuesCollection">
            <remarks>Thread safe.</remarks>
        </member>
        <member name="F:Pchp.Core.PhpHashtable.DictionaryKeysOrValuesCollection._array">
            <summary>
            Array to be enumerated.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpHashtable.DictionaryKeysOrValuesCollection._keys">
            <summary>
            Whether the collection represents keys or values.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpHashtable.DictionaryKeysOrValuesCollection.IsKeyCollection">
            <summary>
            If the collection represents keys.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpHashtable.DictionaryKeysOrValuesCollection.IsValueCollection">
            <summary>
            If the collection represents values.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.DictionaryKeysOrValuesCollection.#ctor(Pchp.Core.PhpHashtable,System.Boolean)">
            <summary>
            Creates the collection of keys or values over the given array.
            </summary>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:Pchp.Core.PhpHashtable.IsFixedSize">
            <summary>This property is always false.</summary>
        </member>
        <member name="P:Pchp.Core.PhpHashtable.IsReadOnly">
            <summary>This property is always false.</summary>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.System#Collections#IDictionary#GetEnumerator">
            <summary>
            Returns an enumerator which iterates through values in this instance in order as they were added in it.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.Clear">
            <summary>
            Removes all elements from this instance.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.Contains(System.Object)">
            <summary>
            Determines whether an element with the specified key is in this instance.
            </summary>
            <param name="key">The key.</param>
            <returns>Whether an element with the <paramref name="key"/> key is in the table.</returns>
            <exception cref="T:System.InvalidCastException">The <paramref name="key"/> is neither <see cref="T:System.Int32"/> nor <see cref="T:System.String"/>.</exception>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.Add(System.Object,System.Object)">
            <summary>
            Adds an entry into the table at its logical end. 
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in this instance.</exception>
            <exception cref="T:System.InvalidCastException">The <paramref name="key"/> is neither <see cref="T:System.Int32"/> nor not null <see cref="T:System.String"/>.</exception>
        </member>
        <member name="P:Pchp.Core.PhpHashtable.Item(System.Object)">
            <summary>
            Gets or sets a value associated with a key.
            </summary>
            <remarks>If the key doesn't exist in table the new entry is added.</remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is a null reference.</exception>
            <exception cref="T:System.InvalidCastException">The <paramref name="key"/> is neither <see cref="T:System.Int32"/> nor not null <see cref="T:System.String"/>.</exception>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.Remove(System.Object)">
            <summary>
            Removes an entry having the specified key.
            </summary>
            <param name="key">The key.</param>
            <exception cref="T:System.InvalidCastException">The <paramref name="key"/> is neither <see cref="T:System.Int32"/> nor not null <see cref="T:System.String"/>.</exception>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.Add(System.Object)">
            <summary>
            Adds an entry into the table at its logical end. The key is generated automatically.
            </summary>
            <param name="value">The value to be added.</param>
            <return>
            1 if the entry has been added, 0 otherwise. Note, this differs from <see cref="M:System.Collections.IList.Add(System.Object)"/>
            because <see cref="T:Pchp.Core.PhpHashtable"/> doesn't support fast retrieval of the element's index.
            </return>
            <remarks>
            The key will be the maximal value of an integer key ever added into this instance plus one
            provided the result of addition fits into an 32-bit integer. Otherwise, the entry is not added
            and <b>false</b> is returned.
            </remarks>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.ContainsKey(System.String)">
            <summary>
            Determines whether an element with the specified key is in this instance.
            </summary>
            <param name="key">The key.</param>
            <returns>Whether an element with the <paramref name="key"/> key is in the table.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="key"/> is a <B>null</B> reference.</exception>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.ContainsKey(System.Int32)">
            <summary>
            Determines whether an element with the specified key is in this instance.
            </summary>
            <param name="key">The key.</param>
            <returns>Whether an element with the <paramref name="key"/> key is in the table.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="key"/> is a <B>null</B> reference.</exception>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.AddToEnd(Pchp.Core.PhpValue)">
            <summary>
            Add an item onto the end of this array.
            </summary>
            <param name="value">Value to be added.</param>
            <remarks>This method is supposed to be called on newly created arrays. Several checks are not performed to enhance performance of arrays initialization.</remarks>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.Add(System.Int32,Pchp.Core.PhpValue)">
            <summary>
            Adds an entry into the table at its logical end. 
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.Add(System.String,Pchp.Core.PhpValue)">
            <summary>
            Adds an entry into the table at its logical end. 
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is a null reference.</exception>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.AddRange(System.Collections.IEnumerable)">
            <summary>
            Adds range of values at the end of the hashtable.
            </summary>
            <param name="enumeration">The value enumeration.Cannot be <c>null</c>.</param>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.AddRange(System.Collections.Generic.IEnumerable{Pchp.Core.PhpValue})">
            <summary>
            Adds range of values at the end of the hashtable.
            </summary>
            <param name="enumeration">The value enumeration. Cannot be <c>null</c>.</param>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.AddRange(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds range of values at the end of the hashtable.
            </summary>
            <param name="enumeration">The value enumeration. Cannot be <c>null</c>.</param>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.AddRange(System.String[])">
            <summary>
            Adds range of values at the end of the hashtable.
            </summary>
            <param name="enumeration">The value enumeration. Cannot be <c>null</c>.</param>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.Prepend(System.String,Pchp.Core.PhpValue)">
            <summary>
            Adds an entry into the table at its logical beginning. 
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in this instance.</exception>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.Prepend(System.Int32,Pchp.Core.PhpValue)">
            <summary>
            Adds an entry into the table at its logical beginning. 
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in this instance.</exception>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.Prepend(Pchp.Core.IntStringKey,Pchp.Core.PhpValue)">
            <summary>
            Adds an entry into the table at its logical beginning. 
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in this instance.</exception>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.RemoveLast">
            <summary>
            Removes the last entry of the array and returns it.
            </summary>
            <returns>The last entry of the array.</returns>
            <exception cref="T:System.InvalidOperationException">The table is empty.</exception>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.RemoveFirst">
            <summary>
            Removes the first entry of the array and returns it.
            </summary>
            <returns>The first entry of the array.</returns>
            <exception cref="T:System.InvalidOperationException">The table is empty.</exception>
        </member>
        <member name="P:Pchp.Core.PhpHashtable.Item(System.String)">
            <summary>
            Gets or sets a value associated with a key.
            </summary>
            <param name="skey">The <see cref="T:System.String"/> key.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="skey"/> is a <c>null</c> reference.</exception>
            <remarks>If the key doesn't exist in table the new entry is added.</remarks>
        </member>
        <member name="P:Pchp.Core.PhpHashtable.Item(System.Int32)">
            <summary>
            Gets or sets a value associated with a key.
            </summary>
            <param name="ikey">The integer key.</param>
            <remarks>If the key doesn't exist in table the new entry is added.</remarks>
        </member>
        <member name="P:Pchp.Core.PhpHashtable.Item(System.Int64)">
            <summary>
            Gets or sets a value associated with a key.
            </summary>
            <param name="lkey">The integer key.</param>
            <remarks>If the key doesn't exist in table the new entry is added.</remarks>
        </member>
        <member name="P:Pchp.Core.PhpHashtable.Item(Pchp.Core.IntStringKey)">
            <summary>
            Gets or sets a value associated with a key.
            </summary>
            <param name="key">The key.</param>
            <remarks>If the key doesn't exist in table the new entry is added.</remarks>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.Clone">
            <summary>
            Creates a shallow copy of the hashtable.
            </summary>
            <returns>A copy of the hashtable.</returns>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.AddTo(Pchp.Core.PhpHashtable,System.Boolean)">
            <summary>
            Adds items of this instance to a specified instance resetting integer keys.
            </summary>
            <param name="dst">Destination table.</param>
            <param name="deepCopy">Whether to make deep copies of added items.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="dst"/> is a <B>null</B> reference.</exception>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.CopyValuesTo(Pchp.Core.PhpValue[],System.Int32)">
            <summary>
            Copy values of this array into single dimensional array.
            </summary>
            <param name="dst"></param>
            <param name="offset"></param>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.GetValues">
            <summary>
            Copies values to a new array.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.Sort(System.Collections.Generic.IComparer{System.Collections.Generic.KeyValuePair{Pchp.Core.IntStringKey,Pchp.Core.PhpValue}})">
            <summary>
            Sorts this instance using specified comparer.
            </summary>
            <param name="comparer">The comparer to be used to compare array items.</param>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.Sort(Pchp.Core.PhpArray[],System.Collections.Generic.IComparer{System.Collections.Generic.KeyValuePair{Pchp.Core.IntStringKey,Pchp.Core.PhpValue}}[])">
            <summary>
            Sorts multiple hashtables given comparer for each hashtable.
            </summary>
            <param name="hashtables">
            The <see cref="T:System.Collections.ICollection"/> of <see cref="T:Pchp.Core.PhpHashtable"/>s. 
            All these tables has to be of the same length which has to be .
            </param> 
            <param name="comparers">
            An array of entry comparers.
            The number of comparers has to be the same as the number of <paramref name="hashtables"/>.
            </param>
            <remarks>
            Sorts lexicographically all <paramref name="hashtables"/> from the first to the last one using 
            <paramref name="comparers"/> successively. Changes only order of entries in <paramref name="hashtables"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="hashtables"/> or <paramref name="comparers"/> is a <B>null</B>reference.</exception>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.SetOperation(Pchp.Core.SetOperations,Pchp.Core.PhpArray[],System.Collections.Generic.IComparer{System.Collections.Generic.KeyValuePair{Pchp.Core.IntStringKey,Pchp.Core.PhpValue}})">
            <summary>
            Performs a set operation <see cref="T:Pchp.Core.PhpHashtable"/>s.
            </summary>
            <param name="op">The operation.</param>
            <param name="hashtables">The <see cref="T:System.Collections.ICollection"/> of <see cref="T:Pchp.Core.PhpHashtable"/>s.</param>
            <param name="comparer">The dictionary entry comparer used to compare entries of <paramref name="hashtables"/>.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="hashtables"/> or <paramref name="comparer"/> is a <B>null</B> reference.</exception>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.Reverse">
            <summary>
            Reverses order of entries in this instance.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.Shuffle(System.Random)">
            <summary>
            Shuffles order of elements in the hashtable at random.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="generator"/> is a <b>null</b> reference.</exception>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.Unite(Pchp.Core.PhpHashtable)">
            <summary>
            Unites an <paramref name="array"/> with this instance.
            </summary>
            <param name="array">An <see cref="T:Pchp.Core.PhpArray"/> of items to be united with this instance.</param>
            <returns>Reference to this instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="array"/> is null reference.</exception>
            <remarks>
            All keys are preserved. Values associated with existing string keys will not be overwritten.
            </remarks>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.ReindexAll">
            <summary>
            Sets all keys to increasing integers according to their respective order in the list.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.ReindexIntegers(System.Int32)">
            <summary>
            Sets all keys to increasing integers according to their respective order in the list.
            </summary>
            <param name="startIndex">An index from which to start indexing.</param>
            <remarks>If indexing overflows a capacity of integer type it continues with <see cref="F:System.Int32.MinValue"/>.</remarks>
        </member>
        <member name="M:Pchp.Core.PhpHashtable.ReindexAndReplace(System.Int32,System.Int32,System.Collections.Generic.ICollection{Pchp.Core.PhpValue})">
            <summary>
            Replaces a part of the hashtable with specified item(s) and reindexes all integer keys in result.
            </summary>
            <param name="offset">
            The ordinary number of the first item to be replaced. 
            <paramref name="offset"/> should be at least zero and at most equal as the number of items in the array.
            </param>
            <param name="length">
            The number of items to be replaced. Should be at least zero and at most equal 
            to the number of items in the array.
            </param>
            <param name="replacementValues">
            The enumerable collection of values by which items in the range specified by
            <paramref name="offset"/> and <paramref name="length"/> is replaced.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException"><pararef name="offset"/> or <paramref name="length"/> has invalid value.</exception>
        </member>
        <member name="F:Pchp.Core.PhpNumber._type">
            <summary>
            Number type.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpNumber.IsDouble">
            <summary>
            Gets value indicating the number is a floating point number.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpNumber.IsLong">
            <summary>
            Gets value indicating the number is an integer.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpNumber.Long">
            <summary>
            Gets the long field of the number.
            Does not perform a conversion, expects the number is of type long.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpNumber.Double">
            <summary>
            Gets the double field of the number.
            Does not perform a conversion, expects the number is of type double.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Equals(Pchp.Core.PhpNumber)">
            <summary>
            Value equality comparison, operand must contain the same value as this.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.CompareTo(Pchp.Core.PhpNumber)">
            <summary>
            Gets non strict comparison with another number.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.CompareTo(System.Double)">
            <summary>
            Gets non strict comparison with another number.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.CompareTo(System.Int64)">
            <summary>
            Gets non strict comparison with another number.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Equality(Pchp.Core.PhpNumber,Pchp.Core.PhpValue)">
            <summary>
            Non strict equality operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Inequality(Pchp.Core.PhpNumber,Pchp.Core.PhpValue)">
            <summary>
            Non strict inequality operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Equality(Pchp.Core.PhpNumber,Pchp.Core.PhpNumber)">
            <summary>
            Non strict equality operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Inequality(Pchp.Core.PhpNumber,Pchp.Core.PhpNumber)">
            <summary>
            Non strict inequality operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Equality(Pchp.Core.PhpNumber,System.Int64)">
            <summary>
            Non strict equality operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Inequality(Pchp.Core.PhpNumber,System.Int64)">
            <summary>
            Non strict equality operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Equality(System.Int64,Pchp.Core.PhpNumber)">
            <summary>
            Non strict equality operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Inequality(System.Int64,Pchp.Core.PhpNumber)">
            <summary>
            Non strict equality operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Equality(Pchp.Core.PhpNumber,System.Double)">
            <summary>
            Non strict equality operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Inequality(Pchp.Core.PhpNumber,System.Double)">
            <summary>
            Non strict equality operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Addition(Pchp.Core.PhpNumber,Pchp.Core.PhpNumber)">
            <summary>
            Implements <c>+</c> operator on numbers.
            </summary>
            <param name="x">First operand.</param>
            <param name="y">Second operand.</param>
            <returns></returns>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Addition(Pchp.Core.PhpNumber,System.Double)">
            <summary>
            Implements <c>+</c> operator on numbers.
            </summary>
            <param name="x">First operand.</param>
            <param name="dy">Second operand.</param>
            <returns></returns>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Addition(Pchp.Core.PhpNumber,System.Int64)">
            <summary>
            Implements <c>+</c> operator on numbers.
            </summary>
            <param name="x">First operand.</param>
            <param name="ly">Second operand.</param>
            <returns></returns>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Addition(System.Double,Pchp.Core.PhpNumber)">
            <summary>
            Implements <c>+</c> operator on numbers.
            </summary>
            <param name="dx">First operand.</param>
            <param name="y">Second operand.</param>
            <returns></returns>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Addition(System.Int64,Pchp.Core.PhpNumber)">
            <summary>
            Implements <c>+</c> operator on numbers.
            </summary>
            <param name="lx">First operand.</param>
            <param name="y">Second operand.</param>
            <returns></returns>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Addition(Pchp.Core.PhpValue,Pchp.Core.PhpNumber)">
            <summary>
            Implements <c>+</c> operator on numbers.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Addition(Pchp.Core.PhpNumber,Pchp.Core.PhpValue)">
            <summary>
            Implements <c>+</c> operator on numbers.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Add(System.Int64,System.Int64)">
            <summary>
            Implements <c>+</c> operator on numbers.
            </summary>
            <param name="x">First operand.</param>
            <param name="y">Second operand.</param>
            <returns></returns>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Add(System.Int64,System.Double)">
            <summary>
            Implements <c>+</c> operator on numbers.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Add(Pchp.Core.PhpValue,System.Int64)">
            <summary>
            Implements <c>+</c> operator on numbers.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Add(Pchp.Core.PhpValue,System.Double)">
            <summary>
            Implements <c>+</c> operator on numbers.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Add(System.Int64,Pchp.Core.PhpValue)">
            <summary>
            Implements <c>+</c> operator on numbers.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Add(System.Double,Pchp.Core.PhpValue)">
            <summary>
            Implements <c>+</c> operator on numbers.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Add(Pchp.Core.PhpValue,Pchp.Core.PhpValue)">
            <summary>
            Implements <c>+</c> operator on values.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.AddNonNumbers(Pchp.Core.PhpValue@,Pchp.Core.PhpValue@)">
            <summary>
            Implements <c>+</c> operator for unconvertible values or arrays.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Add(Pchp.Core.PhpValue,Pchp.Core.PhpArray)">
            <summary>
            Implements <c>+</c> operator on values.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Add(Pchp.Core.PhpArray,Pchp.Core.PhpValue)">
            <summary>
            Implements <c>+</c> operator on values.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Subtraction(Pchp.Core.PhpNumber,Pchp.Core.PhpNumber)">
            <summary>
            Implements <c>-</c> operator on numbers.
            </summary>
            <param name="x">First operand.</param>
            <param name="y">Second operand.</param>
            <returns></returns>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Subtraction(Pchp.Core.PhpNumber,System.Int64)">
            <summary>
            Implements <c>-</c> operator on numbers.
            </summary>
            <param name="x">First operand.</param>
            <param name="ly">Second operand.</param>
            <returns></returns>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Subtraction(System.Int64,Pchp.Core.PhpNumber)">
            <summary>
            Implements <c>-</c> operator on numbers.
            </summary>
            <param name="lx">First operand.</param>
            <param name="y">Second operand.</param>
            <returns></returns>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Sub(System.Int64,System.Int64)">
            <summary>
            Subtract operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Sub(System.Int64,System.Double)">
            <summary>
            Subtract operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Sub(Pchp.Core.PhpNumber,System.Double)">
            <summary>
            Subtract operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Sub(Pchp.Core.PhpValue,System.Int64)">
            <summary>
            Subtract operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Sub(Pchp.Core.PhpValue,System.Double)">
            <summary>
            Subtract operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Sub(System.Double,Pchp.Core.PhpValue)">
            <summary>
            Subtract operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Sub(Pchp.Core.PhpValue,Pchp.Core.PhpNumber)">
            <summary>
            Subtract operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Sub(Pchp.Core.PhpNumber,Pchp.Core.PhpValue)">
            <summary>
            Implements <c>-</c> operator on numbers.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Sub(Pchp.Core.PhpValue,Pchp.Core.PhpValue)">
            <summary>
            Subtract operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Sub(System.Int64,Pchp.Core.PhpValue)">
            <summary>
            Subtract operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Minus(System.Int64)">
            <summary>
            Unary minus operator for int64.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_UnaryNegation(Pchp.Core.PhpNumber)">
            <summary>
            Unary minus operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Division(Pchp.Core.PhpNumber,Pchp.Core.PhpNumber)">
            <summary>
            Divide operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Division(Pchp.Core.PhpNumber,System.Int64)">
            <summary>
            Divide operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Division(Pchp.Core.PhpNumber,System.Double)">
            <summary>
            Divide operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Division(Pchp.Core.PhpNumber,Pchp.Core.PhpValue)">
            <summary>
            Divide operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Division(System.Double,Pchp.Core.PhpNumber)">
            <summary>
            Divide operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Division(System.Int64,Pchp.Core.PhpNumber)">
            <summary>
            Divide operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Multiply(System.Int64,System.Int64)">
            <summary>
            Multiplies two long numbers with eventual overflow to double.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Multiply(System.Int64,System.Double)">
            <summary>
            Multiply operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Multiply(Pchp.Core.PhpNumber,Pchp.Core.PhpNumber)">
            <summary>
            Mul operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Multiply(System.Int64,Pchp.Core.PhpNumber)">
            <summary>
            Mul operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Multiply(Pchp.Core.PhpNumber,System.Int64)">
            <summary>
            Mul operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Multiply(Pchp.Core.PhpNumber,System.Double)">
            <summary>
            Mul operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Multiply(Pchp.Core.PhpNumber,Pchp.Core.PhpValue)">
            <summary>
            Mul operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Multiply(Pchp.Core.PhpValue,Pchp.Core.PhpNumber)">
            <summary>
            Mul operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Multiply(System.Int64,Pchp.Core.PhpValue)">
            <summary>
            Multiply operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Multiply(System.Double,Pchp.Core.PhpValue)">
            <summary>
            Multiply operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Multiply(Pchp.Core.PhpValue,Pchp.Core.PhpValue)">
            <summary>
            Multiply operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Multiply(Pchp.Core.PhpValue,System.Int64)">
            <summary>
            Multiply operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Multiply(Pchp.Core.PhpValue,System.Double)">
            <summary>
            Multiply operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Mod(Pchp.Core.PhpValue,Pchp.Core.PhpValue)">
            <summary>Gets remainder of two numbers.</summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Mod(Pchp.Core.PhpValue,System.Int64)">
            <summary>Gets remainder of two numbers.</summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Mod(System.Int64,Pchp.Core.PhpValue)">
            <summary>Gets remainder of two numbers.</summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.Mod(System.Int64,System.Int64)">
            <summary>Gets remainder of two numbers.</summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Implicit(Pchp.Core.PhpNumber)~System.Int64">
            <summary>
            Converts given number to <see cref="T:System.Int64"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Implicit(Pchp.Core.PhpNumber)~System.Boolean">
            <summary>
            Converts given number to <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.op_Implicit(Pchp.Core.PhpNumber)~System.Double">
            <summary>
            Converts given number to <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpNumber.Default">
            <summary>
            Integer zero number.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpNumber.ToString">
            <summary>
            Gets string representation of the number.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpResource">
            <summary>
            Base class for PHP Resources - both built-in and extension-resources.
            Resources rely on GC Finalization - override FreeManaged for cleanup.
            When printing a resource variable in PHP, "Resource id #x" prints out.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpResource.PhpTypeName">
            <summary>The name of this variable type.</summary>
        </member>
        <member name="P:Pchp.Core.PhpResource.DisposedTypeName">
            <summary>The resources' TypeName to be displayed after call to Dispose</summary>
        </member>
        <member name="P:Pchp.Core.PhpResource.Invalid">
            <summary>
            An invalid resource instance.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpResource.RegisterInternalInstance">
            <summary>
            Allocate a unique identifier for a resource.
            </summary>
            <remarks>
            Internal resources are given even numbers while resources
            allocated by extensions get odd numbers to minimize the communication
            between internal and external resource managers.
            </remarks>
            <returns>The unique identifier of an internal resource (even number starting from 2).</returns>
        </member>
        <member name="M:Pchp.Core.PhpResource.#ctor(System.Int32,System.String)">
            <summary>
            Create a new instance with the given Id.
            </summary>
            <param name="resourceId">Unique resource identifier (odd for external resources).</param>
            <param name="resourceTypeName">The type to be reported to use when dumping a resource.</param>
        </member>
        <member name="M:Pchp.Core.PhpResource.#ctor(System.String)">
            <summary>
            Create a new instance of a given Type and Name.
            The instance Id is auto-incrementing starting from 1.
            </summary>
            <param name="resourceTypeName">The type to be reported to use when dumping a resource.</param>
        </member>
        <member name="M:Pchp.Core.PhpResource.#ctor">
            <summary>
            Creates a new invalid resource.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpResource.ToString">
            <summary>
            Returns a string that represents the current PhpResource.
            </summary>
            <returns>'Resource id #{ID}'</returns>
        </member>
        <member name="M:Pchp.Core.PhpResource.op_Implicit(Pchp.Core.PhpResource)~Pchp.Core.PhpValue">
            <summary>
            Implicit conversion to <see cref="T:Pchp.Core.PhpValue"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpResource.Dispose">
            <summary>
            Disposes the resource.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpResource.Dispose(System.Boolean)">
            <summary>
            Cleans-up the resource.
            </summary>
            <remarks>
            When disposing non-deterministically, only unmanaged resources should be freed. 
            <seealso cref="M:Pchp.Core.PhpResource.FreeUnmanaged"/>
            </remarks>
            <param name="disposing">Whether the resource is disposed deterministically.</param>
        </member>
        <member name="M:Pchp.Core.PhpResource.FreeManaged">
            <summary>
            Override this virtual method in your descendants to perform 
            cleanup of Managed resources - those having a Finalizer of their own.
            </summary>
            <remarks>
            Note that when Disposing explicitly, both FreeManaged and FreeUnmanaged are called.
            </remarks>
        </member>
        <member name="M:Pchp.Core.PhpResource.FreeUnmanaged">
            <summary>
            Override this virtual method to cleanup the contained unmanaged objects.
            </summary>
            <remarks>
            Note that when Dispose(false) is called from the Finalizer,
            the order of finalization is random. In other words, contained
            managed objects may have been already finalized - don't reference them.
            </remarks>
        </member>
        <member name="P:Pchp.Core.PhpResource.Id">
            <summary>Identifier of a PhpResource instance. Unique index starting at 1</summary>
        </member>
        <member name="P:Pchp.Core.PhpResource.TypeName">
            <summary>Type resource name - string to be reported to user when dumping a resource.</summary>
        </member>
        <member name="P:Pchp.Core.PhpResource.IsValid">
            <summary>false if the resource has been already disposed</summary>
        </member>
        <member name="P:Pchp.Core.PhpResource.Pchp#Core#IPhpPrintable#Properties">
            <summary>
            Explicitly provide empty set of properties to be printed by var_dump or print_r.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpResource._resourceId">
            <summary>Unique resource identifier (even for internal resources, odd for external ones).</summary>
            <remarks>
            Internal resources are given even numbers while resources
            allocated by extensions get odd numbers to minimize the communication
            between internal and external resource managers.
            </remarks>
        </member>
        <member name="F:Pchp.Core.PhpResource._typeName">
            <summary>
            Type resource name - string to be reported to user when dumping a resource.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpResource._disposed">
            <summary>
            Set in Dispose to avoid multiple cleanup attempts.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpResource.s_ResourceIdCounter">
            <summary>Static counter for unique PhpResource instance Id's.</summary>
        </member>
        <member name="T:Pchp.Core.PhpSessionState">
            <summary>
            A session state.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpSessionState.Default">
            <summary>
            The default, closed, state.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpSessionState.Closed">
            <summary>
            Session was not started yet or was closed already.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpSessionState.Started">
            <summary>
            Session has started.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpSessionState.InProgress">
            <summary>
            Session is in progress of loading or closing.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpSessionHandler">
            <summary>
            A PHP session handler providing basic session operations.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpSessionHandler.DummySessionItem">
            <summary>
            Dummy session item keeping .NET session object alive.
            Used by derived class.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpSessionHandler.SID_Constant">
            <summary>
            Name of PHP <c>SID</c> constant to be set when starting session.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpSessionHandler.GetSessionName(Pchp.Core.IHttpPhpContext)">
            <summary>
            Gets or sets the session name.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpSessionHandler.SetSessionName(Pchp.Core.IHttpPhpContext,System.String)">
            <summary>
            Gets or sets the session name.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpSessionHandler.HandlerName">
            <summary>
            Gets this handler name.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpSessionHandler.Load(Pchp.Core.IHttpPhpContext)">
            <summary>
            Called when starting a session,
            loads session data into an array.
            </summary>
            <param name="webctx">Current web context.</param>
        </member>
        <member name="M:Pchp.Core.PhpSessionHandler.Persist(Pchp.Core.IHttpPhpContext,Pchp.Core.PhpArray)">
            <summary>
            Stores the session array into the server session.
            </summary>
            <param name="webctx">Current web context.</param>
            <param name="session">Session array.</param>
            <returns></returns>
        </member>
        <member name="M:Pchp.Core.PhpSessionHandler.Abandon(Pchp.Core.IHttpPhpContext)">
            <summary>
            Frees the session.
            Next time a new (empty) sesison should be created.
            </summary>
            <param name="webctx">Current web context.</param>
        </member>
        <member name="M:Pchp.Core.PhpSessionHandler.GetSessionId(Pchp.Core.IHttpPhpContext)">
            <summary>
            Gets the session ID (SID constant).
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpSessionHandler.SetSessionId(Pchp.Core.IHttpPhpContext,System.String)">
            <summary>
            Sets the session ID (SID constant).
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpSessionHandler.IsEnabled(Pchp.Core.IHttpPhpContext)">
            <summary>
            Gets value indicating the sessions are configured and available to use.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpSessionHandler.StartSession(Pchp.Core.Context,Pchp.Core.IHttpPhpContext)">
            <summary>
            Starts the session if it is not started yet.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpSessionHandler.AbortSession(Pchp.Core.Context,Pchp.Core.IHttpPhpContext)">
            <summary>
            Discard session array changes and finish session.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpSessionHandler.CloseSession(Pchp.Core.Context,Pchp.Core.IHttpPhpContext,System.Boolean)">
            <summary>
            Closes the session and either persists the session data or abandons the session.
            </summary>
        </member>
        <member name="T:Pchp.Core.Text.BlobChar">
            <summary>
            A character that can be either a single <see cref="T:System.Byte"/> or Unicode <see cref="T:System.Char"/>.
            Used internally.
            </summary>
        </member>
        <member name="P:Pchp.Core.Text.BlobChar.IsUnicode">
            <summary>
            Character stored as UTF16.
            </summary>
        </member>
        <member name="P:Pchp.Core.Text.BlobChar.IsBinary">
            <summary>
            Character needs to be stored as a single byte,
            conversion to char would change its semantic.
            </summary>
        </member>
        <member name="M:Pchp.Core.Text.BlobChar.AsValue">
            <summary>
            Converts the character to a value.
            </summary>
        </member>
        <member name="M:Pchp.Core.Text.BlobChar.FromValue(Pchp.Core.PhpValue)">
            <summary>
            Converts the value to a character.
            </summary>
        </member>
        <member name="M:Pchp.Core.Text.BlobChar.ToCharArray(Pchp.Core.Text.BlobChar[],System.Text.Encoding)">
            <summary>
            Copies characters to a new array of <see cref="T:System.Char"/>s.
            Single-byte chars are encoded to Unicode chars.
            </summary>
        </member>
        <member name="M:Pchp.Core.Text.BlobChar.ToByteArray(Pchp.Core.Text.BlobChar[],System.Text.Encoding)">
            <summary>
            Decode characters into a new array of <see cref="T:System.Byte"/>s.
            Unicode chars are decoded to single-byte chars.
            </summary>
        </member>
        <member name="T:Pchp.Core.Text.IMutableString">
            <summary>
            Provides access to <see cref="T:Pchp.Core.PhpString"/> with write access.
            </summary>
        </member>
        <member name="T:Pchp.Core.Text.PhpStringExtension">
            <summary>
            <see cref="T:Pchp.Core.PhpString"/> operations.
            </summary>
        </member>
        <member name="M:Pchp.Core.Text.PhpStringExtension.Ord(Pchp.Core.PhpString)">
            <summary>
            Gets first characters <c>ord</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Text.PhpStringExtension.Substring(Pchp.Core.PhpString,System.Int32)">
            <summary>
            Gets substring of this instance.
            The operation safely maintains single byte and unicode characters, and reuses existing underlaying chunks of text.
            </summary>
        </member>
        <member name="M:Pchp.Core.Text.PhpStringExtension.Substring(Pchp.Core.PhpString,System.Int32,System.Int32)">
            <summary>
            Gets substring of this instance.
            The operation safely maintains single byte and unicode characters, and reuses existing underlaying chunks of text.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The start index is less than zero.</exception>
        </member>
        <member name="M:Pchp.Core.Text.PhpStringExtension.Reverse(Pchp.Core.PhpString)">
            <summary>
            Creates a new string with reversed order of characters.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpString">
            <summary>
            String builder providing fast concatenation and character replacements for hybrid strings (both unicode and binary).
            </summary>
            <remarks>Optimized for concatenation and output.</remarks>
        </member>
        <member name="T:Pchp.Core.PhpString.Blob">
            <summary>
            Writeable string representation consisting of both Unicode (<see cref="T:System.String"/> or <see cref="T:System.Char"/>[]) and Single-byte characters (<see cref="T:System.Byte"/>[]).
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpString.Blob.Flags.ContainsBinary">
            <summary>
            The blob contains <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpString.Blob.Flags.ContainsMutables">
            <summary>
            Whether the blob contains mutable instances that have to be cloned when copying.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpString.Blob._chunks">
            <summary>
            One string or concatenated string chunks of either <see cref="T:System.String"/>, <see cref="T:System.Byte"/>[], <see cref="T:System.Char"/>[] or <see cref="T:Pchp.Core.PhpString.Blob"/>.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpString.Blob._chunksCount">
            <summary>
            Count of objects in <see cref="F:Pchp.Core.PhpString.Blob._chunks"/>.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpString.Blob._flags">
            <summary>
            String information.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpString.Blob._length">
            <summary>
            Cached length of the concatenated string.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpString.Blob._string">
            <summary>
            Cached concatenated string.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpString.Blob._refs">
            <summary>
            References count. More than one reference means the data are shared accross more instances (read-only).
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpString.Blob.ContainsBinaryData">
            <summary>
            Gets value indicating the string contains <see cref="T:System.Byte"/> in addition to unicode <see cref="T:System.Char"/>.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpString.Blob.IsEmpty">
            <summary>
            Gets value indicating the string is empty.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpString.Blob.IsArrayOfChunks">
            <summary>
            The string is represented internally as array of chunks.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpString.Blob.IsShared">
            <summary>
            Gets value indicating that this instance of data is shared and cannot be written to.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpString.Blob.#ctor(System.Int32)">
            <param name="capacity">Number of preallocated chunks. Makes sense for values greater than <c>1</c>.</param>
        </member>
        <member name="M:Pchp.Core.PhpString.Blob.AddRef">
            <summary>
            Makes this instance of string data shared and returns self.
            </summary>
            <returns>This instance.</returns>
        </member>
        <member name="P:Pchp.Core.PhpString.Blob.Length">
            <summary>
            Gets the count of characters and binary characters.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpString.Blob.Substring(Pchp.Core.PhpString.Blob,System.Int32,System.Int32@)">
            <summary>
            Adds portion of this instance into <paramref name="target"/>
            </summary>
            <param name="target">Target blog to copy substring to.</param>
            <param name="start">Index of first character to be copied.</param>
            <param name="count">Count of charactyers to be copied.</param>
        </member>
        <member name="M:Pchp.Core.PhpString.Blob.ToBytes(Pchp.Core.Context)">
            <summary>
            Gets string encoded into array of bytes according to corrent string encoding.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpString.Blob.Item(System.Int32)">
            <summary>
            Gets or sets character at given index according to PHP semantics.
            </summary>
            <param name="index">Character index.</param>
            <returns>Character at given position.</returns>
        </member>
        <member name="P:Pchp.Core.PhpString.Blob.Pchp#Core#IPhpArray#Count">
            <summary>
            Gets number of items in the collection.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpString.Blob.GetItemValue(Pchp.Core.IntStringKey)">
            <summary>
            Gets value at given index.
            Gets <c>void</c> value in case the key is not found.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpString.Blob.SetItemValue(Pchp.Core.IntStringKey,Pchp.Core.PhpValue)">
            <summary>
            Sets value at specific index. Value must not be an alias.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpString.Blob.Pchp#Core#IPhpArray#SetItemAlias(Pchp.Core.IntStringKey,Pchp.Core.PhpAlias)">
            <summary>
            Writes aliased value at given index.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpString.Blob.Pchp#Core#IPhpArray#AddValue(Pchp.Core.PhpValue)">
            <summary>
            Add a value to the end of array.
            Value can be an alias.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpString.Blob.Pchp#Core#IPhpArray#RemoveKey(Pchp.Core.IntStringKey)">
            <summary>
            Removes a value matching given key.
            In case the value is not found, the method does nothing.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpString.Blob.Pchp#Core#IPhpArray#EnsureItemAlias(Pchp.Core.IntStringKey)">
            <summary>
            Ensures the item at given index is alias.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpString.Blob.Pchp#Core#IPhpArray#EnsureItemObject(Pchp.Core.IntStringKey)">
            <summary>
            Ensures the item at given index is class object.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpString.Blob.Pchp#Core#IPhpArray#EnsureItemArray(Pchp.Core.IntStringKey)">
            <summary>
            Ensures the item at given index is array.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpString._data">
            <summary>
            Content of the string.
            Can be either <see cref="T:System.String"/> or <see cref="T:Pchp.Core.PhpString.Blob"/> or a <c>null</c> reference (because of <c>default</c>).
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpString.Length">
            <summary>
            Gets the count of characters and binary characters.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpString.ContainsBinaryData">
            <summary>
            Gets value indicating the string contains <see cref="T:System.Byte"/> instead of unicode <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpString.IsEmpty">
            <summary>
            Gets value indicating the string is empty or uninitialized.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpString.IsDefault">
            <summary>
            The value is not initialized, representing <c>NULL</c>.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpString.Empty">
            <summary>
            Empty immutable string representing the <see cref="F:System.String.Empty"/> (<c>""</c>).
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpString.Default">
            <summary>
            UNinitialized value of <see cref="T:Pchp.Core.PhpString"/>, representing <c>NULL</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpString.op_Implicit(System.String)~Pchp.Core.PhpString">
            <summary>
            Converts <see cref="T:System.String"/> to <see cref="T:Pchp.Core.PhpString"/>.
            </summary>
            <param name="value">String value, can be <c>null</c>.</param>
        </member>
        <member name="M:Pchp.Core.PhpString.op_Implicit(System.Byte[])~Pchp.Core.PhpString">
            <summary>
            Converts <see cref="T:System.Byte"/> array to <see cref="T:Pchp.Core.PhpString"/>.
            </summary>
            <param name="value">String value, can be <c>null</c>.</param>
        </member>
        <member name="M:Pchp.Core.PhpString.op_Explicit(System.Char[])~Pchp.Core.PhpString">
            <summary>
            Converts <see cref="T:System.Char"/> array to <see cref="T:Pchp.Core.PhpString"/>.
            </summary>
            <param name="value">String value, can be <c>null</c>.</param>
        </member>
        <member name="M:Pchp.Core.PhpString.op_Implicit(Pchp.Core.PhpString)~Pchp.Core.PhpValue">
            <summary>
            Gets the value as <see cref="T:Pchp.Core.PhpValue"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpString.ToPhpString(System.Byte[])">
            <summary>
            Operator.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpString.EnsureWritable">
            <summary>
            Gets mutable access to the string value.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpString.Output(Pchp.Core.Context)">
            <summary>
            Outputs the string content to the context output streams.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpString.Item(System.Int32)">
            <summary>
            Gets or sets character at given index according to PHP semantics.
            </summary>
            <param name="index">Character index.</param>
            <returns>Character at given position.</returns>
        </member>
        <member name="M:Pchp.Core.PhpString.Clone">
            <summary>
            Creates copy of this string.
            Internally only increases <c>refcount</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpString.IsNull(Pchp.Core.PhpString)">
            <summary>
            Operator that checks the string is default/uninitialized not containing any value.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpString.SubstringInternal(System.Int32,System.Int32)">
            <summary>
            Gets substring of this instance.
            The operation safely maintains single byte and unicode characters, and reuses existing underlaying chunks of text.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The start index is less than zero.</exception>
        </member>
        <member name="M:Pchp.Core.PhpString.ReverseInternal">
            <summary>
            Returns reversed string safe to binary data and unicode characters.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpString.CopyTo(Pchp.Core.PhpString.Blob,System.Int32,System.Int32)">
            <summary>
            Copies portion of this instance to the target string.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The start index is less than zero.</exception>
        </member>
        <member name="M:Pchp.Core.PhpString.GetByteCount(System.Text.Encoding)">
            <summary>
            Gets bytes count when converted to bytes using provided <paramref name="encoding"/>.
            </summary>
            <param name="encoding">Encoding to be used to decode bytes from unicode string segments.</param>
            <returns>Resulting bytes count.</returns>
        </member>
        <member name="M:Pchp.Core.PhpString.AsWritable(Pchp.Core.PhpString)">
            <summary>
            Gets instance of blob that is not shared.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpString.AsArray(Pchp.Core.PhpString)">
            <summary>
            Gets read-only array access to the string.
            For write access, use <see cref="M:Pchp.Core.PhpString.EnsureWritable"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpString.AsPhpValue(Pchp.Core.PhpString)">
            <summary>
            Wraps the string into <see cref="T:Pchp.Core.PhpValue"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpString.AsCharacter">
            <summary>
            Gets the first character.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpTypeCode">
            <summary>
            PeachPie type hierarchy type codes.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpTypeCode.Null">
            <summary>
            <c>NULL</c> value.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpTypeCode.Boolean">
            <summary>
            The value is of type boolean.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpTypeCode.Long">
            <summary>
            64-bit integer value.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpTypeCode.Double">
            <summary>
            64-bit floating point number.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpTypeCode.PhpArray">
            <summary>
            A PHP array.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpTypeCode.String">
            <summary>
            Unicode string value. Two-byte (UTF16) readonly string.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpTypeCode.MutableString">
            <summary>
            Both Unicode and Binary writable string value. Encapsulates two-byte (UTF16), single-byte (binary) string and string builder.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpTypeCode.Object">
            <summary>
            A class type, <c>resource</c>, <c>Closure</c> or generic <c>Object</c>. Does not represent <c>NULL</c>.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpTypeCode.Alias">
            <summary>
            <see cref="T:Pchp.Core.PhpAlias"/> type.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpTypeCodes">
            <summary>
            Helper class providing methods for <see cref="T:Pchp.Core.PhpTypeCode"/>.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpValue">
            <summary>
            Represents a PHP value.
            </summary>
            <remarks>
            Note, <c>default(PhpValue)</c> represents a <c>NULL</c> value, equivalent to <see cref="F:Pchp.Core.PhpValue.Null"/>.
            </remarks>
        </member>
        <member name="T:Pchp.Core.PhpValue.ValueField">
            <summary>
            Union for possible value types.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpValue.ObjectField">
            <summary>
            Union for possible reference types.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpValue._type">
            <summary>
            The value type.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpValue._value">
            <summary>
            A value type container.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpValue._obj">
            <summary>
            A reference type container.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpValue.IsNull">
            <summary>
            Gets value indicating whether the value is a <c>NULL</c> or undefined.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpValue.IsEmpty">
            <summary>
            Gets value indicating whether the value is considered to be empty.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpValue.IsDefault">
            <summary>
            The structure was not initialized.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpValue.IsFalse">
            <summary>
            Gets value indicating the value is <c>FALSE</c> or <c>&amp;FALSE</c>.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpValue.IsAlias">
            <summary>
            Gets value indicating whether the value is an alias containing another value.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpValue.IsObject">
            <summary>
            Gets value indicating the value represents an object.
            </summary>
            <remarks>
            Note, the object instance may be a <see cref="T:Pchp.Core.PhpResource"/> (<c>resource</c>) instance as well.
            </remarks>
        </member>
        <member name="P:Pchp.Core.PhpValue.IsResource">
            <summary>
            Gets value indicating the value represents a <c>resource</c> object.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpValue.IsArray">
            <summary>
            Gets value indicating the value represents PHP array.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpValue.IsBoolean">
            <summary>
            Gets value indicating the value represents boolean.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpValue.IsScalar">
            <summary>
            Gets value indicating this variable after dereferencing is a scalar variable.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpValue.Long">
            <summary>
            Gets the long field of the value.
            Does not perform a conversion, expects the value is of type long.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpValue.Double">
            <summary>
            Gets the double field of the value.
            Does not perform a conversion, expects the value is of type double.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpValue.Boolean">
            <summary>
            Gets the boolean field of the value.
            Does not perform a conversion, expects the value is of type boolean.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpValue.String">
            <summary>
            Gets the object field of the value as string.
            Does not perform a conversion, expects the value is of type (readonly UTF16) string.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpValue.MutableStringBlob">
            <summary>
            Gets underlaying <see cref="T:Pchp.Core.PhpString.Blob"/> object.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpValue.MutableString">
            <summary>
            Gets the object field of the value as PHP writable string.
            Does not perform a conversion, expects the value is of type (writable UTF16 or single-byte) string.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpValue.Object">
            <summary>
            Gets underlaying reference object.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpValue.Array">
            <summary>
            Gets underlaying array object.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpValue.Alias">
            <summary>
            Gets underlaying alias object.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpValue.TypeCode">
            <summary>
            Gets the underlaying value type.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.ToBoolean">
            <summary>
            Explicit conversion to <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.ToLong">
            <summary>
            Explicit conversion to <see cref="T:System.Int64"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.ToDouble">
            <summary>
            Explicit conversion to <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.AsString(Pchp.Core.Context)">
            <summary>
            Implicit conversion to string,
            preserves <c>null</c>,
            throws if conversion is not possible.</summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.ToInt">
            <summary>
            Conversion to <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.AsObject">
            <summary>
            Gets underlaying class instance or <c>null</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.ToObject">
            <summary>
            Explicit cast to object.
            Non-object values are wrapped to <see cref="T:stdClass"/>.
            </summary>
            <remarks>Alias to <see cref="M:Pchp.Core.PhpValue.ToClass"/></remarks>
        </member>
        <member name="M:Pchp.Core.PhpValue.ToArray">
            <summary>
            Converts value to <see cref="T:Pchp.Core.PhpArray"/>.
            
            Value is converted according to PHP semantic:
            - array is returned as it is.
            - null is converted to an empty array.
            - scalars are converted to a new array containing a single item.
            - object is converted to a new array containing the object's properties.
            
            This method cannot return a <c>null</c> reference.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.AsPhpAlias">
            <summary>
            Wraps the value into <see cref="T:Pchp.Core.PhpAlias"/>,
            if value already contains the aliased value, it is returned as it is.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.op_Division(Pchp.Core.PhpValue,Pchp.Core.PhpValue)">
            <summary>
            Division of <paramref name="left"/> and <paramref name="right"/> according to PHP semantics.
            </summary>
            <param name="left">Left operand.</param>
            <param name="right">Right operand.</param>
            <returns>Quotient of <paramref name="left"/> and <paramref name="right"/>.</returns>
        </member>
        <member name="P:Pchp.Core.PhpValue.Item(Pchp.Core.IntStringKey)">
            <summary>
            Accesses the value as an array and gets item at given index.
            Gets <c>void</c> value in case the key is not found.
            Raises PHP exception in case the value cannot be accessed as an array.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.GetForeachEnumerator(System.Boolean,System.RuntimeTypeHandle)">
            <summary>
            Gets enumerator object used within foreach statement.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.Compare(Pchp.Core.PhpValue)">
            <summary>
            Compares two value operands.
            </summary>
            <param name="right">The right operand.</param>
            <returns>Comparison result.
            Zero for equality,
            negative value for <c>this</c> &lt; <paramref name="right"/>,
            position value for <c>this</c> &gt; <paramref name="right"/>.</returns>
        </member>
        <member name="M:Pchp.Core.PhpValue.StrictEquals(Pchp.Core.PhpValue)">
            <summary>
            Performs strict comparison.
            </summary>
            <param name="right">The right operand.</param>
            <returns>The value determining operands are strictly equal.</returns>
        </member>
        <member name="M:Pchp.Core.PhpValue.AsCallable(System.RuntimeTypeHandle,System.Object)">
            <summary>
            Gets callable wrapper for the object dynamic invocation.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.EnsureObject(Pchp.Core.PhpValue@)">
            <summary>
            Ensures the value is a class object.
            In case it isn't, creates stdClass according to PHP semantics.
            In case current value is empty, replaces current value with newly created stdClass.
            </summary>
            <returns>Non-null object.</returns>
        </member>
        <member name="M:Pchp.Core.PhpValue.EnsureArray(Pchp.Core.PhpValue@)">
            <summary>
            Ensures the value is a PHP array.
            In case it isn't, creates PhpArray according to PHP semantics.
            In case current value is empty, replaces current value with newly created array.
            </summary>
            <returns>PHP array instance. Canot be <c>null</c>.</returns>
            <remarks>Used for L-Values accessed as arrays (<code>$lvalue[] = rvalue</code>).</remarks>
        </member>
        <member name="M:Pchp.Core.PhpValue.EnsureAlias(Pchp.Core.PhpValue@)">
            <summary>
            Ensures the value as an alias.
            In case it isn't, the value is aliased.
            </summary>
            <returns>Non-null alias of the value.</returns>
        </member>
        <member name="M:Pchp.Core.PhpValue.GetValue">
            <summary>
            Dereferences in case of an alias.
            </summary>
            <returns>Not aliased value.</returns>
        </member>
        <member name="M:Pchp.Core.PhpValue.GetArrayItem(Pchp.Core.PhpValue,System.Boolean)">
            <summary>
            Accesses the value as an array and gets item at given index.
            Gets <c>NULL</c> value in case the key is not found.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.DeepCopy">
            <summary>
            Creates a deep copy of PHP value.
            In case of scalars, the shallow copy is returned.
            In case of classes, the same reference is returned.
            In case of array or string, its copy is returned.
            In case of aliased value, the same alias is returned.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.Output(Pchp.Core.Context)">
            <summary>
            Outputs current value to <see cref="T:Pchp.Core.Context"/>.
            Handles byte (8bit) strings and allows for chunked text to be streamed without costly concatenation.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.ToClr">
            <summary>
            Gets underlaying value or object as <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.ToClr(System.Type)">
            <summary>
            Implicitly converts this value to <paramref name="type"/>.
            </summary>
            <param name="type">Target type.</param>
            <returns>Converted value.</returns>
            <exception cref="T:System.InvalidCastException">The value cannot be converted to specified <paramref name="type"/>.</exception>
        </member>
        <member name="M:Pchp.Core.PhpValue.Accept(Pchp.Core.PhpVariableVisitor)">
            <summary>
            Calls corresponding <c>Accept</c> method on visitor.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.ToString">
            <summary>
            Gets value converted to string using default configuration options.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.GetEnumerator">
            <summary>
            Implements <c>foreach</c> over <see cref="T:Pchp.Core.PhpValue"/>.
            Gets the enumerator object allowing to iterate through PHP values, arrays and iterators.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.IsBooleanImpl(System.Boolean@)">
            <summary>
            Checks the value is of type <c>bool</c> or <c>&amp;bool</c> and gets its value.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.IsStringImpl(System.String@)">
            <summary>
            Checks the value is of type <c>string</c> or <c>&amp;string</c> and gets its value.
            Single-byte strings are decoded using <c>UTF-8</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.IsMutableStringImpl(Pchp.Core.PhpString@)">
            <summary>
            Checks the value is <c>string</c> or <c>&amp;string</c> constructed as <see cref="T:Pchp.Core.PhpString"/> (a mutable string).
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.IsStringImpl">
            <summary>
            Checks the value is of type <c>string</c> (both unicode and single-byte) or an alias to a string.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpValue.Void">
            <summary>
            Singleton of PhpValue representing <c>void</c>.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpValue.Null">
            <summary>
            Singleton of PhpValue representing <c>null</c>.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpValue.False">
            <summary>
            PhpValue representing <c>false</c>.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpValue.True">
            <summary>
            PhpValue representing <c>true</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.Create``1(System.Nullable{``0})">
            <summary>
            Creates <see cref="T:Pchp.Core.PhpValue"/> from <see cref="T:System.Nullable`1"/>.
            In case <see cref="P:System.Nullable`1.HasValue"/> is <c>false</c>, a <see cref="F:Pchp.Core.PhpValue.Null"/> is returned.
            </summary>
            <typeparam name="T">Nullable type argument.</typeparam>
            <param name="value">Original value to convert from.</param>
            <returns><see cref="T:Pchp.Core.PhpValue"/> containing value of given nullable, or <c>NULL</c> if nullable has no value.</returns>
        </member>
        <member name="M:Pchp.Core.PhpValue.CreateAlias">
            <summary>
            Creates value containing new <see cref="T:Pchp.Core.PhpAlias"/> pointing to <c>NULL</c> value.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.CreateAlias(Pchp.Core.PhpValue)">
            <summary>
            Creates value containing new <see cref="T:Pchp.Core.PhpAlias"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.Create(System.UInt64)">
            <summary>
            Create <see cref="T:Pchp.Core.PhpValue"/> representation of <see cref="T:System.UInt64"/>.
            The value will be converted either to <see cref="T:System.Int64"/> or juggles to <see cref="T:System.Double"/> if it's larger than long.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.FromClr(System.Object)">
            <summary>
            Implicitly converts a CLR type to PHP type.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.FromClr(Pchp.Core.PhpValue)">
            <summary>
            Implicitly converts a CLR type to PHP type.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValue.FromClr(System.Object[])">
            <summary>
            Converts an array of CLR values to PHP values.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpValue.DisplayString">
            <summary>
            Debug textual representation of the value.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpValue.DebugTypeName">
            <summary>
            Gets php type name of the value.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpValueConverter">
            <summary>
            Conversion routines for <see cref="T:Pchp.Core.PhpValue"/>.
            </summary>
        </member>
        <member name="P:Pchp.Core.PhpValueConverter.DictionaryConverter`1.s_Create_PhpValue_to_Dictionary_K_V">
            <summary>
            <see cref="T:System.Reflection.MethodInfo"/> of <see cref="M:Pchp.Core.PhpValueConverter.DictionaryConverter`1.Create_PhpValue_to_Dictionary_K_V``2"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpValueConverter.Cast``1(Pchp.Core.PhpValue)">
            <summary>
            Casts <see cref="T:Pchp.Core.PhpValue"/> to a given type <typeparamref name="T"/>.
            Throws an exception if cast is not possible.
            </summary>
            <typeparam name="T">Conversion target.</typeparam>
            <param name="value">Value to be converted.</param>
            <returns>Value as <typeparamref name="T"/>.</returns>
        </member>
        <member name="T:Pchp.Core.Reflection.AutoloadClassMap">
            <summary>
            Map of all public PHP types defined in loaded assemblies.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.AutoloadClassMap.TypeNode.Combine(System.Byte,Pchp.Core.Reflection.PhpTypeInfo)">
            <summary>
            Gets node representing two or more types.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.AutoloadClassMap.AddTypeNoLock(System.Type,Pchp.Core.Reflection.PhpTypeInfo@)">
            <summary>
            Stores the type in the map.
            </summary>
        </member>
        <member name="T:Pchp.Core.Reflection.ExtensionsTable">
            <summary>
            Table of loaded extensions.
            </summary>
        </member>
        <member name="T:Pchp.Core.Reflection.ExtensionsTable.ExtensionInfo">
            <summary>
            Reflected information about a single extensions.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.ExtensionsTable.ExtensionInfo.Name">
            <summary>
            The extension name.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.ExtensionsTable.ExtensionInfo.Routines">
            <summary>
            Collection of routines within the extensions. Cannot be <c>null</c>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.ExtensionsTable.ExtensionInfo.Types">
            <summary>
            Collection of classes and interface within the extension. Cannot be <c>null</c>.
            </summary>
        </member>
        <member name="F:Pchp.Core.Reflection.ExtensionsTable._extensions">
            <summary>
            Table of known extensions and their declarations.
            Filled lazily. Cannot be <c>null</c>.
            </summary>
        </member>
        <member name="F:Pchp.Core.Reflection.ExtensionsTable._processed">
            <summary>
            Already processed assemblies, or types.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.ExtensionsTable.GetExtensions">
            <summary>
            Gets known extension names.
            </summary>
            <returns>Collection of extensions. Cannot be <c>null</c>.</returns>
        </member>
        <member name="M:Pchp.Core.Reflection.ExtensionsTable.GetRoutinesByExtension(System.String)">
            <summary>
            Gets routines associated with specified extension.
            </summary>
            <param name="extension">Extension name.</param>
            <returns>Enumeration of routines associated with given extension.</returns>
        </member>
        <member name="M:Pchp.Core.Reflection.ExtensionsTable.GetTypesByExtension(System.String)">
            <summary>
            Gets enumeration of types associated with specified extension.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.ExtensionsTable.ContainsExtension(System.String)">
            <summary>
            Gets value indicating that given extension was loaded.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.ExtensionsTable.AddRoutine(Pchp.Core.PhpExtensionAttribute,Pchp.Core.Reflection.ClrRoutineInfo)">
            <summary>
            Adds routine within its associated extension(s).
            </summary>
            <param name="attr">Corresponding <see cref="T:Pchp.Core.PhpExtensionAttribute"/> of the containing class. Can be <c>null</c>.</param>
            <param name="routine">Library routine to be included into the table.</param>
        </member>
        <member name="M:Pchp.Core.Reflection.ExtensionsTable.VisitFunctionsContainer(System.Type,Pchp.Core.PhpExtensionAttribute@)">
            <summary>
            Reflects <see cref="T:Pchp.Core.PhpExtensionAttribute"/> of given type once.
            </summary>
            <returns>Value indicating the type was visited for the first time.</returns>
        </member>
        <member name="M:Pchp.Core.Reflection.ExtensionsTable.VisitAssembly(System.Reflection.Assembly)">
            <summary>
            Adds extensions specified within the assembly attribute into the table.
            </summary>
            <param name="ass">The assembly to be added.</param>
            <returns>Value indicating the assembly was visited for the first time.</returns>
        </member>
        <member name="T:Pchp.Core.Reflection.PhpPropertyInfo">
            <summary>
            Provides runtime information about a PHP property or a PHP class constant.
            </summary>
        </member>
        <member name="T:Pchp.Core.Reflection.PhpPropertyInfo.ClrFieldProperty">
            <summary>
            Instance or app-static property declared directly as a .NET field.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpPropertyInfo.ClrFieldProperty.CompileAccess(Pchp.CodeAnalysis.Semantics.AccessMask)">
            <summary>
            Creates Func&lt;Context, object, T&gt; depending on the access.
            </summary>
        </member>
        <member name="T:Pchp.Core.Reflection.PhpPropertyInfo.ContainedClrField">
            <summary>
            Instance field contained in <c>__statics</c> container representing context-static PHP property.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpPropertyInfo.ContainingType">
            <summary>
            Containing type information.
            Cannot be <c>null</c>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpPropertyInfo.PropertyName">
            <summary>
            Gets the PHP property name.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpPropertyInfo.PropertyType">
            <summary>
            Gets the CLR type of the property.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpPropertyInfo.IsReadOnly">
            <summary>
            Gets value indicating the property cannot change value.
            In such case, there is no property setter or the field is constant or readonly.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpPropertyInfo.GetValue(Pchp.Core.Context,System.Object)">
            <summary>
            Gets the runtime value of the property.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpPropertyInfo.EnsureAlias(Pchp.Core.Context,System.Object)">
            <summary>
            Ensures the property value to be <see cref="T:Pchp.Core.PhpAlias"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">In case the type of the property doesn't allow.</exception>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpPropertyInfo.EnsureObject(Pchp.Core.Context,System.Object)">
            <summary>
            Ensures the property value to be instance of <see cref="T:System.Object"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">In case the type of the property doesn't allow.</exception>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpPropertyInfo.EnsureArray(Pchp.Core.Context,System.Object)">
            <summary>
            Ensures the property value to be an <c>array</c>.
            </summary>
            <exception cref="T:System.NotSupportedException">In case the type of the property doesn't allow.</exception>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpPropertyInfo.SetValue(Pchp.Core.Context,System.Object,Pchp.Core.PhpValue)">
            <summary>
            Sets new value.
            Throws an exception in case of <see cref="P:Pchp.Core.Reflection.PhpPropertyInfo.IsReadOnly"/>.
            </summary>
            <exception cref="T:System.Exception">Type mismatch.</exception>
            <exception cref="T:System.NotSupportedException">Property is read-only.</exception>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpPropertyInfo.Attributes">
            <summary>
            Gets accessibility attributes.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpPropertyInfo.Member">
            <summary>Gets underlaying CLR member.</summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpPropertyInfo.IsRuntimeProperty">
            <summary>
            Gets value indicating whether the property is added in runtime, i.e. as an entry in the runtime fields array.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpPropertyInfo.IsStatic">
            <summary>
            Gets value indicating the property is static hence it does not require an instance object.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpPropertyInfo.IsPublic">
            <summary>
            Gets value indicating the property is public.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpPropertyInfo.IsPrivate">
            <summary>
            Gets value indicating the property is public.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpPropertyInfo.IsProtected">
            <summary>
            Gets value indicating the property is protected (not public nor private).
            This might indicate CLR's <c>internal</c>, <c>internal protected</c> or <c>protected</c>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpPropertyInfo.IsConstant">
            <summary>
            Gets value indicating the descriptor corresponds to a class constant.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpPropertyInfo.IsVisible(System.RuntimeTypeHandle)">
            <summary>
            Gets value indicating the property is visible in given class context.
            </summary>
            <param name="caller">Class context. By default the method check if the property is publically visible.</param>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpPropertyInfo.IsVisible(System.Type)">
            <summary>
            Gets value indicating the property is visible in given class context.
            </summary>
            <param name="caller">Class context. By default the method check if the property is publically visible.</param>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpPropertyInfo.Bind(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Gets <see cref="T:System.Linq.Expressions.Expression"/> representing the property (field or property).
            </summary>
            <param name="ctx">Runtime context.</param>
            <param name="target">Target instance. Can be <c>null</c> for static properties and constants.</param>
        </member>
        <member name="T:Pchp.Core.Reflection.RoutineInfo">
            <summary>
            Runtime information about a function.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.RoutineInfo.Index">
            <summary>
            Index to the routine slot.
            <c>0</c> is an uninitialized index.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.RoutineInfo.IsUserFunction">
            <summary>
            Gets value indicating the routine was declared in a users code.
            Otherwise the function is a library function.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.RoutineInfo.Name">
            <summary>
            Gets the routine name, cannot be <c>null</c> or empty.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.RoutineInfo.PhpCallable">
            <summary>
            Gets routine callable delegate.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.RoutineInfo.Invoke(Pchp.Core.Context,System.Object,Pchp.Core.PhpValue[])">
            <summary>
            Invokes the routine.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.RoutineInfo.Methods">
            <summary>
            Gets methods representing the routine.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.RoutineInfo.DeclaringType">
            <summary>
            Gets the method declaring type.
            Might get <c>null</c> if the routine represents a global function or a delegate.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.RoutineInfo.Target">
            <summary>Target instance when binding the MethodInfo call.</summary>
        </member>
        <member name="M:Pchp.Core.Reflection.RoutineInfo.CreateUserRoutine(System.String,System.RuntimeMethodHandle,System.RuntimeMethodHandle[])">
            <summary>
            Used by compiler generated code.
            Creates instance of <see cref="T:Pchp.Core.Reflection.RoutineInfo"/> representing a user PHP function.
            </summary>
            <param name="name">Function name.</param>
            <param name="handle">CLR method handle.</param>
            <param name="overloads">Additional method handles of the method overloads.</param>
            <returns>Instance of routine info with uninitialized slot index and unbound delegate.</returns>
        </member>
        <member name="M:Pchp.Core.Reflection.RoutineInfo.CreateUserRoutine(System.String,System.Reflection.MethodInfo[])">
            <summary>
            Creates instance of <see cref="T:Pchp.Core.Reflection.RoutineInfo"/> representing a CLR methods (handling overloads).
            </summary>
            <param name="name">Function name.</param>
            <param name="handles">CLR methods.</param>
            <returns>Instance of routine info with uninitialized slot index and unbound delegate.</returns>
        </member>
        <member name="M:Pchp.Core.Reflection.RoutineInfo.CreateUserRoutine(System.String,System.Delegate)">
            <summary>
            Creates user routine from a CLR delegate.
            </summary>
            <param name="name">PHP routine name.</param>
            <param name="delegate">.NET delegate.</param>
            <returns>Instance of routine info with uninitialized slot index and unbound delegate.</returns>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpRoutineInfo.Handle">
            <summary>
            CLR method handle.
            </summary>
        </member>
        <member name="T:Pchp.Core.Reflection.PhpAnonymousRoutineInfo">
            <summary>Represents anonymous function with special <see cref="T:Closure"/> parameter.</summary>
        </member>
        <member name="F:Pchp.Core.Reflection.DelegateRoutineInfo.s_bound">
            <summary>
            Cache of already bound methods,
            avoids unnecessary allocations and dynamic code emit.
            </summary>
        </member>
        <member name="T:Pchp.Core.Reflection.PhpMethodInfo">
            <summary>
            PHP routine representing class methods.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpMethodInfo.Create(System.Int32,System.String,System.Reflection.MethodInfo[],Pchp.Core.Reflection.PhpTypeInfo)">
            <summary>
            Creates instance of <see cref="T:Pchp.Core.Reflection.PhpMethodInfo"/>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpMethodInfo.Methods">
            <summary>
            Array of CLR methods. Cannot be <c>null</c> or empty.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpMethodInfo.LateStaticType">
            <summary>Optional. Bound static type.</summary>
        </member>
        <member name="T:Pchp.Core.Reflection.PhpStackTrace">
            <summary>
            Represents a stack trace in context of PHP application.
            </summary>
            <remarks>PHP stack trace differs from CLR stack trace in several ways:
            - global code shown as <c>{main}</c>
            - there are CLR frames that we don't want to expose in PHP (mostly annotated with [DebuggerNonUserCode])
            - frame location specifies the called function location</remarks>
        </member>
        <member name="T:Pchp.Core.Reflection.PhpStackTrace.FrameLine">
            <summary>
            Helper class representing a single PHP stack frame information.
            </summary>
        </member>
        <member name="F:Pchp.Core.Reflection.PhpStackTrace.FrameLine._locationFrame">
            <summary>
            the frame with location.
            </summary>
        </member>
        <member name="F:Pchp.Core.Reflection.PhpStackTrace.FrameLine._calledFrame">
            <summary>
            The frame with called routine.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpStackTrace.UserStackFrame">
            <summary>
            Gets first non-core-assembly stack frame or <c>null</c>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpStackTrace.StackTrace">
            <summary>
            Stack trace text formatted as PHP stack trace.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpStackFrame.FileName">
            <summary>
            Gets file path where the frame points to.
            Can be <c>null</c>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpStackFrame.IsCoreAssembly">
            <summary>
            Determines if the stack frame corresponds to the core assembly.
            </summary>
        </member>
        <member name="T:Pchp.Core.Reflection.PhpTypeInfo">
            <summary>
            Runtime information about a type.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpTypeInfo.Index">
            <summary>
            Index to the type slot.<br/>
            <c>0</c> is an uninitialized index.
            <c>&lt;0</c> is an application context type; always declared.<br/>
            <c>&gt;0</c> is a user type; must be declared in current <see cref="T:Pchp.Core.Context"/>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpTypeInfo.IsUserType">
            <summary>
            Gets value indicating the type was declared in a users code.
            Otherwise the type was declared into application context.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpTypeInfo.IsInterface">
            <summary>
            Gets value indicating the type is an interface.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpTypeInfo.IsTrait">
            <summary>
            Gets value indicating the type is a trait.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpTypeInfo.IsPhpType">
            <summary>
            Gets value indicating the type was declared within a PHP code.
            </summary>
            <remarks>This is determined based on a presence of <see cref="T:Pchp.Core.PhpTypeAttribute"/>.</remarks>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpTypeInfo.ExtensionName">
            <summary>
            Gets the associated PHP extension name.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpTypeInfo.Name">
            <summary>
            Gets the full type name in PHP syntax, cannot be <c>null</c> or empty.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpTypeInfo.RelativePath">
            <summary>
            Gets the relative path to the file where the type is declared.
            Gets <c>null</c> if the type is from core, eval etc.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpTypeInfo.Type">
            <summary>
            CLR type declaration.
            </summary>
        </member>
        <member name="F:Pchp.Core.Reflection.PhpTypeInfo._attr">
            <summary>
            Resolved <see cref="T:Pchp.Core.PhpTypeAttribute"/>.
            Can be <c>null</c>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpTypeInfo.TypeHandle">
            <summary>
            Gets <see cref="T:System.RuntimeTypeHandle"/> of corresponding type information.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpTypeInfo.Creator">
            <summary>
            Dynamically constructed delegate for object creation.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpTypeInfo.isInstantiable">
            <summary>
            Gets value indicating the type can be publicly instantiated.
            If <c>true</c>, the class is not-abstract, not-trait, not-interface and has a public constructor.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpTypeInfo.ResolveCreator(System.Type)">
            <summary>
            Dynamically constructed delegate for object creation in specific type context.
            </summary>
            <param name="caller">Current type context in order to resolve only visible constructors.</param>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpTypeInfo.BaseType">
            <summary>
            Gets base type or <c>null</c> in case type does not extend another class.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpTypeInfo.BuildCreator">
            <summary>
            Build creation delegate using public .ctors.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpTypeInfo.BuildCreatorPrivate">
            <summary>
            Build creation delegate using public, protected and private .ctors.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpTypeInfo.BuildCreatorProtected">
            <summary>
            Build creation delegate using public and protected .ctors.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpTypeInfo.ResolvePhpTypeName(System.Type,Pchp.Core.PhpTypeAttribute)">
            <summary>
            Resolves PHP-like type name.
            </summary>
        </member>
        <member name="F:Pchp.Core.Reflection.PhpTypeInfo.s_metadataSeparators">
            <summary>
            Array of characters used to separate class name from its metadata indexes (order, generics, etc).
            These characters and suffixed text has to be ignored.
            </summary>
        </member>
        <member name="T:Pchp.Core.Reflection.PhpTypeInfo.Flags">
            <summary>
            Various type info flags.
            </summary>
        </member>
        <member name="F:Pchp.Core.Reflection.PhpTypeInfo.Flags.InstantiationNotAllowed">
            <summary>
            Marks the type that the class cannot be instantiated publically.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpTypeInfo.RuntimeMethods">
            <summary>
            Gets collection of PHP methods in this type and base types.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpTypeInfo.DeclaredFields">
            <summary>
            Gets collection of PHP fields, static fields and constants declared in this type.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.PhpTypeInfo.RuntimeFieldsHolder">
            <summary>
            Gets field holding the array of runtime fields.
            Can be <c>null</c>.
            </summary>
        </member>
        <member name="F:Pchp.Core.Reflection.PhpTypeInfoExtension.s_getPhpTypeInfo_T">
            <summary>
            <see cref="T:System.Reflection.MethodInfo"/> of <see cref="M:Pchp.Core.Reflection.PhpTypeInfoExtension.GetPhpTypeInfo``1"/>.
            </summary>
        </member>
        <member name="F:Pchp.Core.Reflection.PhpTypeInfoExtension.s_cache">
            <summary>
            Cache of resolved <see cref="T:Pchp.Core.Reflection.PhpTypeInfo"/> corresponding to <see cref="T:System.RuntimeTypeHandle"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpTypeInfoExtension.GetPhpTypeInfo``1">
            <summary>
            Gets <see cref="T:Pchp.Core.Reflection.PhpTypeInfo"/> of given <typeparamref name="TType"/>.
            </summary>
            <typeparam name="TType">Type to get info about.</typeparam>
            <returns>Runtime type information.</returns>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpTypeInfoExtension.GetPhpTypeInfo(System.Type)">
            <summary>
            Gets <see cref="T:Pchp.Core.Reflection.PhpTypeInfo"/> of given <paramref name="type"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpTypeInfoExtension.GetPhpTypeInfo(System.RuntimeTypeHandle)">
            <summary>
            Gets <see cref="T:Pchp.Core.Reflection.PhpTypeInfo"/> of given <paramref name="handle"/>.
            </summary>
            <param name="handle">Type handle of the CLR type.</param>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpTypeInfoExtension.GetPhpTypeInfo(System.Reflection.TypeInfo)">
            <summary>
            Gets <see cref="T:Pchp.Core.Reflection.PhpTypeInfo"/> of given <paramref name="typeInfo"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpTypeInfoExtension.GetPhpTypeInfo(System.Object)">
            <summary>
            Gets <see cref="T:Pchp.Core.Reflection.PhpTypeInfo"/> of given object.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpTypeInfoExtension.EnumerateTypeHierarchy(Pchp.Core.Reflection.PhpTypeInfo)">
            <summary>
            Enumerates self, all base types and all inherited interfaces.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpTypeInfoExtension.EnumerateClassHierarchy(Pchp.Core.Reflection.PhpTypeInfo)">
            <summary>
            Enumerates self and all base types.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpTypeInfoExtension.GetImplementedTraits(Pchp.Core.Reflection.PhpTypeInfo)">
            <summary>
            Gets a collection of the trait types implemented by the current type.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpTypeInfoExtension.IsDeclared(Pchp.Core.Reflection.PhpTypeInfo,Pchp.Core.Context)">
            <summary>
            Gets value indicating the type has been declared in the context.
            </summary>
        </member>
        <member name="F:Pchp.Core.Reflection.PhpTypeInfoExtension.s_emptyObjectActivators">
            <summary>
            Cached functions that creates an empty instance (instance of a class without calling its PHP constructor).
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpTypeInfoExtension.CreateUninitializedInstance(Pchp.Core.Reflection.PhpTypeInfo,Pchp.Core.Context)">
            <summary>
            Creates instance of the class without invoking its constructor.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.PhpTypeInfoExtension.TryBuildCreateEmptyObjectFunc(Pchp.Core.Reflection.PhpTypeInfo,System.Func{Pchp.Core.Context,System.Object}@)">
            <summary>
            Builds delegate that creates uninitialized class instance for purposes of deserialization and reflection.
            </summary>
        </member>
        <member name="T:Pchp.Core.Reflection.TObjectCreator">
            <summary>
            Delegate for dynamic object creation.
            </summary>
            <param name="ctx">Current runtime context. Cannot be <c>null</c>.</param>
            <param name="arguments">List of arguments to be passed to called constructor.</param>
            <returns>Object instance.</returns>
        </member>
        <member name="T:Pchp.Core.Reflection.TypeInfoHolder`1">
            <summary>
            Helper class holding runtime type information about <typeparamref name="TType"/>.
            </summary>
            <typeparam name="TType">CLR type.</typeparam>
        </member>
        <member name="F:Pchp.Core.Reflection.TypeInfoHolder`1.TypeInfo">
            <summary>
            Associated runtime type information.
            </summary>
        </member>
        <member name="F:Pchp.Core.Reflection.ReflectionUtils.PhpConstructorName">
            <summary>
            Well-known name of the PHP constructor.
            </summary>
        </member>
        <member name="F:Pchp.Core.Reflection.ReflectionUtils.PhpDestructorName">
            <summary>
            Well-known name of the PHP destructor.
            </summary>
        </member>
        <member name="F:Pchp.Core.Reflection.ReflectionUtils.GlobalCodeMethodName">
            <summary>
            Special name of public static method representing PHP's global code.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.ReflectionUtils.PeachpieAssemblyTokenKey">
            <summary>
            Well known assembly token key of Peachpie assemblies.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.ReflectionUtils.GetPublicKeyTokenString(System.Reflection.Assembly)">
            <summary>
            Gets assembly public key token as string.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.ReflectionUtils.IsAllowedPhpName(System.String)">
            <summary>
            Determines whether given name is valid PHP field, function or class name.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.ReflectionUtils.IsPhpHidden(System.Reflection.MemberInfo)">
            <summary>
            Gets value indicating the member has been marked as hidden in PHP context.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.ReflectionUtils.IsRuntimeFields(System.Reflection.FieldInfo)">
            <summary>
            Checks the fields represents special PHP runtime fields.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.ReflectionUtils.IsContextField(System.Reflection.FieldInfo)">
            <summary>
            Checks if the field represents special PHP context holder.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.ReflectionUtils.TryBindLazyConstantField(System.Reflection.FieldInfo,System.Func{Pchp.Core.Context,Pchp.Core.PhpValue}@)">
            <summary>
            Resolves lazy constant field in form of:<br/>
            public static readonly Func&lt;Context, TResult&gt; FIELD;
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.ReflectionUtils.IsPhpFieldsOnlyCtor(System.Reflection.ConstructorInfo)">
            <summary>
            Determines whether given constructor is <c>PhpFieldsOnlyCtorAttribute</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.ReflectionUtils.IsPhpClassType(System.Type)">
            <summary>
            Gets value indicating the given type is a type of a class instance excluding builtin PHP value types.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.ReflectionUtils.IsTraitType(System.Type)">
            <summary>
            Determines if the given type represents a compiled PHP's trait.
            </summary>
            <param name="t">Type, cannot be <c>null</c>.</param>
        </member>
        <member name="M:Pchp.Core.Reflection.ReflectionUtils.IsInstantiable(System.Type)">
            <summary>
            Determines the type is not interface nor abstract.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.ReflectionUtils.IsUserRoutine(System.Reflection.MethodBase)">
            <summary>
            Determines whether the method is declared in user's PHP code (within a user type or within a source script).
            </summary>
        </member>
        <member name="F:Pchp.Core.Reflection.ReflectionUtils.s_hiddenTypes">
            <summary>
            Types that we do not expose in reflection.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.ReflectionUtils.IsHiddenType(System.Type)">
            <summary>
            Determines if given type is not visible to PHP runtime.
            We implement these types implicitly in compile time, so we should ignore them at proper places.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.ReflectionUtils.IsImplicitParameter(System.Reflection.ParameterInfo)">
            <summary>
            Determines the parameter is considered as implicitly passed by runtime.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.ReflectionUtils.ImplicitParametersCount(System.Reflection.ParameterInfo[])">
            <summary>
            Gets count of implicit parameters.
            Such parameters are passed by runtime automatically and not read from given arguments.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.ReflectionUtils.GetScriptAttribute(System.Type)">
            <summary>
            Gets <see cref="T:Pchp.Core.ScriptAttribute"/> of given script type (the type that represents a compiled script file).
            </summary>
            <returns>The attribute or <c>null</c>.</returns>
        </member>
        <member name="M:Pchp.Core.Reflection.ReflectionUtils.GetParametersType(System.Reflection.MethodBase)">
            <summary>
            Gets types of parameters of given method
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.ReflectionUtils.IsPublic(Pchp.Core.Reflection.RoutineInfo)">
            <summary>
            Determines if the routine is entirely public.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.ReflectionUtils.IsNullable(System.Reflection.ParameterInfo)">
            <summary>
            Determines whether given parameter allows <c>NULL</c> as the argument value.
            </summary>
        </member>
        <member name="T:Pchp.Core.Reflection.RoutinesTable">
            <summary>
            Runtime table of application PHP functions.
            </summary>
        </member>
        <member name="F:Pchp.Core.Reflection.RoutinesTable.s_nameToIndex">
            <summary>
            Map of function names to their slot index.
            Negative number is an application-wide function,
            Positive number is context-wide function.
            Zero is not used.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.RoutinesTable.DeclareAppRoutine(System.String,System.Reflection.MethodInfo)">
            <summary>
            Adds referenced symbol into the map.
            In case of redeclaration, the handle is added to the list.
            </summary>
            <exception cref="T:Pchp.Core.PhpFatalErrorException">The routine is already defined as a user routine.</exception>
        </member>
        <member name="M:Pchp.Core.Reflection.RoutinesTable.RoutinesCount.GetNewIndex">
            <summary>
            Returns new indexes indexed from <c>1</c>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Pchp.Core.Reflection.RoutinesTable.RoutinesCount.Count">
            <summary>
            Gets count of returned indexes.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.RoutinesTable.RedeclarationError(System.String)">
            <exception cref="T:Pchp.Core.PhpFatalErrorException">The routine is already defined as a user routine.</exception>
        </member>
        <member name="M:Pchp.Core.Reflection.RoutinesTable.EnumerateRoutines">
            <summary>
            Gets enumeration of all routines declared within the context.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.RoutinesTable.DeclarePhpRoutine(Pchp.Core.Reflection.RoutineInfo)">
            <summary>
            Declare a user PHP function.
            </summary>
            <param name="routine">Routine to be declared. Its index is initialized lazily.</param>
        </member>
        <member name="M:Pchp.Core.Reflection.RoutinesTable.GetDeclaredRoutine(System.String)">
            <summary>
            Gets routine information in current context.
            </summary>
            <param name="name">Name of the routine.</param>
            <returns><see cref="T:Pchp.Core.Reflection.RoutineInfo"/> instance or <c>null</c> if routine with given name is not declared.</returns>
        </member>
        <member name="M:Pchp.Core.Reflection.RoutinesTable.IsDeclared(Pchp.Core.Reflection.RoutineInfo)">
            <summary>
            Checks whether given routine is declared in current context.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.Serialization.EnumerateSerializableProperties(System.Object,Pchp.Core.Reflection.PhpTypeInfo)">
            <summary>
            Returns names and properties of all instance properties or only PHP fields (including runtime fields).
            </summary>
            <param name="instance">The instance being serialized.</param>
            <param name="tinfo"><paramref name="instance"/> type info.</param>
            <returns>Name-value pairs. Names are properly formatted for serialization.</returns>
        </member>
        <member name="M:Pchp.Core.Reflection.Serialization.MemberwiseClone(Pchp.Core.Reflection.PhpTypeInfo,System.Object,System.Object)">
            <summary>
            Copies fields from <paramref name="source"/> object to <paramref name="target"/> object.
            Types of both objects must be the same.
            </summary>
            <param name="tinfo">Type of both objects.</param>
            <param name="source">Source instance.</param>
            <param name="target">Target instance.</param>
        </member>
        <member name="M:Pchp.Core.Reflection.Serialization.ParseSerializedPropertyName(System.String,System.String@,System.Reflection.FieldAttributes@)">
            <summary>
            Parses property name used for serialization. 
            </summary>
            <param name="name">The name found in serialization stream or returned by <B>__sleep</B>.</param>
            <param name="typeName">Will receive the name of the declaring type or <B>null</B> if no
            type information is embedded in the property <paramref name="name"/>.</param>
            <param name="visibility">Will receive the assumed visibility of the property.</param>
            <returns>The bare (unmangled) property name.</returns>
            <remarks>
            Names of protected properties might be prepended with \0*\0, names of private properties might be
            prepended with \0declaring_class_name\0
            (see <A href="http://bugs.php.net/bug.php?id=26737">http://bugs.php.net/bug.php?id=26737</A>)
            </remarks>
        </member>
        <member name="M:Pchp.Core.Reflection.Serialization.FormatSerializedPropertyName(Pchp.Core.Reflection.PhpPropertyInfo)">
            <summary>
            Formats a property name for serialization according to its visibility and declaing type.
            </summary>
            <param name="property">The property info.</param>
            <returns>The property name formatted according to the <paramref name="property"/> as used by PHP serialization.
            </returns>
        </member>
        <member name="T:Pchp.Core.Reflection.TypeFields">
            <summary>
            Collection of class fields declared in type.
            </summary>
        </member>
        <member name="F:Pchp.Core.Reflection.TypeFields._properties">
            <summary>
            Declared properties.
            Cannot be <c>null</c>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.TypeFields.InstanceProperties">
            <summary>
            Gets enumeration of class instance fields excluding eventual <c>__runtime_fields</c>.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.TypeFields.Properties">
            <summary>
            Enumerates all the properties in the class excluding runtime fields.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.TypeFields.TryGetPhpProperty(System.String)">
            <summary>
            Obtains the PHP property descriptor matching given name.
            The result may be an instance field, static field, CLR property, class constant or <c>null</c>.
            </summary>
            <returns>
            Instance of <see cref="T:Pchp.Core.Reflection.PhpPropertyInfo"/> describing the property/field/constant.
            Can be <c>null</c> if specified property is not declared on current type.
            </returns>
            <remarks>The method return <c>null</c> in case the property is a runtime property. This case has to be handled separately.</remarks>
        </member>
        <member name="M:Pchp.Core.Reflection.TypeMembersUtils.GetRuntimeFields(stdClass)">
            <summary>
            Gets runtime instance fields of <see cref="T:stdClass"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.TypeMembersUtils.GetRuntimeFields(Pchp.Core.Reflection.PhpTypeInfo,System.Object)">
            <summary>
            Gets runtime instance fields of given object.
            </summary>
            <param name="tinfo">Type of <paramref name="instance"/>.</param>
            <param name="instance">Instance of type <paramref name="tinfo"/>.</param>
            <returns>Array representing internal runtime fields or <c>null</c> if no values are available.</returns>
        </member>
        <member name="M:Pchp.Core.Reflection.TypeMembersUtils.EnsureRuntimeFields(Pchp.Core.Reflection.PhpTypeInfo,System.Object)">
            <summary>
            Gets array of runtime fields in given type.
            If the array is not instantiated yet, new instance is created and runtime fields initialized.
            If the type does not support runtime fields, <c>null</c> is returned.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.TypeMembersUtils.EnumerateVisibleInstanceFields(System.Object,System.RuntimeTypeHandle)">
            <summary>
            Enumerates visible instance fields of given object.
            </summary>
            <param name="instance">Object which fields will be enumerated.</param>
            <param name="caller">Current class context for field visibility check.</param>
            <returns>Enumeration of fields and their values, including runtime fields.</returns>
        </member>
        <member name="M:Pchp.Core.Reflection.TypeMembersUtils.EnumerateInstanceFieldsForPrint(System.Object)">
            <summary>
            Enumerates instance fields of given object, transforms field names according to <c>print_r</c> notation.
            </summary>
            <param name="instance">Object which fields will be enumerated.</param>
            <returns>Enumeration of fields and their values, including runtime fields.</returns>
        </member>
        <member name="M:Pchp.Core.Reflection.TypeMembersUtils.EnumerateInstanceFieldsForDump(System.Object)">
            <summary>
            Enumerates instance fields of given object, transforms field names according to <c>var_dump</c> notation.
            </summary>
            <param name="instance">Object which fields will be enumerated.</param>
            <returns>Enumeration of fields and their values, including runtime fields.</returns>
        </member>
        <member name="M:Pchp.Core.Reflection.TypeMembersUtils.EnumerateInstanceFieldsForExport(System.Object)">
            <summary>
            Enumerates instance fields of given object, transforms field names according to <c>var_export</c> notation.
            </summary>
            <param name="instance">Object which fields will be enumerated.</param>
            <returns>Enumeration of fields and their values, including runtime fields.</returns>
        </member>
        <member name="M:Pchp.Core.Reflection.TypeMembersUtils.EnumerateInstanceFields``1(System.Object,System.Func{Pchp.Core.Reflection.PhpPropertyInfo,``0},System.Func{Pchp.Core.IntStringKey,``0},System.Func{Pchp.Core.Reflection.PhpPropertyInfo,System.Boolean},System.Boolean)">
            <summary>
            Enumerates instance fields of given object.
            </summary>
            <param name="instance">Object which fields will be enumerated.</param>
            <param name="keyFormatter">Function converting property to a <typeparamref name="TKey"/>.</param>
            <param name="keyFormatter2">Function converting </param>
            <param name="predicate">Optional. Predicate filtering fields.</param>
            <param name="ignoreRuntimeFields">Whether to ignore listing runtime fields.</param>
            <returns>Enumeration of fields and their values, including runtime fields.</returns>
            <typeparam name="TKey">Enumerated pairs key. Usually <see cref="T:Pchp.Core.IntStringKey"/>.</typeparam>
        </member>
        <member name="M:Pchp.Core.Reflection.TypeMembersUtils.InstanceFieldsToPhpArray(System.Object,Pchp.Core.PhpArray)">
            <summary>
            Casts object to given PHP array.
            </summary>
            <param name="instance">Object instance, cannot be <c>null</c>.</param>
            <param name="arr">Array to be filled with object instance properties.</param>
        </member>
        <member name="M:Pchp.Core.Reflection.TypeMembersUtils.FieldAsArrayKey(Pchp.Core.Reflection.PhpPropertyInfo)">
            <summary>
            Gets field name to be used as array key when casting object to array.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.TypeMembersUtils.FieldsCount(System.Object)">
            <summary>
            Gets the number of instance properties contained in this <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.TypeMembersUtils.IsVisible(System.Reflection.MethodBase,System.Type)">
            <summary>
            Selects only candidates visible from the current class context.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.TypeMembersUtils.s_isMethodStatic">
            <summary>
            Predicate checking the given <see cref="T:System.Reflection.MethodInfo"/> is static.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.TypeMembersUtils.IsInheritance(System.Type,System.Type)">
            <summary>
            Checks if <paramref name="t1"/> is a sub class of <paramref name="t2"/> or the other way.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.TypeMembersUtils.GetVisibleMethod(Pchp.Core.Reflection.PhpTypeInfo,System.String,System.RuntimeTypeHandle)">
            <summary>
            Resolves a method by its name, visible in given <paramref name="context"/>.
            </summary>
            <param name="tinfo">Type info.</param>
            <param name="name">Method name.</param>
            <param name="context">Current class context.</param>
            <returns>Resolved method or <c>null</c>.</returns>
        </member>
        <member name="M:Pchp.Core.Reflection.TypeMembersUtils.GetDeclaredProperty(Pchp.Core.Reflection.PhpTypeInfo,System.String)">
            <summary>
            Gets descriptor of property defined in given class or its base classes. Does not resolve runtime fields.
            </summary>
            <returns>Instance of property descriptor or <c>null</c> if such property is not declared.</returns>
        </member>
        <member name="M:Pchp.Core.Reflection.TypeMembersUtils.GetDeclaredConstant(Pchp.Core.Reflection.PhpTypeInfo,System.String)">
            <summary>
            Gets descriptor of property defined in given class or its base classes. Does not resolve runtime fields.
            </summary>
            <returns>Instance of property descriptor or <c>null</c> if such property is not declared.</returns>
        </member>
        <member name="M:Pchp.Core.Reflection.TypeMembersUtils.GetRuntimeProperty(Pchp.Core.Reflection.PhpTypeInfo,Pchp.Core.IntStringKey,System.Object)">
            <summary>
            Gets descriptor representing a runtime field.
            Can be <c>null</c> if type does not support runtime fields.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.TypeMembersUtils.GetRuntimeProperty(Pchp.Core.Reflection.PhpTypeInfo,System.String,System.Object)">
            <summary>
            Gets descriptor representing a runtime field.
            Can be <c>null</c> if type does not support runtime fields.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.TypeMembersUtils.GetDeclaredProperties(Pchp.Core.Reflection.PhpTypeInfo)">
            <summary>
            Gets enumeration of declared properties excluding constants.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.TypeMembersUtils.GetDeclaredConstants(Pchp.Core.Reflection.PhpTypeInfo)">
            <summary>
            Gets enumeration of declared class constants.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.TypeMembersUtils.GetRuntimeProperties(Pchp.Core.Reflection.PhpTypeInfo,System.Object)">
            <summary>
            Gets enumeration of runtime fields.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.TypeMembersUtils.GetStaticLocals(Pchp.Core.Reflection.RoutineInfo,Pchp.Core.Context)">
            <summary>
            Gets routine static local variables and its value in given <see cref="T:Pchp.Core.Context"/>.
            </summary>
            <param name="routine">The routine.</param>
            <param name="ctx">Runtime context, variables value will be read with respect to this context.</param>
        </member>
        <member name="T:Pchp.Core.Reflection.TypeMethods">
            <summary>
            Collection of PHP type methods and magic methods.
            Hides special methods and hidden methods.
            Hides private methods from base classes.
            </summary>
        </member>
        <member name="T:Pchp.Core.Reflection.TypeMethods.MagicMethods">
            <summary>
            Enumeration of magic methods.
            Enum name corresponds to the method name.
            Names all lowercased.
            </summary>
        </member>
        <member name="F:Pchp.Core.Reflection.TypeMethods._magicMethods">
            <summary>
            Declared magic methods. Optional.
            </summary>
        </member>
        <member name="F:Pchp.Core.Reflection.TypeMethods._methods">
            <summary>
            Declared methods. Optional.
            </summary>
        </member>
        <member name="P:Pchp.Core.Reflection.TypeMethods.Item(System.String)">
            <summary>
            Gets routine by its name.
            Returns <c>null</c> in case method does not exist.
            </summary>
            <param name="name">Method name.</param>
            <returns>Routine or <c>null</c> reference.</returns>
        </member>
        <member name="P:Pchp.Core.Reflection.TypeMethods.Item(Pchp.Core.Reflection.TypeMethods.MagicMethods)">
            <summary>
            Gets magic method if declared.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.TypeMethods.EnumerateVisible(System.Type)">
            <summary>
            Gets enumeration of methods visible in given caller context.
            </summary>
        </member>
        <member name="F:Pchp.Core.Reflection.TypesTable.s_nameToIndex">
            <summary>
            Map of type names to their slot index.
            Negative number is an app type,
            Positive number is a context function.
            Zero is not used.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.TypesTable.DeclareAppType(Pchp.Core.Reflection.PhpTypeInfo)">
            <summary>
            Adds referenced symbol into the map.
            In case of redeclaration, an exception is thrown.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.TypesTable.TypesCount.GetNewIndex">
            <summary>
            Returns new indexes indexed from <c>1</c>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Pchp.Core.Reflection.TypesTable.TypesCount.Count">
            <summary>
            Gets count of returned indexes.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.TypesTable.RedeclarationError(Pchp.Core.Reflection.PhpTypeInfo)">
            <summary>
            Invoked when a type is redeclared.
            </summary>
            <param name="type">The type being declared, but another with the same name is already declared in context.</param>
        </member>
        <member name="M:Pchp.Core.Reflection.TypesTable.GetDeclaredType(System.String)">
            <summary>
            Gets runtime type information in current context.
            </summary>
            <param name="name">Name of the type. Case insensitive.</param>
            <returns><see cref="T:Pchp.Core.Reflection.PhpTypeInfo"/> instance or <c>null</c> if type with given name is not declared.</returns>
        </member>
        <member name="M:Pchp.Core.Reflection.TypesTable.GetDeclaredTypes">
            <summary>
            Gets enumeration of types visible in current context.
            </summary>
        </member>
        <member name="M:Pchp.Core.Reflection.TypesTable.IsDeclared(Pchp.Core.Reflection.PhpTypeInfo)">
            <summary>
            Checks the given user type is declared in the current state.
            </summary>
        </member>
        <member name="T:Pchp.Core.Resources.ErrResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.abstract_bodyful_method">
            <summary>
              Looks up a localized string similar to Abstract method {0}::{1}() cannot contain body.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.abstract_class_instantiated">
            <summary>
              Looks up a localized string similar to Cannot instantiate abstract class &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.abstract_class_or_interface_instantiated">
            <summary>
              Looks up a localized string similar to Instantiation of abstract class or interface &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.abstract_final_method_declared">
            <summary>
              Looks up a localized string similar to Abstract method cannot be declared final.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.abstract_method_called">
            <summary>
              Looks up a localized string similar to Cannot call abstract method {0}::{1}().
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.abstract_method_not_implemented">
            <summary>
              Looks up a localized string similar to Class &apos;{0}&apos; doesn&apos;t implement abstract method {1}::{2}().
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.abstract_private_method_declared">
            <summary>
              Looks up a localized string similar to Abstract method cannot be declared private.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.abstract_property_not_implemented">
            <summary>
              Looks up a localized string similar to Class &apos;{0}&apos; doesn&apos;t implement abstract property {1}::${2}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.act_param_with_ampersand">
            <summary>
              Looks up a localized string similar to &apos;&amp;&apos; modifier ignored in the function call, use &apos;&amp;&apos; modifier in function declaration to pass the argument by reference.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.alias_in_use">
            <summary>
              Looks up a localized string similar to Cannot use {0} as {1} because the name is already in use.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.ambiguous_constant_match">
            <summary>
              Looks up a localized string similar to Ambiguous constant name: &apos;{1}&apos; and &apos;{2}&apos; are both imported as &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.ambiguous_file_mode">
            <summary>
              Looks up a localized string similar to Ambiguous file access mode (binary mode assumed). Specify either &apos;{0}b&apos; or &apos;{0}t&apos; or set configuration option DefaultFileOpenMode..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.ambiguous_function_match">
            <summary>
              Looks up a localized string similar to Ambiguous function name: &apos;{1}&apos; and &apos;{2}&apos; are both imported as &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.ambiguous_name_match">
            <summary>
              Looks up a localized string similar to Ambiguous name: &apos;{1}&apos; and &apos;{2}&apos; are both imported as &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.ambiguous_type_match">
            <summary>
              Looks up a localized string similar to Ambiguous type name: &apos;{1}&apos; and &apos;{2}&apos; are both imported as &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.application_config_file_copied">
            <summary>
              Looks up a localized string similar to Application configuration file copied..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.argless_stub_not_found">
            <summary>
              Looks up a localized string similar to Argless stub for populated method &apos;{0}&apos; not found..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.argsaware_routine_needs_args">
            <summary>
              Looks up a localized string similar to Function &apos;{0}&apos;() is ArgsAware. It requires to be called via ArgLess stub, but was called via ArgFull. It requires arguments to be loaded on PhpStack..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.argument_equals">
            <summary>
              Looks up a localized string similar to Argument {0} cannot be equal to {1}..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.Argument_IllegalEnvVarName">
            <summary>
              Looks up a localized string similar to Environment variable name cannot contain equal character..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.Argument_LongEnvVarValue">
            <summary>
              Looks up a localized string similar to Environment variable name or value is too long..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.argument_not_callable">
            <summary>
              Looks up a localized string similar to Argument {0} must be callable, {1} given.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.argument_not_passed_byref">
            <summary>
              Looks up a localized string similar to Argument #{0} should be passed by reference.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.argument_not_passed_byref_to">
            <summary>
              Looks up a localized string similar to Argument #{0} should be passed to {1}() by reference.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.argument_not_passed_to_function">
            <summary>
              Looks up a localized string similar to Argument #{0} not passed to the function/method.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.argument_null">
            <summary>
              Looks up a localized string similar to Argument &apos;{0}&apos; should not be NULL.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.Argument_StringFirstCharIsZero">
            <summary>
              Looks up a localized string similar to The first char in the string is the null character..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.Argument_StringZeroLength">
            <summary>
              Looks up a localized string similar to String cannot be of zero length..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.argument_value_not_supported">
            <summary>
              Looks up a localized string similar to Value &apos;{0}&apos; of argument &apos;{1}&apos; is not supported.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.Arguments">
            <summary>
              Looks up a localized string similar to Arguments.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.array_in_cls_const">
            <summary>
              Looks up a localized string similar to Arrays are not allowed in class constants.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.array_to_string_conversion">
            <summary>
              Looks up a localized string similar to Array to string conversion.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.array_used_as_object">
            <summary>
              Looks up a localized string similar to An array used as an object.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.assembly_script_inclusion_failed">
            <summary>
              Looks up a localized string similar to Script &apos;{0}&apos; inclusion failed. Script not found in the application&apos;s script libraries.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.assertion_failed">
            <summary>
              Looks up a localized string similar to Assertion &apos;{0}&apos; failed.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.assign_new_as_ref_is_deprecated">
            <summary>
              Looks up a localized string similar to Assigning the return value of new by reference is deprecated.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.bad_system_fcn_params_count">
            <summary>
              Looks up a localized string similar to Library function &apos;{0}&apos; called with wrong number of parameters.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.begin_compile">
            <summary>
              Looks up a localized string similar to Compiling {0} ....
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.buffering_level_decreased_under_zero">
            <summary>
              Looks up a localized string similar to Buffering level couldn&apos;t be decresed below zero.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.buffers_must_not_be_empty">
            <summary>
              Looks up a localized string similar to Buffers must not be empty..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.callstat_must_be_public_static">
            <summary>
              Looks up a localized string similar to The magic method __callStatic() must have public visibility and be static.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.cannot_change_library_section">
            <summary>
              Looks up a localized string similar to Could not change the section of loaded library. The library &apos;{0}&apos; has already been bound to configuration section &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.cannot_change_target_instance">
            <summary>
              Looks up a localized string similar to Changing the target instance is unsupported if the callback is already bound..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.cannot_create_closure_from_callable">
            <summary>
              Looks up a localized string similar to Failed to create closure from callable.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.cannot_create_config_file">
            <summary>
              Looks up a localized string similar to Cannot create configuration file &apos;{0}&apos;. Error: {1}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.cannot_derive_from_type_parameter">
            <summary>
              Looks up a localized string similar to Cannot derive from &apos;{0}&apos; because it is a generic type parameter.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.cannot_modify_option">
            <summary>
              Looks up a localized string similar to Configuration option cannot be modified here since it has been prevented to so by &apos;allowOverride&apos; attribute in configuration file &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.cannot_reassign_this">
            <summary>
              Looks up a localized string similar to Cannot re-assign $this.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.cannot_unset_string_offsets">
            <summary>
              Looks up a localized string similar to Cannot unset string offsets.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.cannot_use_reserved_name">
            <summary>
              Looks up a localized string similar to Name &apos;{0}&apos; is reserved and cannot be used here.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.cant_clone_sys_table">
            <summary>
              Looks up a localized string similar to Can&apos;t clone system classes table..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.cant_create_sys_class_types">
            <summary>
              Looks up a localized string similar to Can&apos;t create types for system classes..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.cant_generate_sys_class_builders">
            <summary>
              Looks up a localized string similar to Can&apos;t generate builders for system classes..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.casting_to_stream_unsupported">
            <summary>
              Looks up a localized string similar to This stream does not support casting as System.IO.Stream..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.check_varuse_fault">
            <summary>
              Looks up a localized string similar to Can&apos;t use function/method return value in write context.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.circular_base_class_dependency">
            <summary>
              Looks up a localized string similar to Circular class inheritance dependency involving &apos;{0}&apos; and &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.circular_base_interface_dependency">
            <summary>
              Looks up a localized string similar to Circular interface inheritance dependency involving &apos;{0}&apos; and &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.circular_constant_definition_class">
            <summary>
              Looks up a localized string similar to Circular constant definition involving class constant &apos;{0}::{1}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.circular_constant_definition_global">
            <summary>
              Looks up a localized string similar to Circular constant definition involving global constant &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.class_behavior_may_be_unexpected">
            <summary>
              Looks up a localized string similar to Use of the class &apos;{0}&apos; in PHP code is not recommended as the resulting effect will probably be different than expected.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.class_could_not_be_loaded">
            <summary>
              Looks up a localized string similar to Class {0} could not be loaded.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.class_has_no_parent">
            <summary>
              Looks up a localized string similar to The class &apos;{0}&apos; has no parent.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.class_has_no_unserializer">
            <summary>
              Looks up a localized string similar to Class {0} has no unserializer.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.class_has_no_visible_ctor">
            <summary>
              Looks up a localized string similar to Class &apos;{0}&apos; has no visible constructor.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.class_in_use">
            <summary>
              Looks up a localized string similar to Cannot declare class {0} because the name is already in use.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.class_instantiation_failed">
            <summary>
              Looks up a localized string similar to Unable to instantiate class &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.class_not_found">
            <summary>
              Looks up a localized string similar to Class &apos;{0}&apos; not found.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.class_redeclared_in_assembly">
            <summary>
              Looks up a localized string similar to A class or an interface &apos;{0}&apos; is redeclared in the assembly scope.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.class_redeclared_runtime">
            <summary>
              Looks up a localized string similar to Cannot redeclare class/interface {0}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.class_redeclared_runtime_include">
            <summary>
              Looks up a localized string similar to Inclusion redeclares class/interface {0}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.clone_called_on_non_object">
            <summary>
              Looks up a localized string similar to __clone method called on non-object.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.clone_cannot_be_static">
            <summary>
              Looks up a localized string similar to Clone method {0}::__clone() cannot be static.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.clone_cannot_take_arguments">
            <summary>
              Looks up a localized string similar to Clone method {0}::__clone() cannot accept any arguments.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.code_generation_error">
            <summary>
              Looks up a localized string similar to Error occured during assembly generation: {0}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.conditionally_redeclared">
            <summary>
              Looks up a localized string similar to Declaration of {0} {1} will issue a run-time error if executed since the {0} will already be declared here.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.conditionally_redeclared_by_inclusion">
            <summary>
              Looks up a localized string similar to Inclusion will issue a run-time error if executed - a redeclaration of {0} {1}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.configuration_error">
            <summary>
              Looks up a localized string similar to Configuration error: {0}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.configuration_file_not_found">
            <summary>
              Looks up a localized string similar to Configuration file &apos;{0}&apos; not found..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.configuration_not_loaded">
            <summary>
              Looks up a localized string similar to Configuration has not been loaded yet..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.configuration_record_read_only">
            <summary>
              Looks up a localized string similar to Configuration record is read only..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.conflicting_constant_aliases">
            <summary>
              Looks up a localized string similar to Constant &apos;{0}&apos; has already been imported.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.conflicting_function_aliases">
            <summary>
              Looks up a localized string similar to Function &apos;{0}&apos; has already been imported.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.conflicting_partial_visibility">
            <summary>
              Looks up a localized string similar to All partial declarations of &apos;{0}&apos; must have the same visibility.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.conflicting_type_aliases">
            <summary>
              Looks up a localized string similar to Type &apos;{0}&apos; has already been imported.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.console_only_option">
            <summary>
              Looks up a localized string similar to The option is valid only in console application configuration..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.constant_not_found">
            <summary>
              Looks up a localized string similar to Couldn&apos;t find constant {0}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.constant_redeclared">
            <summary>
              Looks up a localized string similar to Cannot redeclare constant &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.constant_redefined">
            <summary>
              Looks up a localized string similar to Attempt to redefine constant &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.constant_reimplemented">
            <summary>
              Looks up a localized string similar to {0}.{1}: Constant &apos;{2}&apos; is reimplemented. Previously implemented by {3}.{4}..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.constant_value_neither_scalar_nor_null">
            <summary>
              Looks up a localized string similar to Cannot define value which is neither scalar nor NULL as a constant.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.construct_cannot_be_static">
            <summary>
              Looks up a localized string similar to Constructor {0}::{1}() cannot be static.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.construct_not_supported">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; construct is not supported.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.constructor_cannot_be_static">
            <summary>
              Looks up a localized string similar to Constructor {0}::{1}() cannot be static.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.constructor_less_type_instantiated">
            <summary>
              Looks up a localized string similar to Cannot instantiate class &apos;{0}&apos; because it has no visible constructor.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.context_expected">
            <summary>
              Looks up a localized string similar to Supplied resource is not a valid Stream-Context resource.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.could_not_create_event">
            <summary>
              Looks up a localized string similar to Could not create event..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.could_not_load_extension">
            <summary>
              Looks up a localized string similar to Could not load extension: .
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.cyclic_inclusion">
            <summary>
              Looks up a localized string similar to Cyclic inclusion between files &apos;{0}&apos; and &apos;{1}&apos; detected, inclusion of file &apos;{0}&apos; deferred to runtime.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.declaration_should_be_compatible">
            <summary>
              Looks up a localized string similar to Declaration of {0}::{1}() should be compatible with that of {2}::{3}().
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.default_exception_message">
            <summary>
              Looks up a localized string similar to Unknown exception.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.default_object_created">
            <summary>
              Looks up a localized string similar to Creating default object from empty value.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.define_method_unsupported">
            <summary>
              Looks up a localized string similar to Method is no longer supported. Use TypeBuilder.DefineMethod instead..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.defines_app_wide_config">
            <summary>
              Looks up a localized string similar to it defines application wide configuration.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.defines_machine_wide_config">
            <summary>
              Looks up a localized string similar to it defines machine wide configuration.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.delegate_target_instance_missing">
            <summary>
              Looks up a localized string similar to Object instance must be given for non-static method &apos;{1}::{2}&apos; when creating delegate &apos;{0}&apos;. Use array($instance, &quot;{2}&quot;).
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.delegate_unrecognized_ctor_args">
            <summary>
              Looks up a localized string similar to Unrecognized constructor arguments were given to delegate &apos;{0}&apos;. Use &quot;function&quot;, array($instance, &quot;method&quot;), or array(&quot;class&quot;, &quot;method&quot;).
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.destruct_cannot_be_static">
            <summary>
              Looks up a localized string similar to Destructor {0}::__destruct() cannot be static.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.destruct_cannot_take_arguments">
            <summary>
              Looks up a localized string similar to Destructor {0}::__destruct() cannot take arguments.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.destructor_cannot_be_static">
            <summary>
              Looks up a localized string similar to Destructor {0}::{1}() cannot be static.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.directory_not_exists">
            <summary>
              Looks up a localized string similar to Directory &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.directory_not_found">
            <summary>
              Looks up a localized string similar to Directory &apos;{0}&apos; not found..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.division_by_zero">
            <summary>
              Looks up a localized string similar to Division by zero.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.dll_import_body_ignored">
            <summary>
              Looks up a localized string similar to Body of function decorated with the DllImportAttribute is ignored. System provides this body..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.dll_import_cannot_be_abstract">
            <summary>
              Looks up a localized string similar to Method decorated with DllImportAttribute cannot be abstract..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.dll_import_must_be_static">
            <summary>
              Looks up a localized string similar to Function decorated with DllImportAttribute must be static..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.dotdot_not_allowed_in_path">
            <summary>
              Looks up a localized string similar to No &apos;..&apos; components allowed in path.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.duplicate_attribute_usage">
            <summary>
              Looks up a localized string similar to Duplicate attribute &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.duplicate_generic_parameter">
            <summary>
              Looks up a localized string similar to Duplicate generic type parameter.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.duplicate_parameter_name">
            <summary>
              Looks up a localized string similar to Duplicate parameter name &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.dynamic_wrapper_loading_failed">
            <summary>
              Looks up a localized string similar to Dynamic wrapper &apos;{0}&apos; could not be loaded..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.empty_file_mode">
            <summary>
              Looks up a localized string similar to Supplied file access mode is empty.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.empty_index_in_read_context">
            <summary>
              Looks up a localized string similar to Cannot use [] for reading.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.empty_path">
            <summary>
              Looks up a localized string similar to Path must not be empty..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.empty_used_as_array">
            <summary>
              Looks up a localized string similar to An empty variable used as an array.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.empty_used_as_object">
            <summary>
              Looks up a localized string similar to An empty variable used as an object.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.end_compile">
            <summary>
              Looks up a localized string similar to {0} compiled successfully.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.entry_point_redefined">
            <summary>
              Looks up a localized string similar to Entry point has already been defined.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.entrypoint_not_specified">
            <summary>
              Looks up a localized string similar to Entry point script not specified..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.enumerator_not_referencing_this_table">
            <summary>
              Looks up a localized string similar to Specified enumerator doesn&apos;t reference this table..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.error_creating_file">
            <summary>
              Looks up a localized string similar to Unexpected error creating file &apos;{0}&apos;: {1}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.error_message_html">
             <summary>
               Looks up a localized string similar to &lt;br/&gt;
            &lt;b&gt;{0}&lt;/b&gt;: {1}{2}.&lt;br/&gt;
            .
             </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.error_message_html_debug">
             <summary>
               Looks up a localized string similar to &lt;br/&gt;
            &lt;b&gt;{0}&lt;/b&gt;: {1}{2} in &lt;b&gt;{3}&lt;/b&gt; on line &lt;b&gt;{4}&lt;/b&gt;, column &lt;b&gt;{5}&lt;/b&gt;.&lt;br/&gt;
            .
             </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.error_message_html_eval">
            <summary>
              Looks up a localized string similar to {0} inside {1}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.error_message_html_eval_debug">
            <summary>
              Looks up a localized string similar to inside {0} (on line &lt;b&gt;{1}&lt;/b&gt;, column &lt;b&gt;{2}&lt;/b&gt;).
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.error_message_plain">
             <summary>
               Looks up a localized string similar to 
            {0}: {1}{2}.
            .
             </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.error_message_plain_debug">
             <summary>
               Looks up a localized string similar to 
            {0}: {1}{2} in {3} on line {4}, column {5}.
            .
             </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.error_message_plain_eval">
            <summary>
              Looks up a localized string similar to {0} inside {1}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.error_message_plain_eval_debug">
            <summary>
              Looks up a localized string similar to inside {0} (on line {1}, column {2}).
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.error_place">
            <summary>
              Looks up a localized string similar to  in {0} on line {1}, column {2}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.event_has_no_add_accessor">
            <summary>
              Looks up a localized string similar to Event &apos;{0}::{1}&apos; has no Add accessor method.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.event_has_no_remove_accessor">
            <summary>
              Looks up a localized string similar to Event &apos;{0}::{1}&apos; has no Remove accessor method.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.event_written">
            <summary>
              Looks up a localized string similar to Cannot write to event {0}::${1}, use {0}::${1}-&gt;Add() and {0}::${1}-&gt;Remove() to add or remove an event handler.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.exception_cannot_be_thrown">
            <summary>
              Looks up a localized string similar to Exception cannot be thrown here: {0}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.execution_timed_out">
            <summary>
              Looks up a localized string similar to Maximum execution time of {0} seconds exceeded.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.expecting_parent_ctor_invocation">
            <summary>
              Looks up a localized string similar to Expecting parent constructor call.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.export_attribute_in_non_pure">
            <summary>
              Looks up a localized string similar to Attribute &apos;Export&apos; can be used only in pure unit.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.extension_already_loaded">
            <summary>
              Looks up a localized string similar to Extension &apos;{0}&apos; (file &apos;{1}&apos;) has alredy been loaded..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.extension_loading_error">
            <summary>
              Looks up a localized string similar to Error while loading library (extension) classes: .
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.extensions_not_installed">
            <summary>
              Looks up a localized string similar to Native PHP extensions are not installed or properly configured.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.extensions_not_installed_in_invoke">
            <summary>
              Looks up a localized string similar to Call to undefined external function &apos;{0}&apos;, extension &apos;{1}&apos; - native PHP extensions are not installed or properly configured.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.extmanager_path_not_configured">
            <summary>
              Looks up a localized string similar to At least one extension is to be run in isolated mode but ExtManager path is not configured..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.field_already_exists">
            <summary>
              Looks up a localized string similar to A field with the same name already exists in this object..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.field_implementor_not_found">
            <summary>
              Looks up a localized string similar to Reflected field &apos;{0}&apos; has unknown implementor. PhpPublicFieldAttribute incorrect usage..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.field_in_interface">
            <summary>
              Looks up a localized string similar to Interfaces cannot have properties.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.file_not_exists">
            <summary>
              Looks up a localized string similar to File &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.final_class_extended">
            <summary>
              Looks up a localized string similar to Cannot inherit from final class &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.first_param_not_dictionary">
            <summary>
              Looks up a localized string similar to {0}.{1}: First parameter should be of type IDictionary due to NeedsVariables option..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.for_internal_usage_only">
            <summary>
              Looks up a localized string similar to {0} is intended for internal usage only..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.formal_param_redeclaration">
            <summary>
              Looks up a localized string similar to The function already has parametr {0}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.function_is_deprecated">
            <summary>
              Looks up a localized string similar to Function {0}() is deprecated.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.function_needs_variables">
            <summary>
              Looks up a localized string similar to Function needs a table of defined variables.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.function_not_supported">
            <summary>
              Looks up a localized string similar to Function is not supported.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.function_redeclared">
            <summary>
              Looks up a localized string similar to Cannot redeclare function &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.function_reimplemented">
            <summary>
              Looks up a localized string similar to {0}.{1}: Function &apos;{2}&apos; is reimplemented. Previously implemented by {3}.{4}..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.generating_assembly">
            <summary>
              Looks up a localized string similar to Generating assembly ....
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.generic_call_to_library_function">
            <summary>
              Looks up a localized string similar to Cannot use generic arguments when calling a library function.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.generic_in_use">
            <summary>
              Looks up a localized string similar to Cannot declare generic type parameter {0} because the name is already in use.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.generic_parameter_collides_with_declarer">
            <summary>
              Looks up a localized string similar to Generic type parameter &apos;{0}&apos; has the same name as the containing class/interface.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.generic_parameter_is_reserved_identifier">
            <summary>
              Looks up a localized string similar to Generic type parameter must be an identifier different from &apos;self&apos; and &apos;parent&apos; in this context.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.generic_parameter_must_be_type">
            <summary>
              Looks up a localized string similar to Generic parameter must refer to a type in this context.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.generic_parameters_disallowed_on_ctor">
            <summary>
              Looks up a localized string similar to Generic parameters cannot be defined on constructor.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.getiterator_must_return_traversable">
            <summary>
              Looks up a localized string similar to Objects returned by {0}::getIterator() must be traversable or implement interface Iterator.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.global_code_in_pure_unit">
            <summary>
              Looks up a localized string similar to Global code is not allowed in the pure unit..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.illegal_key_return_type">
            <summary>
              Looks up a localized string similar to Illegal type returned from {0}::key().
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.illegal_offset_type">
            <summary>
              Looks up a localized string similar to Illegal offset type.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.illegal_string_offset">
            <summary>
              Looks up a localized string similar to Illegal string offset &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.import_deprecated">
            <summary>
              Looks up a localized string similar to Import statement is deprecated and will be removed in future versions. Use PHP aliasing instead..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.import_only_in_pure">
            <summary>
              Looks up a localized string similar to Import statement is only available in pure mode.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.incarnation_type_mismatch">
            <summary>
              Looks up a localized string similar to Must be of the same type as this instance..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.inclusion_deferred_to_runtime">
            <summary>
              Looks up a localized string similar to Inclusion of file &apos;{0}&apos; deferred to runtime because: {1}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.inclusion_in_pure_unit">
            <summary>
              Looks up a localized string similar to Inclusions are not allowed in the pure unit..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.inclusion_replacement_failed">
            <summary>
              Looks up a localized string similar to No inclusion pattern does match expression &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.incomparable_arrays_compared">
            <summary>
              Looks up a localized string similar to Arrays which are incomparable have been compared..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.incomparable_objects_compared">
            <summary>
              Looks up a localized string similar to Incomparable objects have been compared.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.incomparable_objects_compared_exception">
            <summary>
              Looks up a localized string similar to Incomparable objects ({0} and {1}) have been compared.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.incompatible_partial_declarations">
            <summary>
              Looks up a localized string similar to Partial declarations of &apos;{0}&apos; must be all classes or all interfaces.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.incompatible_type_parameter_constraints_method">
            <summary>
              Looks up a localized string similar to Class/interface &apos;{0}&apos; is incompatible with the constraints imposed on the generic type argument #{1} (&apos;{2}&apos;) by method &apos;{3}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.incompatible_type_parameter_constraints_type">
            <summary>
              Looks up a localized string similar to Class/interface &apos;{0}&apos; is incompatible with the constraints imposed on the generic type argument #{1} (&apos;{2}&apos;) by type &apos;{3}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.incomplete_class">
            <summary>
              Looks up a localized string similar to The class &apos;{0}&apos; is incomplete - its base class or interface is unknown.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.incomplete_path">
            <summary>
              Looks up a localized string similar to Path &apos;{0}&apos; is incomplete. The path is relative or drive specification is missing..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.inheriting_previously_inherited_constant">
            <summary>
              Looks up a localized string similar to Cannot inherit constant {0}::{1} previously declared in interface &apos;{2}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.instance_disposed">
            <summary>
              Looks up a localized string similar to The instance has already been disposed.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.instantiation_not_allowed">
            <summary>
              Looks up a localized string similar to Instantiation of &apos;{0}&apos; is not allowed.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.integer_key_reached_max_value">
            <summary>
              Looks up a localized string similar to Cannot add item to array - integer key reached maximal possible value (2^31-1).
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.interface_bodyful_method">
            <summary>
              Looks up a localized string similar to Interface method {0}::{1}() cannot contain body.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.interface_instantiated">
            <summary>
              Looks up a localized string similar to Cannot instantiate interface &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.interface_method_non_public">
            <summary>
              Looks up a localized string similar to Access type for interface method {0}::{1}() must be omitted or declared public.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.internal_error">
             <summary>
               Looks up a localized string similar to Internal error! 
            Please, report this bug via {0}.
            Additional information: 
            {1}.
             </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_argument">
            <summary>
              Looks up a localized string similar to Invalid argument &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_argument_count">
            <summary>
              Looks up a localized string similar to Invalid argument count.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_argument_count_for_function">
            <summary>
              Looks up a localized string similar to Invalid argument count in a call to the function &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_argument_count_for_method">
            <summary>
              Looks up a localized string similar to Invalid argument count in a call to the method &apos;{0}::{1}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_argument_type">
            <summary>
              Looks up a localized string similar to Argument &apos;{0}&apos; must be of type &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_argument_value">
            <summary>
              Looks up a localized string similar to Value &apos;{1}&apos; is invalid for argument &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_argument_with_message">
            <summary>
              Looks up a localized string similar to Invalid argument: .
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_array_rank">
            <summary>
              Looks up a localized string similar to Invalid array rank..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_attribute_expression">
            <summary>
              Looks up a localized string similar to An attribute argument must be a constant expression.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_attribute_location">
            <summary>
              Looks up a localized string similar to Attribute &apos;{0}&apos; cannot be used in configuration file located on virtual path &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_attribute_target_selector">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not a valid attribute target selector (specify one of &apos;return&apos;, &apos;assembly&apos;, &apos;module&apos;).
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_attribute_usage">
            <summary>
              Looks up a localized string similar to Invalid use of attribute &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_attribute_value">
            <summary>
              Looks up a localized string similar to The value of attribute &apos;{0}&apos; is invalid..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_base">
            <summary>
              Looks up a localized string similar to Invalid base..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_break_level_count">
            <summary>
              Looks up a localized string similar to Cannot break/continue {0} level(s).
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_call_context_data">
            <summary>
              Looks up a localized string similar to Invalid call context data in slot {0}..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_callback">
            <summary>
              Looks up a localized string similar to Invalid callback.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_class_library_wrapper">
            <summary>
              Looks up a localized string similar to The dynamic wrapper for the library, file &apos;{0}&apos;, is invalid. Delete the wrapper file so that it could be regenerated automatically during the next request..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_class_name">
            <summary>
              Looks up a localized string similar to Class name must be a valid object or a string.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_code_point">
            <summary>
              Looks up a localized string similar to Value &apos;{0}&apos; doesn&apos;t encode a valid Unicode character.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_code_point_name">
            <summary>
              Looks up a localized string similar to Value &apos;{0}&apos; doesn&apos;t encode a valid Unicode character name.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_command_line_argument">
            <summary>
              Looks up a localized string similar to Invalid command line argument &apos;/{0}&apos;: {1}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_command_line_argument_noname">
            <summary>
              Looks up a localized string similar to Invalid command line argument(s): {0}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_constant_field">
            <summary>
              Looks up a localized string similar to {0}.{1}: Field implementing PHP constant should be public literal..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_constant_name">
            <summary>
              Looks up a localized string similar to {0}.{1}: Invalid constant name &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_constant_type">
            <summary>
              Looks up a localized string similar to {0}.{1}: Invalid constant type ({2})..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_dynamic_wrapper_format">
            <summary>
              Looks up a localized string similar to Invalid format of dynamic wrapper &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_escape_sequence_length">
            <summary>
              Looks up a localized string similar to Escape sequence &apos;{0}&apos; requires exactly {1} hexadecimal digits.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_exception_object">
            <summary>
              Looks up a localized string similar to Exceptions must be valid objects derived from the Exception base class.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_file_extension">
            <summary>
              Looks up a localized string similar to Invalid file extension &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_file_mode">
            <summary>
              Looks up a localized string similar to Supplied file access mode ({0}) is not valid.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_filter_name">
            <summary>
              Looks up a localized string similar to Unable to create filter ({0}).
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_foreach_argument">
            <summary>
              Looks up a localized string similar to Invalid argument supplied for foreach statement.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_function_name">
            <summary>
              Looks up a localized string similar to Function name must be a string.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_header">
            <summary>
              Looks up a localized string similar to Header &apos;{0}&apos; is invalid: {1}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_icon_format">
            <summary>
              Looks up a localized string similar to The icon has an invalid format..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_identifier">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not a valid identifier; an identifier cannot be non-empty and cannot contain any of the characters &apos;&lt;&apos;, &apos;&gt;&apos; and &apos;#&apos;..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_implicit_cast">
            <summary>
              Looks up a localized string similar to Cannot convert {0} to {1} implicitly in a call to function {2}().
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_interface_modifier">
            <summary>
              Looks up a localized string similar to Modifier cannot be applied on the interface.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_library_contant_type">
            <summary>
              Looks up a localized string similar to Invalid library contant type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_line_pragma">
            <summary>
              Looks up a localized string similar to Line pragma has an invalid value.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_method_implementation">
            <summary>
              Looks up a localized string similar to Invalid implementation of method &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_method_modifiers">
            <summary>
              Looks up a localized string similar to {0}.{1}: Method implementing PHP function should be public and static..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_method_name">
            <summary>
              Looks up a localized string similar to Method name must be a string.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_node">
            <summary>
              Looks up a localized string similar to Invalid node..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_node_location">
            <summary>
              Looks up a localized string similar to Node cannot be used in configuration file located on virtual path &apos;{0}&apos; because {1}..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_option">
            <summary>
              Looks up a localized string similar to Invalid option &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_parameter_type">
            <summary>
              Looks up a localized string similar to {0}.{1}: Invalid parameter &apos;{2}&apos; type ({3})..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_path">
            <summary>
              Looks up a localized string similar to Path is not valid..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_query_source">
            <summary>
              Looks up a localized string similar to Invalid query source.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_registering_order">
            <summary>
              Looks up a localized string similar to Invalid global variables registering order..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_regular_expression">
            <summary>
              Looks up a localized string similar to Invalid regular expression..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_resource_visibility">
            <summary>
              Looks up a localized string similar to Invalid resource visibility. Must be private or public.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_return_type">
            <summary>
              Looks up a localized string similar to {0}.{1}: Invalid return type ({2})..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_socket_resource">
            <summary>
              Looks up a localized string similar to Supplied resource is not a valid &apos;stream&apos; resource.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_socket_stream_resource">
            <summary>
              Looks up a localized string similar to Supplied resource is not a valid Socket Stream resource.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_source">
            <summary>
              Looks up a localized string similar to Invalid source file or directory: {0}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_stream_resource">
            <summary>
              Looks up a localized string similar to Supplied resource is not a valid Stream resource.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_type_namespace">
            <summary>
              Looks up a localized string similar to {0}: Type implementing PHP function or constant should be in namespace {1} or its subnamespace..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_type_visibility">
            <summary>
              Looks up a localized string similar to {0}: Type implementing PHP function or constant should be public..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.invalid_value">
            <summary>
              Looks up a localized string similar to Invalid value &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.item_removed_from_empty_array">
            <summary>
              Looks up a localized string similar to Cannot remove item from empty array..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.key_alias">
            <summary>
              Looks up a localized string similar to Key element cannot be a reference.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.label_redeclared">
            <summary>
              Looks up a localized string similar to The label &apos;{0}&apos; is already declared.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.last_is_less_than_first">
            <summary>
              Looks up a localized string similar to The last must be greater than or equal to the first..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.lengths_are_different">
            <summary>
              Looks up a localized string similar to The number of items in {0} should be the same as in {1}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.library_assembly_loading_failed">
            <summary>
              Looks up a localized string similar to Library assembly &apos;{0}&apos; could not be loaded..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.library_class_redeclared">
            <summary>
              Looks up a localized string similar to Cannot redeclare library class/interface {0}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.library_class_redeclared_by_inclusion">
            <summary>
              Looks up a localized string similar to Inclusion will issue a run-time error if executed as it redeclares library class/interface {0}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.library_config_handler_failed">
            <summary>
              Looks up a localized string similar to The configuration handler of the library &apos;{0}&apos; has failed..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.library_func_redeclared">
            <summary>
              Looks up a localized string similar to Cannot redeclare library function &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.library_load_failed">
            <summary>
              Looks up a localized string similar to Library &apos;{0}&apos; cannot be loaded; {1}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.library_section_redeclared">
            <summary>
              Looks up a localized string similar to Library configuration section &apos;{0}&apos; has already been bound to the library &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.loaded_libraries">
            <summary>
              Looks up a localized string similar to Loaded libraries.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.magic_method_must_be_public_nonstatic">
            <summary>
              Looks up a localized string similar to The magic method {0}() must have public visibility and cannot be static.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.make_nonstatic_method_static">
            <summary>
              Looks up a localized string similar to Cannot make non-static method {0}::{1}() static in class &apos;{2}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.make_nonstatic_property_static">
            <summary>
              Looks up a localized string similar to Cannot redeclare non-static property {0}::${1} as static {2}::${1} (non-static declared in &apos;{3}&apos;).
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.make_static_method_non_static">
            <summary>
              Looks up a localized string similar to Cannot make static method {0}::{1}() non-static in class &apos;{2}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.make_static_property_nonstatic">
            <summary>
              Looks up a localized string similar to Cannot redeclare static property {0}::${1} as non static {2}::${1} (static declared in &apos;{3}&apos;).
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.mandatory_behind_optional_param">
            <summary>
              Looks up a localized string similar to Mandatory parameter &apos;{0}&apos; declared behind optional parameter.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.method_body_in_interface">
            <summary>
              Looks up a localized string similar to Method declared in interface cannot have body.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.method_called_on_non_object">
            <summary>
              Looks up a localized string similar to Call to a member function {0}() on a non-object.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.method_cannot_take_arguments">
            <summary>
              Looks up a localized string similar to Method {0}::{1}() cannot take arguments.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.method_must_take_exact_args_count">
            <summary>
              Looks up a localized string similar to Method {0}::{1}() must take exactly {2} arguments.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.method_not_compatible">
            <summary>
              Looks up a localized string similar to Declaration of {0}::{1}() must be compatible with that of {2}::{1}().
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.method_redeclared">
            <summary>
              Looks up a localized string similar to Cannot redeclare method {0}::{1}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.missing_argument">
            <summary>
              Looks up a localized string similar to Missing argument #{0}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.missing_argument_for">
            <summary>
              Looks up a localized string similar to Missing argument #{0} for {1}().
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.missing_attribute">
            <summary>
              Looks up a localized string similar to Missing attribute &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.missing_configuration">
            <summary>
              Looks up a localized string similar to Configuration option {0} has not been defined..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.missing_ctor_in_clr_subclass">
            <summary>
              Looks up a localized string similar to Missing constructor - class &apos;{0}&apos; extends a CLR type without a default constructor and therefore must implement a constructor.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.missing_entry_point">
            <summary>
              Looks up a localized string similar to Missing entry point; no static parameterless method or function &apos;{0}&apos; found.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.missing_imported_entity">
            <summary>
              Looks up a localized string similar to Expecting kind of imported subject (specify one of &apos;namespace&apos;, &apos;class&apos;, &apos;interface&apos;, &apos;function&apos;, &apos;const&apos;).
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.missing_partial_modifier">
            <summary>
              Looks up a localized string similar to Missing &apos;partial&apos; modifier on declaration of class/interface &apos;{0}&apos; - another partial declaration of this type exists.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.missing_type_argument">
            <summary>
              Looks up a localized string similar to Missing generic type argument #{0}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.missing_type_argument_for">
            <summary>
              Looks up a localized string similar to Missing generic type argument #{0} for {1}().
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.missing_type_argument_in_type_use">
            <summary>
              Looks up a localized string similar to Use of type &apos;{0}&apos; requires generic type parameter #{1} (&apos;{2}&apos;) to be specified (no default type applicable).
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.more_switch_cases_with_same_value">
            <summary>
              Looks up a localized string similar to The &apos;case&apos; label with value {0} has already been declared.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.more_then_one_default_in_switch">
            <summary>
              Looks up a localized string similar to The &apos;switch&apos; already contains a &apos;default&apos; section.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.multiple_statements_in_assertion">
            <summary>
              Looks up a localized string similar to Assertion contains multiple statements but only the first one is relevant.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.multiple_visibility_modifiers">
            <summary>
              Looks up a localized string similar to Multiple access type modifiers are not allowed.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.must_be_associated_instance_field">
            <summary>
              Looks up a localized string similar to Must reflect an instance field of PhpReference type declared in the class assignable from the class associated with this table..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.must_be_associated_instance_method">
            <summary>
              Looks up a localized string similar to Must be bound to an instance method of the class associated with this table..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.must_be_associated_method">
            <summary>
              Looks up a localized string similar to Must be bound to a method of the class associated with this table..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.must_be_associated_static_method">
            <summary>
              Looks up a localized string similar to Must be bound to a static method of the class associated with this table..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.must_be_declaringtype_instance">
            <summary>
              Looks up a localized string similar to Must be an instance of DeclaringType..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.must_be_iphpmemberhandle">
            <summary>
              Looks up a localized string similar to Must be an IPhpMemberHandle..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.must_be_phpobject_subclass">
            <summary>
              Looks up a localized string similar to Must be a class derived from PhpObject..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.must_be_static">
            <summary>
              Looks up a localized string similar to Must be static..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.must_target_instance_method">
            <summary>
              Looks up a localized string similar to Must target an instance method..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.namespace_keyword_outside_namespace">
            <summary>
              Looks up a localized string similar to Namespace keyword used outside namespace declaration.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.networkutils_unsupported">
            <summary>
              Looks up a localized string similar to NetworkUtils are not supported on this system..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.next_array_key_unavailable">
            <summary>
              Looks up a localized string similar to Cannot add element to the array as the next element is already occupied.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.no_ctor_defined">
            <summary>
              Looks up a localized string similar to Class &apos;{0}&apos; has no constructor defined - using default constructor and ignoring arguments.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.no_function_context">
            <summary>
              Looks up a localized string similar to Called from the global scope - no function context.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.no_source_files_to_compile">
            <summary>
              Looks up a localized string similar to No source files to compile..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.no_suitable_function_overload">
            <summary>
              Looks up a localized string similar to No accessible overload of function &apos;{1}&apos; is compatible with the specified arguments.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.no_suitable_method_overload">
            <summary>
              Looks up a localized string similar to No accessible overload of method &apos;{0}::{1}&apos; is compatible with the specified arguments.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.non_class_extended">
            <summary>
              Looks up a localized string similar to Cannot extend &apos;{0}&apos; because it is not a class.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.non_generic_type_used_with_type_arguments">
            <summary>
              Looks up a localized string similar to Type &apos;{0}&apos; cannot be used with generic type arguments.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.non_interface_extended">
            <summary>
              Looks up a localized string similar to Cannot extend &apos;{0}&apos; because it is not an interface.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.non_interface_implemented">
            <summary>
              Looks up a localized string similar to Cannot implement &apos;{0}&apos; because it is not an interface.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.nonabstract_bodyless_method">
            <summary>
              Looks up a localized string similar to Non-abstract method {0}::{1}() must contain body.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.nonabstract_method_overridden_with_abstract">
            <summary>
              Looks up a localized string similar to Cannot make non-abstract method {0}::{1}() abstract in class &apos;{2}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.noncallable_callback">
            <summary>
              Looks up a localized string similar to A callback &apos;{0}&apos; specified in the argument &apos;{1}&apos; is not callable.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.nonstatic_method_called_statically">
            <summary>
              Looks up a localized string similar to Non-static method {0}::{1}() should not be called statically.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.nonvar_passed_by_ref">
            <summary>
              Looks up a localized string similar to Only variables can be passed by reference.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.not_all_constants_reflected">
            <summary>
              Looks up a localized string similar to Not all populated constants have been reflected..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.not_all_fields_reflected">
            <summary>
              Looks up a localized string similar to Not all populated fields have been reflected..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.not_all_methods_reflected">
            <summary>
              Looks up a localized string similar to Not all populated methods have been reflected..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.not_custom_attribute_class">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not a custom attribute class.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.not_enought_space_in_target_array">
            <summary>
              Looks up a localized string similar to Not enought space in the target array..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.notsupported_function_called">
            <summary>
              Looks up a localized string similar to Function &apos;{0}&apos; is not supported.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.nowdoc_expected">
            <summary>
              Looks up a localized string similar to Expecting constant value within heredoc..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.object_could_not_be_converted">
            <summary>
              Looks up a localized string similar to Object of class {0} could not be converted to {1}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.object_used_as_array">
            <summary>
              Looks up a localized string similar to Cannot use object of type {0} as array.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.offsetGet_must_return_byref">
            <summary>
              Looks up a localized string similar to Method offsetGet() of objects used with [] operator followed by increment, decrement, assignment to reference, or another [] operators must return by reference.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.only_vars_assigned_by_ref">
            <summary>
              Looks up a localized string similar to Only variables should be assigned by reference.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.open_basedir_effect">
            <summary>
              Looks up a localized string similar to AllowedPathPrefixes restriction in effect. File({0}) is not within the allowed path(s): ({1}).
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.operator_array_access_used_for_reading">
            <summary>
              Looks up a localized string similar to Cannot use [] for reading.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.option">
            <summary>
              Looks up a localized string similar to option.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.out_attribute_on_byval_param">
            <summary>
              Looks up a localized string similar to Attribute &apos;Out&apos; can be used only on parameters passed by reference; add &apos;&amp;&apos; modifier to the parameter &apos;${0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.out_of_range">
            <summary>
              Looks up a localized string similar to Value should be between {0} and {1} including..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.output_buffering_disabled">
            <summary>
              Looks up a localized string similar to Output buffering is disabled.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.overload_has_different_impl_options">
            <summary>
              Looks up a localized string similar to {0}.{1}: This overload of &apos;{2}&apos; has different implementation options than the others..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.overload_has_lesser_param_count">
            <summary>
              Looks up a localized string similar to {0}.{1}: Overload has lesser mandatory parameter count than another one, even though it has optional arguments..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.overloads_not_contiguous">
            <summary>
              Looks up a localized string similar to {0}.{1}: Suboptimal implementation. Overloads of &apos;{2}&apos; are not placed one following the other in metadata table..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.override_final_method">
            <summary>
              Looks up a localized string similar to Cannot override final method {0}::{1}().
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.overriding_interface_constant">
            <summary>
              Looks up a localized string similar to Cannot override constant &apos;{0}&apos; defined in interface &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.overriding_method_restrict_visibility">
            <summary>
              Looks up a localized string similar to {0}::{1}() must be at least as visible as &apos;{2}&apos; specified in class/interface &apos;{3}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.overriding_property_restrict_visibility">
            <summary>
              Looks up a localized string similar to {0}::${1} must be at least as visible as &apos;{2}&apos; specified in class/interface &apos;{3}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.overriding_protected_static_with_init_value">
            <summary>
              Looks up a localized string similar to Cannot change initial value of property static protected {0}::${1} in class &apos;{2}&apos; (previously declared in {3}).
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.overriding_static_field_with_static">
            <summary>
              Looks up a localized string similar to Cannot redeclare property static &apos;{3}&apos; {0}::${1} in class &apos;{2}&apos; (previously declared in &apos;{4}&apos;).
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.page_instantiation_failed">
            <summary>
              Looks up a localized string similar to Unable to instantiate page &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.parameter_must_be_byref">
            <summary>
              Looks up a localized string similar to Parameter &apos;{0}&apos; must be passed by reference.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.parent_accessed_in_parentless_class">
            <summary>
              Looks up a localized string similar to Cannot access parent:: when current class scope has no parent.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.parent_accessed_out_of_class">
            <summary>
              Looks up a localized string similar to Cannot access parent:: when no class scope is active.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.parent_used_out_of_class">
            <summary>
              Looks up a localized string similar to &apos;parent&apos; used out of class declaration.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.partial_conditional_declaration">
            <summary>
              Looks up a localized string similar to The &apos;partial&apos; modifier cannot be used on a conditional declaration.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.partial_declarations_differ_in_base">
            <summary>
              Looks up a localized string similar to All partial declarations of &apos;{0}&apos; must not specify different base classes.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.partial_declarations_differ_in_type_parameter">
            <summary>
              Looks up a localized string similar to All partial declarations of &apos;{0}&apos; must have the same type parameter definitions.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.partial_declarations_differ_in_type_parameter_count">
            <summary>
              Looks up a localized string similar to All partial declarations of &apos;{0}&apos; must have the same number of type parameters.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.partial_impure_declaration">
            <summary>
              Looks up a localized string similar to The &apos;partial&apos; modifier can be used only in pure unit.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.partial_transient_declaration">
            <summary>
              Looks up a localized string similar to The &apos;partial&apos; modifier cannot be used in an evaluated code.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.path_argument_empty">
            <summary>
              Looks up a localized string similar to Path argument can not be empty.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.path_contains_invalid_characters">
            <summary>
              Looks up a localized string similar to Path contains invalid characters.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.performing_compilation">
            <summary>
              Looks up a localized string similar to Performing compilation.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.php_track_vars_not_supported">
            <summary>
              Looks up a localized string similar to &lt;?php_track_vars?&gt; is not supported.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.precompiled_assembly_corrupted">
            <summary>
              Looks up a localized string similar to Precompiled assembly &apos;{0}&apos; is corrupted (unable to resolve type token 0x{1:X8})..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.precompiled_assembly_missing_script_attribute">
            <summary>
              Looks up a localized string similar to Precompiled assembly &apos;{0}&apos; contains &lt;Script&gt; type that misses ScriptAttribute..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.private_class_in_global_ns">
            <summary>
              Looks up a localized string similar to Cannot declare a private class in the global namespace.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.private_constant_accessed">
            <summary>
              Looks up a localized string similar to Cannot access private constant {0}::{1} from context &apos;{2}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.private_ctor_called">
            <summary>
              Looks up a localized string similar to Call to private constructor {0}::{1}() from context &apos;{2}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.private_method_called">
            <summary>
              Looks up a localized string similar to Call to private method {0}::{1}() from context &apos;{2}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.private_property_accessed">
            <summary>
              Looks up a localized string similar to Cannot access private property {0}::${1} from context &apos;{2}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.property_declared_abstract">
            <summary>
              Looks up a localized string similar to Properties cannot be declared abstract.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.property_declared_final">
            <summary>
              Looks up a localized string similar to Properties cannot be declared final.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.property_redeclared">
            <summary>
              Looks up a localized string similar to Cannot redeclare property {0}::${1}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.property_type_mismatch">
            <summary>
              Looks up a localized string similar to Unable to assign the specified value to &apos;{0}::{1}&apos;. There is no suitable conversion..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.protected_constant_accessed">
            <summary>
              Looks up a localized string similar to Cannot access protected constant {0}::{1} from context &apos;{2}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.protected_ctor_called">
            <summary>
              Looks up a localized string similar to Call to protected constructor {0}::{1}() from context &apos;{2}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.protected_method_called">
            <summary>
              Looks up a localized string similar to Call to protected method {0}::{1}() from context &apos;{2}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.protected_property_accessed">
            <summary>
              Looks up a localized string similar to Cannot access protected property {0}::${1} from context &apos;{2}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.reading_configuration">
            <summary>
              Looks up a localized string similar to Reading configuration.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.readonly_property_written">
            <summary>
              Looks up a localized string similar to Cannot set read-only property {0}::${1}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.redeclared_previous_decl">
            <summary>
              Looks up a localized string similar to Cannot redeclare {0} &apos;{1}&apos; previously declared in {2}{3}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.redeclared_previous_decl_include">
            <summary>
              Looks up a localized string similar to Inclusion of &apos;{2}{3}&apos; redeclares {0} &apos;{1}&apos; declared in {2}{3}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.redeclaring_inherited_constant">
            <summary>
              Looks up a localized string similar to Cannot declare inherited constant &apos;{0}&apos; from interface &apos;{1}&apos; in class/interface &apos;{2}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.reference_null">
            <summary>
              Looks up a localized string similar to Argument &apos;{0}&apos; is passed by reference and hence should not be NULL.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.scalar_used_as_array">
            <summary>
              Looks up a localized string similar to A scalar of type &apos;{0}&apos; used as an array.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.scalar_used_as_object">
            <summary>
              Looks up a localized string similar to A scalar of type &apos;{0}&apos; used as an object.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.script_inclusion_failed">
            <summary>
              Looks up a localized string similar to Script &apos;{0}&apos; inclusion failed. Cause: {1} Search paths: include_path is &apos;{2}&apos;, working directory is &apos;{3}&apos; .
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.script_library_assembly_loading_failed">
            <summary>
              Looks up a localized string similar to Script library &quot;{0}&quot; could not be loaded..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.script_not_found">
            <summary>
              Looks up a localized string similar to Script file &apos;{0}&apos; not found..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.self_accessed_out_of_class">
            <summary>
              Looks up a localized string similar to Cannot access self:: when no class scope is active.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.self_used_out_of_class">
            <summary>
              Looks up a localized string similar to &apos;self&apos; used out of class declaration.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.semicolon_ignored">
            <summary>
              Looks up a localized string similar to Semicolon ignored, using it in this context is possible in PHP 5, but depracated in PHP.NET.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.serialize_must_return_null_or_string">
            <summary>
              Looks up a localized string similar to {0}::serialize() must return a string or NULL.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.session_state_unavailable">
            <summary>
              Looks up a localized string similar to Session state not available, session operation cannot be performed.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.skip_compile">
            <summary>
              Looks up a localized string similar to Compilation of {0} skipped, file is already compiled.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.sleep_must_return_array">
            <summary>
              Looks up a localized string similar to __sleep should return an array containing the names of instance-variables to serialize.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.sleep_returned_bad_field">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; returned as member variable from __sleep() but does not exist.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.source_file_not_found">
            <summary>
              Looks up a localized string similar to Source file &apos;{0}&apos; not found..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.spl_empty_iterator_key_access">
            <summary>
              Looks up a localized string similar to Accessing the key of an EmptyIterator.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.spl_empty_iterator_value_access">
            <summary>
              Looks up a localized string similar to Accessing the value of an EmptyIterator.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.spl_index_invalid">
            <summary>
              Looks up a localized string similar to Index invalid or out of range.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.static_property_as_nonstatic">
            <summary>
              Looks up a localized string similar to Accessing static property {0}::${1} as non static.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.static_property_unset">
            <summary>
              Looks up a localized string similar to Attempt to unset static property {0}::${1}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.static_used_out_of_class">
            <summary>
              Looks up a localized string similar to Cannot access static:: when no class scope is active.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_bad_directory">
            <summary>
              Looks up a localized string similar to Failed to open stream ({0}): The specified directory does not exist.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_bad_filename">
            <summary>
              Looks up a localized string similar to Failed to open stream ({0}): The specified file does not exist.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_bad_wrapper">
            <summary>
              Looks up a localized string similar to Unable to find the wrapper &apos;{0}&apos; - did you forget to enable it when you configured PHP?.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_directory_access_denied">
            <summary>
              Looks up a localized string similar to Unable to make directory ({0}): Permission denied.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_directory_error">
            <summary>
              Looks up a localized string similar to Unable to make directory ({0}): Directory not empty or read-only.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_directory_make_parent">
            <summary>
              Looks up a localized string similar to Unable to make directory ({0}): Use recursive mode to create more than one directory at a time.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_directory_make_root">
            <summary>
              Looks up a localized string similar to Unable to make directory ({0}): Can not create root directory.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_directory_not_exists">
            <summary>
              Looks up a localized string similar to The specified directory does not exist ({0}).
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_error">
            <summary>
              Looks up a localized string similar to Can not access resource ({0}): {1}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_file_access_denied">
            <summary>
              Looks up a localized string similar to Unable to access ({0}): Permission denied.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_file_exists">
            <summary>
              Looks up a localized string similar to The specified file already exists ({0}).
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_file_invalid">
            <summary>
              Looks up a localized string similar to Failed to open stream ({0}): The specified filename is invalid.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_file_io_error">
            <summary>
              Looks up a localized string similar to Failed to open stream ({0}) due to I/O error: {1}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_file_not_exists">
            <summary>
              Looks up a localized string similar to The specified file does not exist ({0}).
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_filename_invalid">
            <summary>
              Looks up a localized string similar to Unable to access ({0}): The filename is invalid.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_open_read_unsupported">
            <summary>
              Looks up a localized string similar to Unable to open {0} for reading.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_open_write_unsupported">
            <summary>
              Looks up a localized string similar to Unable to open {0} for writing.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_path_not_exists">
            <summary>
              Looks up a localized string similar to The specified path does not exist ({0}).
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_read_error">
            <summary>
              Looks up a localized string similar to An error occured when reading from stream: {0}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_read_io_error">
            <summary>
              Looks up a localized string similar to An I/O error occured when reading from stream: {0}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_read_off">
            <summary>
              Looks up a localized string similar to The stream was not opened for reading.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_rename_file_exists">
            <summary>
              Looks up a localized string similar to Can not rename &apos;{0}&apos; to &apos;{1}&apos;: target file exists.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_rmdir_io_error">
            <summary>
              Looks up a localized string similar to Can not remove directory ({0}): directory not empty.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_seek_filtered">
            <summary>
              Looks up a localized string similar to Seeking in a {0} stream! It may lead to unpredictable results..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_socket_error">
            <summary>
              Looks up a localized string similar to Socket error: {0}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_stat_invalid_path">
            <summary>
              Looks up a localized string similar to Failed to stat ({0}) - invalid filename.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_unlink_error">
            <summary>
              Looks up a localized string similar to Can not unlink file ({0}): unexpected error.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_unlink_file_not_found">
            <summary>
              Looks up a localized string similar to Can not unlink file ({0}): The specified filename is invalid.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_unlink_io_error">
            <summary>
              Looks up a localized string similar to Can not unlink file ({0}) due to I/O error: {1}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_url_invalid">
            <summary>
              Looks up a localized string similar to Failed to open stream ({0}): The specified URL is invalid.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_url_method_invalid">
            <summary>
              Looks up a localized string similar to Failed to open stream ({0}): The specified request method is invalid.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_write_error">
            <summary>
              Looks up a localized string similar to An error occured when writing to stream: {0}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_write_failed">
            <summary>
              Looks up a localized string similar to Unable to write to stream (only {0} bytes of {1} written).
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_write_io_error">
            <summary>
              Looks up a localized string similar to An I/O error occured when writing to stream: {0}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.stream_write_off">
            <summary>
              Looks up a localized string similar to The stream was not opened for writing.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.string_item_used_as_reference">
            <summary>
              Looks up a localized string similar to A string item used as a reference.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.string_should_be_single_character">
            <summary>
              Looks up a localized string similar to String should consist of a single character.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.string_used_as_array">
            <summary>
              Looks up a localized string similar to A string used as an array.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.string_used_as_object">
            <summary>
              Looks up a localized string similar to A string used as an object.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.syntax_error">
            <summary>
              Looks up a localized string similar to Syntax error: {0}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.this_in_write_context">
            <summary>
              Looks up a localized string similar to The variable $this used in write context.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.this_out_of_method">
            <summary>
              Looks up a localized string similar to The variable $this used out of method.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.this_used_out_of_object">
            <summary>
              Looks up a localized string similar to Using $this when not in object context.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.too_big_int_conversion">
            <summary>
              Looks up a localized string similar to The integer number {0} is too big, converting to double instead.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.too_few_arguments">
            <summary>
              Looks up a localized string similar to Too few arguments to function {0}(), {1} passed and at least {2} expected.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.too_few_ctor_params">
            <summary>
              Looks up a localized string similar to Missing parameter(s) to the call of the class &apos;{0}&apos; constructor - at least {1} required but only {2} provided.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.too_few_function_params">
            <summary>
              Looks up a localized string similar to Missing parameter(s) to the call of &apos;{0}&apos; - at least {1} required but only {2} provided.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.too_few_method_params">
            <summary>
              Looks up a localized string similar to Missing parameter(s) to the call of &apos;{0}::{1}&apos; - at least {2} required but only {3} provided.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.too_little_data_buffered">
            <summary>
              Looks up a localized string similar to Too little data buffered..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.too_many_local_variables_function">
            <summary>
              Looks up a localized string similar to Function &apos;{0}&apos; declares too many local variables ({1}) which may lead to suboptimal performace.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.too_many_local_variables_method">
            <summary>
              Looks up a localized string similar to Method &apos;{0}::{1}&apos; declares too many local variables ({2}) which may lead to suboptimal performace.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.too_many_type_arguments_in_type_use">
            <summary>
              Looks up a localized string similar to Use of type &apos;{0}&apos; requires at most {1} generic type arguments.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.tostring_must_return_string">
            <summary>
              Looks up a localized string similar to Method {0}::__toString() must return a string value.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.trait_instantiated">
            <summary>
              Looks up a localized string similar to Cannot instantiate trait {0}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.try_without_catch_or_finally">
            <summary>
              Looks up a localized string similar to Cannot use try without catch or finally.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.type_argument_not_passed_to_function">
            <summary>
              Looks up a localized string similar to Generic type argument #{0} not passed to the function/method.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.type_redeclared">
            <summary>
              Looks up a localized string similar to Cannot redeclare class/interface &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.unable_to_find_extension">
            <summary>
              Looks up a localized string similar to Unable to find extension &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.unable_to_launch_extmanager">
            <summary>
              Looks up a localized string similar to Unable to launch ExtManager..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.unable_to_resolve_script_type">
            <summary>
              Looks up a localized string similar to Unable to resolve script type (source path &apos;{0}&apos;, referential type &apos;{1}&apos;).
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.uncaught_exception">
            <summary>
              Looks up a localized string similar to Uncaught {0}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.uncloneable_cloned">
            <summary>
              Looks up a localized string similar to Trying to clone an uncloneable object of class {0}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.undeclared_static_property_accessed">
            <summary>
              Looks up a localized string similar to Access to undeclared static property: {0}::${1}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.undefined_class_constant">
            <summary>
              Looks up a localized string similar to Undefined class constant &apos;{0}::{1}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.undefined_constant">
            <summary>
              Looks up a localized string similar to Use of undefined constant {0} - assumed &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.undefined_external_function_called">
            <summary>
              Looks up a localized string similar to Call to undefined external function &apos;{0}&apos;, extension &apos;{1}&apos; - check configuration.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.undefined_external_module_called">
            <summary>
              Looks up a localized string similar to Call to undefined external function &apos;{0}&apos;, extension &apos;{1}&apos; (extension not found).
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.undefined_function_called">
            <summary>
              Looks up a localized string similar to Call to undefined function {0}().
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.undefined_label">
            <summary>
              Looks up a localized string similar to Use of undefined label &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.undefined_method_called">
            <summary>
              Looks up a localized string similar to Call to undefined method {0}::{1}().
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.undefined_offset">
            <summary>
              Looks up a localized string similar to Undefined offset ({0}).
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.undefined_property_accessed">
            <summary>
              Looks up a localized string similar to Undefined property: {0}::${1}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.undefined_property_when_access_overloaded">
            <summary>
              Looks up a localized string similar to Cannot access undefined property for object with overloaded property access.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.undefined_variable">
            <summary>
              Looks up a localized string similar to Undefined variable: {0}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.unexpected_parent_ctor_invocation">
            <summary>
              Looks up a localized string similar to Unexpected parent constructor call (such call is allowed only in the constructor of the class extending a CLR type).
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.unexpected_token">
            <summary>
              Looks up a localized string similar to unexpected token &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.uninitialized_string_offset">
            <summary>
              Looks up a localized string similar to String offset &apos;{0}&apos; hasn&apos;t been initialized.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.unknown_class_used">
            <summary>
              Looks up a localized string similar to Class &apos;{0}&apos; is unknown at this point at compile-time.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.unknown_class_used_with_alias">
            <summary>
              Looks up a localized string similar to Class &apos;{0}&apos; (imported as &apos;{1}&apos;) is unknown at this point at compile-time.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.unknown_constant_used">
            <summary>
              Looks up a localized string similar to Constant &apos;{0}&apos; is unknown at this point at compile-time.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.unknown_constant_used_with_alias">
            <summary>
              Looks up a localized string similar to Constant &apos;{0}&apos; (imported as &apos;{1}&apos;) is unknown at this point at compile-time.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.unknown_custom_attribute">
            <summary>
              Looks up a localized string similar to Unknown custom attribute; neither of types &apos;{0}&apos; and &apos;{1}&apos; exists.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.unknown_function_used">
            <summary>
              Looks up a localized string similar to Function &apos;{0}&apos; is unknown at this point at compile-time.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.unknown_function_used_with_alias">
            <summary>
              Looks up a localized string similar to Function &apos;{0}&apos; (imported as &apos;{1}&apos;) is unknown at this point at compile-time.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.unknown_method_called">
            <summary>
              Looks up a localized string similar to Class &apos;{0}&apos; does not contain definition of method &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.unknown_session_handler">
            <summary>
              Looks up a localized string similar to Session handler &apos;{0}&apos; is unknown. It hasn&apos;t been registered by any loaded library..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.UnknownError_Num">
            <summary>
              Looks up a localized string similar to Unknown error &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.unoptimized_local_variables_function">
            <summary>
              Looks up a localized string similar to Function {0} requires access to local variables and prevents optimizing them. To improve performance, separate this function call into small function..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.unreachable_code">
            <summary>
              Looks up a localized string similar to Unreachable code detected.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.unserialize_callback_failed">
            <summary>
              Looks up a localized string similar to Function {0}() hasn&apos;t defined the class it was called for.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.unsupported_operand_type">
            <summary>
              Looks up a localized string similar to Unsupported operand type.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.unsupported_operand_types">
            <summary>
              Looks up a localized string similar to Unsupported operand types.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.unterminated_comment">
            <summary>
              Looks up a localized string similar to Unterminated comment starting line {0}.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.unused_label">
            <summary>
              Looks up a localized string similar to The label &apos;{0}&apos; is defined but not used within the current scope.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.url_fopen_disabled">
            <summary>
              Looks up a localized string similar to URL file-access is disabled in the server configuration.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.url_resource_missing">
            <summary>
              Looks up a localized string similar to No URL resource specified.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.web_only_option">
            <summary>
              Looks up a localized string similar to The option is valid only in web application configuration..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.web_server_not_available">
            <summary>
              Looks up a localized string similar to Web server context is not available..
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.wrapper_op_unsupported">
            <summary>
              Looks up a localized string similar to {0} operation is not supported by this stream wrapper.
            </summary>
        </member>
        <member name="P:Pchp.Core.Resources.ErrResources.writeonly_property_read">
            <summary>
              Looks up a localized string similar to Cannot read from write-only property {0}::${1}.
            </summary>
        </member>
        <member name="T:Pchp.Core.Std.Attribute">
            <summary>
            The Attribute class denotating a custom PHP attribute.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.ArrayUtils.Write(System.IO.Stream,System.Byte[])">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.ArrayUtils.WriteAsync(System.IO.Stream,System.Byte[])">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.ArrayUtils.GetString(System.Text.Encoding,System.Byte[])">
            <summary>
            Decodes a sequence of bytes from the specified byte array into a string.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.ArrayUtils.WhereNotNull``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Filters a sequence of values that are not a <c>null</c> reference.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.ArrayUtils.Equals``1(``0[],``0[])">
            <summary>
            Checks two arrays are equal.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.ArrayUtils.Equals``1(``0[],``0[],System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Checks two arrays are equal.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.ArrayUtils.Last``1(System.Collections.Generic.IList{``0})">
            <summary>
            Gets last element of the list.
            </summary>
            <returns>Last element or default of {T}.</returns>
        </member>
        <member name="M:Pchp.Core.Utilities.ArrayUtils.Last(System.String)">
            <summary>
            Gets last character of the string.
            </summary>
            <returns>Last character or <c>\0</c>.</returns>
        </member>
        <member name="M:Pchp.Core.Utilities.ArrayUtils.Fill(System.Byte[],System.Byte,System.Int32,System.Int32)">
            <summary>
            Fills a portion of an array of bytes by specified byte.
            </summary>
            <param name="array">The array to fill.</param>
            <param name="value">The value to fill the array with.</param>
            <param name="offset">The index of the first byte to be set.</param>
            <param name="count">The number of bytes to be set.</param>
            <remarks>This method uses fast unsafe filling of memory with bytes.</remarks>
        </member>
        <member name="M:Pchp.Core.Utilities.ArrayUtils.BinarySearch(System.Char[],System.Char)">
            <summary>
            Searches for specified character in sorted array of characters.
            Specialized version of <see cref="M:System.Array.BinarySearch``1(``0[],``0)"/>.
            </summary>
            <param name="array">The array to search in.</param>
            <param name="c">The character to search for.</param>
            <returns>The position of the <paramref name="c"/> in <paramref name="array"/> or -1 if not found.</returns>
        </member>
        <member name="M:Pchp.Core.Utilities.ArrayUtils.AppendRange``1(``0,``0[])">
            <summary>
            Concatenates elements into a new array.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.ArrayUtils.Concat``1(``0[],``0[])">
            <summary>
            Creates a new array containing concatenation of given arguments.
            </summary>
            <exception cref="M:Pchp.Core.Utilities.ArrayUtils.ArgumentNullException(System.String)">Argument is null.</exception>
        </member>
        <member name="M:Pchp.Core.Utilities.ArrayUtils.IndexOf``1(``0[],``0)">
            <summary>
            Searches for the specified object and returns the index of its first occurrence in a one-dimensional array.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.ArrayUtils.TryGetItem``1(``0[],System.Int32,``0@)">
            <summary>
            Safely returns item from array.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.ArrayUtils.TryGetItem``1(``0[],System.Int64,``0@)">
            <summary>
            Safely returns item from array.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.ArrayUtils.Reverse``1(``0[])">
            <summary>
            Creates new array with reversed order of items.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.ArrayUtils.IsNullOrEmpty``1(``0[])">
            <summary>
            Gets value indicating the array is null or with no elements.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.ArrayUtils.ToArray``2(System.Collections.Generic.List{``0},System.Func{``0,``1})">
            <summary>
            Select elements from given list to a new array.
            </summary>
        </member>
        <member name="T:Pchp.Core.Utilities.EmptyDictionary`2">
            <summary>
            Helper class holding instance of an empty dictionary.
            </summary>
        </member>
        <member name="P:Pchp.Core.Utilities.EmptyDictionary`2.Singleton">
            <summary>
            The singleton.
            </summary>
        </member>
        <member name="T:Pchp.Core.Utilities.EmptyCollection`1">
            <summary>
            Helper class that implements empty collection and empty enumerator, GC friendly.
            </summary>
        </member>
        <member name="T:Pchp.Core.Utilities.EmptyEnumerator`1">
            <summary>
            Helper class implementing empty <see cref="T:System.Collections.Generic.IEnumerator`1"/>, GC friendly.
            </summary>
            <remarks>Usage: <code>return EmptyEnumerator{T}.Instance;</code></remarks>
        </member>
        <member name="T:Pchp.Core.Utilities.EmptyPhpEnumerator">
            <summary>
            Helper class implementing empty <see cref="T:System.Collections.Generic.IEnumerator`1"/>, GC friendly.
            </summary>
            <remarks>Usage: <code>return EmptyEnumerator{T}.Instance;</code></remarks>
        </member>
        <member name="T:Pchp.Core.Utilities.ContextExtensions">
            <summary>
            Extension context methods.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.ContextExtensions.GetRuntimeInformationalVersion">
            <summary>
            Gets runtime informational version including suffix if provided.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.ContextExtensions.GetRuntimeVersionSuffix">
            <summary>
            Gets runtime version suffix including the leading dash, or empty string if runtime is build without suffix.
            </summary>
        </member>
        <member name="P:Pchp.Core.Utilities.ContextExtensions.CurrentContext">
            <summary>
            A lazily instantiated instance of <see cref="T:Pchp.Core.Context"/> for the current runtime context.
            </summary>
            <exception cref="T:System.NotSupportedException">Instance of <see cref="T:Pchp.Core.Context"/> cannot be provided.</exception>
        </member>
        <member name="P:Pchp.Core.Utilities.ContextExtensions.CurrentContextProvider">
            <summary>
            Gets or sets a context provider to provide an instance of <see cref="T:Pchp.Core.Context"/> to PHP classes instantiated without given <see cref="T:Pchp.Core.Context"/>.
            </summary>
            <param name="value">Must not be <c>null</c>.</param>
            <remarks>The default implementation provides an instance of <see cref="T:Pchp.Core.Context"/> associated with the current <see cref="T:System.Threading.ExecutionContext"/>.</remarks>
        </member>
        <member name="F:Pchp.Core.Utilities.ContextExtensions.s_ContextProvider">
            <summary>
            Default context provider that creates a new singleton instance lazily.
            This instance is not bound to a runtime context.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.ContextExtensions.IsDebugRuntime">
            <summary>
            Gets value indicating whether the runtime was built as debug.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.ContextExtensions.GetScriptTypeFromScript(Pchp.Core.Context.ScriptInfo)">
            <summary>
            Gets the type containing the script's main method.
            </summary>
            <remarks>The type or <c>null</c>.</remarks>
        </member>
        <member name="F:Pchp.Core.Utilities.DateTimeUtils.UtcStartOfUnixEpoch">
            <summary>
            Time 0 in terms of Unix TimeStamp.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.DateTimeUtils.UtcToUnixTimeStamp(System.DateTime)">
            <summary>
            Converts <see cref="T:System.DateTime"/> representing UTC time to UNIX timestamp.
            </summary>
            <param name="dt">Time.</param>
            <returns>Unix timestamp.</returns>
        </member>
        <member name="M:Pchp.Core.Utilities.DateTimeUtils.UnixTimeStampToUtc(System.Int64)">
            <summary>
            Converts UNIX timestamp to <see cref="T:System.DateTime"/> representing UTC time.
            </summary>
            <param name="ts">Unix timestamp.</param>
            <returns>Time.</returns>
        </member>
        <member name="T:Pchp.Core.Utilities.ElasticBitArray">
            <summary>
            Implementation of elastic bit array.
            The internal array is resized automatically within the set value operation.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.ElasticBitArray.ToBitArray">
            <summary>
            Copies to bit array to new <see cref="T:System.Collections.BitArray"/> object.
            </summary>
        </member>
        <member name="P:Pchp.Core.Utilities.ElasticBitArray.Item(System.Int32)">
            <summary>
            Gets or sets index-th bit in the array.
            </summary>
        </member>
        <member name="F:Pchp.Core.Utilities.FuncExtensions.s_not_null">
            <summary>Cached <see cref="T:System.Func`2"/> instance.</summary>
        </member>
        <member name="T:Pchp.Core.Utilities.Helpers">
            <summary>
            Provides runtime helpers and singletons.
            </summary>
        </member>
        <member name="F:Pchp.Core.Utilities.Helpers.EmptyRuntimeTypeHandle">
            <summary>
            Frequently used default value of <see cref="T:System.RuntimeTypeHandle"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.Helpers.EmptyNullable_T``1">
            <summary>
            Frequently used default value of <see cref="T:System.Nullable`1"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.Helpers.IsUserTypeDeclared(Pchp.Core.Context,Pchp.Core.Reflection.PhpTypeInfo)">
            <summary>
            Gets value indicating the given user PHP type is declared in specified <see cref="T:Pchp.Core.Context"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.NameValueCollectionUtils.EncodeTopLevelName(System.String)">
            <summary>
            Fixes top level variable name to not contain spaces and dots (as it is in PHP);
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.NameValueCollectionUtils.AddVariable(Pchp.Core.PhpArray,System.String,Pchp.Core.PhpValue,System.String,System.Boolean)">
            <summary>
            Adds a variable to auto-global array.
            Duplicit entries are collected into a sub-array item.
            The routine respects <c>[subkey]</c> notation to build a hierarchy of sub-arrays.
            </summary>
            <param name="array">The array.</param>
            <param name="name">A unparsed name of variable.</param>
            <param name="value">A value to be added.</param>
            <param name="subname">A name of intermediate array inserted before the value.</param>
            <param name="rawname">If set, the array keys are not sanitized. By default, characters <c>'.'</c> and <c>' '</c> are replaced with <c>'_'</c>.</param>
        </member>
        <member name="M:Pchp.Core.Utilities.NumberUtils.IsInt32(System.Int64)">
            <summary>
            Determines whether given <see cref="T:System.Int64"/> can be safely converted to <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.NumberUtils.DivRem(System.Int64,System.Int64,System.Int64@)">
            <summary>Calculates the quotient of two 32-bit signed integers and also returns the remainder in an output parameter.</summary>
            <returns>The quotient of the specified numbers.</returns>
            <param name="a">The dividend.</param>
            <param name="b">The divisor.</param>
            <param name="result">The remainder.</param>
        </member>
        <member name="F:Pchp.Core.Utilities.PathUtils.DirectorySeparator">
            <summary>
            Windows-style path separator (back slash).
            </summary>
        </member>
        <member name="F:Pchp.Core.Utilities.PathUtils.AltDirectorySeparator">
            <summary>
            Linux-style path separator (forward slash).
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.PathUtils.GetFileName(System.ReadOnlySpan{System.Char})">
            <summary>
            Gets the file name portion of the given path.
            Trailing slashes are trimmed off.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.PathUtils.GetExtension(System.ReadOnlySpan{System.Char})">
            <summary>
            Gets the file extension excluding the dot (.) character.
            The method does not check for the path validity.
            If path does not have an extension, empty string is returned.
            </summary>
        </member>
        <member name="T:Pchp.Core.Utilities.FileSystemUtils">
            <summary>
            File system utilities.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.FileSystemUtils.StripPassword(System.String)">
            <summary>
            Returns the given URL without the username/password information.
            </summary>
            <remarks>
            Removes the text between the last <c>"://"</c> and the following <c>'@'</c>.
            Does not check the URL for validity. Works for php://filter paths too.
            </remarks>
            <param name="url">The URL to modify.</param>
            <returns>The given URL with the username:password section replaced by <c>"..."</c>.</returns>
        </member>
        <member name="M:Pchp.Core.Utilities.FileSystemUtils.GetScheme(System.String)">
            <summary>
            Wrapper-safe method of getting the schema portion from an URL.
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing an URL or a local filesystem path.</param>
            <returns>
            The schema portion of the given <paramref name="path"/> or <c>"file"</c>
            for a local filesystem path.
            </returns>
            <exception cref="T:System.ArgumentException">Invalid path.</exception>
        </member>
        <member name="M:Pchp.Core.Utilities.FileSystemUtils.TryGetScheme(System.String,System.ReadOnlySpan{System.Char}@)">
            <summary>
            Wrapper-safe method of getting the schema portion from an URL.
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing an URL or a local filesystem path.</param>
            <param name="scheme">Resulting scheme if any.</param>
            <returns>Whether given value contains the scheme.</returns>
        </member>
        <member name="M:Pchp.Core.Utilities.FileSystemUtils.TryGetScheme(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char}@)">
            <summary>
            Wrapper-safe method of getting the schema portion from an URL.
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing an URL or a local filesystem path.</param>
            <param name="scheme">Resulting scheme if any.</param>
            <returns>Whether given value contains the scheme.</returns>
        </member>
        <member name="M:Pchp.Core.Utilities.FileSystemUtils.GetUrl(System.String)">
            <summary>
            Concatenates a scheme with the given absolute path if necessary.
            </summary>
            <param name="absolutePath">Absolute path.</param>
            <returns>The given url or absolute path preceded by a <c>file://</c>.</returns>
            <exception cref="T:System.ArgumentException">Invalid path.</exception>
        </member>
        <member name="M:Pchp.Core.Utilities.FileSystemUtils.GetFilename(System.String)">
            <summary>
            Returns the given filesystem url without the scheme.
            </summary>
            <param name="path">A path or url of a local filesystem file.</param>
            <returns>The filesystem path or <b>null</b> if the <paramref name="path"/> is not a local file.</returns>
            <exception cref="T:System.ArgumentException">Invalid path.</exception>
        </member>
        <member name="M:Pchp.Core.Utilities.FileSystemUtils.IsRemoteFile(System.String)">
            <summary>
            Check if the given path is a remote url.
            </summary>
            <param name="url">The path to test.</param>
            <returns><c>true</c> if it's a fully qualified name of a remote resource.</returns>
            <exception cref="T:System.ArgumentException">Invalid path.</exception>
        </member>
        <member name="M:Pchp.Core.Utilities.FileSystemUtils.IsLocalFile(System.String)">
            <summary>
            Check if the given path is a path to a local file.
            </summary>
            <param name="url">The path to test.</param>
            <returns><c>true</c> if it's not a fully qualified name of a remote resource.</returns>
            <exception cref="T:System.ArgumentException">Invalid path.</exception>
        </member>
        <member name="M:Pchp.Core.Utilities.FileSystemUtils.AbsolutePath(Pchp.Core.Context,System.String)">
            <summary>
            Merges the path with the current working directory
            to get a canonicalized absolute pathname representing the same path
            (local files only). If the provided <paramref name="path"/>
            is absolute (rooted local path or an URL) it is returned unchanged.
            </summary>
            <param name="ctx">Runtime context.</param>
            <param name="path">An absolute or relative path to a directory or an URL.</param>
            <returns>Canonicalized absolute path in case of a local directory or the original 
            <paramref name="path"/> in case of an URL.</returns>
        </member>
        <member name="T:Pchp.Core.Utilities.PhpArrayUtils">
            <summary>
            Extension methods for <see cref="T:Pchp.Core.PhpArray"/> objects.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.PhpArrayUtils.ToDictionary(Pchp.Core.PhpHashtable)">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.Dictionary`2"/> from given <see cref="T:Pchp.Core.PhpArray"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.PhpArrayUtils.ToDictionary``2(Pchp.Core.PhpHashtable,System.Func{Pchp.Core.IntStringKey,``1})">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.Dictionary`2"/> from given <see cref="T:Pchp.Core.PhpArray"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.PhpArrayUtils.ToDictionary``1(Pchp.Core.PhpHashtable,System.Func{Pchp.Core.IntStringKey,``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.Dictionary`2"/> from given <see cref="T:Pchp.Core.PhpArray"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.PhpArrayUtils.ToDictionary``2(Pchp.Core.PhpHashtable,System.Func{Pchp.Core.IntStringKey,``0},System.Func{Pchp.Core.PhpValue,``1})">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.Dictionary`2"/> from given <see cref="T:Pchp.Core.PhpArray"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.PhpArrayUtils.ToDictionary``2(Pchp.Core.PhpHashtable,System.Func{Pchp.Core.IntStringKey,``0},System.Func{Pchp.Core.PhpValue,``1},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.Dictionary`2"/> from given <see cref="T:Pchp.Core.PhpArray"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.PhpArrayUtils.ValuesToArray``1(Pchp.Core.PhpArray,System.Func{Pchp.Core.PhpValue,``0})">
            <summary>
            Creates array of elements selected from values of given <see cref="T:Pchp.Core.PhpArray"/>.
            </summary>
        </member>
        <member name="T:Pchp.Core.Utilities.PhpClassName">
            <summary>
            Helper for PHP namespaced class name.
            </summary>
        </member>
        <member name="F:Pchp.Core.Utilities.PhpClassName.NamespaceSeparator">
            <summary>
            Namespace separator character (<c>\\</c>).
            </summary>
        </member>
        <member name="T:Pchp.Core.Utilities.CurrentPlatform">
            <summary>
            Platform specific constants.
            </summary>
        </member>
        <member name="P:Pchp.Core.Utilities.CurrentPlatform.IsWindows">
            <summary>
            Gets value indicating the guest operating.
            </summary>
        </member>
        <member name="P:Pchp.Core.Utilities.CurrentPlatform.IsLinux">
            <summary>
            Gets value indicating the guest operating.
            </summary>
        </member>
        <member name="P:Pchp.Core.Utilities.CurrentPlatform.IsOsx">
            <summary>
            Gets value indicating the guest operating.
            </summary>
        </member>
        <member name="F:Pchp.Core.Utilities.CurrentPlatform.PathComparer">
            <summary>
            Gets string comparer for path comparison on current platform.
            </summary>
            <remarks>Ignore case on Windows, otherwise case-sensitive.</remarks>
        </member>
        <member name="F:Pchp.Core.Utilities.CurrentPlatform.PathStringComparison">
            <summary>
            Gets string comparison method for path comparison on current platform.
            </summary>
            <remarks>Ignore case on Windows, otherwise case-sensitive.</remarks>
        </member>
        <member name="M:Pchp.Core.Utilities.CurrentPlatform.NormalizeSlashes(System.String)">
            <summary>
            Replaces <see cref="F:Pchp.Core.Utilities.CurrentPlatform.AltDirectorySeparator"/> to <see cref="F:Pchp.Core.Utilities.CurrentPlatform.DirectorySeparator"/>.
            </summary>
        </member>
        <member name="T:Pchp.Core.Utilities.WindowsPlatform">
            <summary>
            Windows specific functions.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.WindowsPlatform.SetConsoleMode(System.IntPtr,System.UInt32)">
            <summary>
            https://docs.microsoft.com/en-us/windows/console/setconsolemode
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.WindowsPlatform.Has_VT100(System.Int32)">
            <summary>
            Gets value indicating whether console mode of given Std input/output/error handle
            has <c>ENABLE_VIRTUAL_TERMINAL_PROCESSING</c> enabled.
            </summary>
            <param name="handle_no">STD_*_handle.</param>
        </member>
        <member name="M:Pchp.Core.Utilities.RuntimeExtensions.AsStdClass(Pchp.Core.PhpArray)">
            <summary>
            Gets new instance of <see cref="T:stdClass"/> which runtime fields are passed from given array.
            Array is not copied, the <see cref="T:stdClass"/> will reference the same instance as given.
            </summary>
            <param name="array">Array to be used as the class's runtime fields. Can be <c>null</c>.</param>
        </member>
        <member name="M:Pchp.Core.Utilities.RuntimeExtensions.IsPacked(Pchp.Core.PhpArray)">
            <summary>
            Gets value indicating the array's internal structure is "packed".
            This means there is no hash table internally, not "holes" in the underlaying array, it only consists of ordered set of items indexed from <c>0</c> to <c>Count - 1</c>.
            </summary>
            <param name="array">Non-null reference to array.</param>
        </member>
        <member name="M:Pchp.Core.Utilities.RuntimeExtensions.AsWritable(Pchp.Core.PhpArray)">
            <summary>
            Ensures the array is not shared among more <see cref="T:Pchp.Core.PhpArray"/> instances.
            Lazily clones if necessary.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.RuntimeExtensions.IsList(Pchp.Core.PhpArray)">
            <summary>
            Gets value indicating the array is indexed with sequence of 0..Count.
            </summary>
        </member>
        <member name="T:Pchp.Core.Utilities.StringBuilderUtilities">
            <summary>
            <see cref="T:System.Text.StringBuilder"/> extensions and pooling.
            </summary>
        </member>
        <member name="P:Pchp.Core.Utilities.StringBuilderUtilities.Pool">
            <summary>
            Gets object pool singleton.
            Uses <see cref="T:Microsoft.Extensions.ObjectPool.StringBuilderPooledObjectPolicy"/> policy (automatically clears the string builder upon return).
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.StringBuilderUtilities.GetStringAndReturn(System.Text.StringBuilder)">
            <summary>
            Gets the <paramref name="sb"/> value as string and return the instance to the <see cref="P:Pchp.Core.Utilities.StringBuilderUtilities.Pool"/>.
            </summary>
            <param name="sb">String builder instance.</param>
            <returns><paramref name="sb"/> string.</returns>
        </member>
        <member name="M:Pchp.Core.Utilities.StringUtils.BinToHex(System.Byte[],System.String)">
            <summary>
            Converts a string of bytes into hexadecimal representation.
            </summary>
            <param name="bytes">The string of bytes.</param>
            <param name="separator">The separator.</param>
            <returns>Concatenation of hexadecimal values of bytes of <paramref name="bytes"/> separated by <paramref name="separator"/>.</returns>
        </member>
        <member name="M:Pchp.Core.Utilities.StringUtils.LastChar(System.String)">
            <summary>
            Gets last string character or <c>\0</c> if the given string is <c>null</c> or empty.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.StringUtils.IndexOfOrdinal(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Most efficient way of searching for index of a substring ordinarily.
            </summary>
            <param name="source">The string to search. </param>
            <param name="value">The string to locate within <paramref name="source" />. </param>
            <param name="startIndex">The zero-based starting index of the search. </param>
            <param name="count">The number of elements in the section to search. </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value" /> within the section of <paramref name="source" />
            that starts at<paramref name= "startIndex" /> and
            contains the number of elements specified by<paramref name="count" />, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Pchp.Core.Utilities.StringUtils.Concat(System.ReadOnlySpan{System.Char},System.Char,System.ReadOnlySpan{System.Char})">
            <summary>
            Specialized <c>concat</c> method.
            </summary>
        </member>
        <member name="M:Pchp.Core.Utilities.StringUtils.Reverse(System.String)">
            <summary>
            Reverses given string.
            </summary>
        </member>
        <member name="T:Pchp.Core.IPhpEnumerator">
            <summary>
            Represents enumerator which 
            </summary>
        </member>
        <member name="M:Pchp.Core.IPhpEnumerator.MoveLast">
            <summary>
            Moves the enumerator to the last entry of the dictionary.
            </summary>
            <returns>Whether the enumerator has been sucessfully moved to the last entry.</returns>
        </member>
        <member name="M:Pchp.Core.IPhpEnumerator.MoveFirst">
            <summary>
            Moves the enumerator to the first entry of the dictionary.
            </summary>
            <returns>Whether the enumerator has been sucessfully moved to the first entry.</returns>
        </member>
        <member name="M:Pchp.Core.IPhpEnumerator.MovePrevious">
            <summary>
            Moves the enumerator to the previous entry of the dictionary.
            </summary>
            <returns>Whether the enumerator has been sucessfully moved to the previous entry.</returns>
        </member>
        <member name="P:Pchp.Core.IPhpEnumerator.AtEnd">
            <summary>
            Gets whether the enumeration has ended and the enumerator points behind the last element.
            </summary>
        </member>
        <member name="P:Pchp.Core.IPhpEnumerator.CurrentValue">
            <summary>
            Gets current unaliased value.
            </summary>
        </member>
        <member name="P:Pchp.Core.IPhpEnumerator.CurrentValueAliased">
            <summary>
            Aliases current entry value.
            </summary>
        </member>
        <member name="P:Pchp.Core.IPhpEnumerator.CurrentKey">
            <summary>
            Gets current key.
            </summary>
        </member>
        <member name="T:Pchp.Core.IPhpEnumerable">
            <summary>
            Provides methods which allows implementor to be used in PHP foreach statement as a source of enumeration.
            </summary>
        </member>
        <member name="M:Pchp.Core.IPhpEnumerable.GetForeachEnumerator(System.Boolean,System.RuntimeTypeHandle)">
            <summary>
            Creates an enumerator used in foreach statement.
            </summary>
            <param name="aliasedValues">Whether the values returned by enumerator are assigned by reference.</param>
            <param name="caller">Type of the class in whose context the caller operates.</param>
            <returns>The dictionary enumerator.</returns>
        </member>
        <member name="T:Pchp.Core.IPhpArray">
            <summary>
            The PHP array interface provides operations for an array access.
            </summary>
        </member>
        <member name="P:Pchp.Core.IPhpArray.Count">
            <summary>
            Gets number of items in the collection.
            </summary>
        </member>
        <member name="M:Pchp.Core.IPhpArray.GetItemValue(Pchp.Core.IntStringKey)">
            <summary>
            Gets value at given index.
            Gets <c>void</c> value in case the key is not found.
            </summary>
        </member>
        <member name="M:Pchp.Core.IPhpArray.GetItemValue(Pchp.Core.PhpValue)">
            <summary>
            Gets value at given index.
            Gets <c>void</c> value in case the key is not found.
            </summary>
        </member>
        <member name="M:Pchp.Core.IPhpArray.SetItemValue(Pchp.Core.IntStringKey,Pchp.Core.PhpValue)">
            <summary>
            Sets value at specific index. Value must not be an alias.
            </summary>
        </member>
        <member name="M:Pchp.Core.IPhpArray.SetItemValue(Pchp.Core.PhpValue,Pchp.Core.PhpValue)">
            <summary>
            Sets value at specific index. Value must not be an alias.
            </summary>
        </member>
        <member name="M:Pchp.Core.IPhpArray.SetItemAlias(Pchp.Core.IntStringKey,Pchp.Core.PhpAlias)">
            <summary>
            Writes aliased value at given index.
            </summary>
        </member>
        <member name="M:Pchp.Core.IPhpArray.SetItemAlias(Pchp.Core.PhpValue,Pchp.Core.PhpAlias)">
            <summary>
            Writes aliased value at given index.
            </summary>
        </member>
        <member name="M:Pchp.Core.IPhpArray.AddValue(Pchp.Core.PhpValue)">
            <summary>
            Add a value to the end of array.
            Value can be an alias.
            </summary>
        </member>
        <member name="M:Pchp.Core.IPhpArray.RemoveKey(Pchp.Core.IntStringKey)">
            <summary>
            Removes a value matching given key.
            In case the value is not found, the method does nothing.
            </summary>
        </member>
        <member name="M:Pchp.Core.IPhpArray.RemoveKey(Pchp.Core.PhpValue)">
            <summary>
            Removes a value at given index.
            In case the value is not found, the method does nothing.
            </summary>
        </member>
        <member name="M:Pchp.Core.IPhpArray.EnsureItemAlias(Pchp.Core.IntStringKey)">
            <summary>
            Ensures the item at given index is alias.
            </summary>
        </member>
        <member name="M:Pchp.Core.IPhpArray.EnsureItemObject(Pchp.Core.IntStringKey)">
            <summary>
            Ensures the item at given index is class object.
            </summary>
        </member>
        <member name="M:Pchp.Core.IPhpArray.EnsureItemArray(Pchp.Core.IntStringKey)">
            <summary>
            Ensures the item at given index is array.
            </summary>
        </member>
        <member name="T:Pchp.Core.IPhpCloneable">
            <summary>
            An interface allowing objects to implement custom <c>clone</c> operation.
            </summary>
        </member>
        <member name="M:Pchp.Core.IPhpCloneable.Clone">
            <summary>
            Returns the object clone.
            </summary>
        </member>
        <member name="T:Pchp.Core.IPhpPrintable">
            <summary>
            Provides explicit object behavior for <c>print_r</c> and <c>var_dump</c> implementations.
            </summary>
        </member>
        <member name="P:Pchp.Core.IPhpPrintable.Properties">
            <summary>
            Returns properties to be printed.
            </summary>
        </member>
        <member name="T:Pchp.Core.PhpVariableVisitor">
            <summary>
            Visitor implementation for a variable.
            </summary>
            <remarks>Used for serialization, printing, dumping.</remarks>
        </member>
        <member name="T:Pchp.Core.IPhpVariableFormatter">
            <summary>
            Provides method for serializing a variable into a stream.
            </summary>
            <remarks>Used for dumping, printing, export, serialization.</remarks>
        </member>
        <member name="M:Pchp.Core.IPhpVariableFormatter.Serialize(Pchp.Core.PhpValue)">
            <summary>
            Serializes a <paramref name="value"/> into a string (unicode or binary).
            </summary>
            <param name="value">Value to be serialized.</param>
        </member>
        <member name="T:Pchp.Core.CommonPhpArrayKeys">
            <summary>
            Set of common array keys.
            </summary>
            <remarks>
            Used by runtime and compiler.
            Name of class field corresponds to the key string.
            </remarks>
        </member>
        <member name="F:Pchp.Core.PhpVariable.TypeNameInt">
            <summary>
            PHP name for <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpVariable.TypeNameLongInteger">
            <summary>
            PHP name for <see cref="T:System.Int64"/>.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpVariable.TypeNameDouble">
            <summary>
            PHP name for <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpVariable.TypeNameBool">
            <summary>
            PHP name for <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpVariable.TypeNameString">
            <summary>
            PHP name for <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpVariable.TypeNameVoid">
            <summary>
            PHP name for <see cref="T:System.Void"/>.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpVariable.TypeNameObject">
            <summary>
            PHP name for <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpVariable.TypeNameNull">
            <summary>
            PHP name for <B>null</B>.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpVariable.True">
            <summary>
            PHP name for <B>true</B> constant.
            </summary>
        </member>
        <member name="F:Pchp.Core.PhpVariable.False">
            <summary>
            PHP name for <B>true</B> constant.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpVariable.GetTypeName(Pchp.Core.PhpValue)">
            <summary>
            Gets the PHP name of given value, used by <c>gettype()</c>.
            </summary>
            <param name="value">The object which type name to get.</param>
            <returns>The PHP name of the type of <paramref name="value"/>.</returns>
            <remarks>Returns CLR type name for variables of unknown type.</remarks>
        </member>
        <member name="M:Pchp.Core.PhpVariable.GetDebugType(Pchp.Core.PhpValue)">
            <summary>
            Gets the PHP debug type name of given value, used by <c>get_debug_type()</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpVariable.GetClassName(System.Object)">
            <summary>
            Gets the PHP class name of given object instance.
            Returns <see cref="F:Pchp.Core.PhpVariable.TypeNameNull"/> in case of argument is <c>null</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpVariable.EnumerateDeepCopies(System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{Pchp.Core.IntStringKey,Pchp.Core.PhpValue}})">
            <summary>
            Enumerates deep copy of iterator values.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpVariable.IsValidName(System.String)">
            <summary>
            Checks whether a string is "valid" PHP variable identifier.
            </summary>
            <param name="name">The variable name.</param>
            <returns>
            Whether <paramref name="name"/> is "valid" name of variable, i.e. [_[:alpha:]][_0-9[:alpha:]]*.
            This doesn't say anything about whether a variable of such name can be used in PHP, e.g. <c>${0}</c> is ok.
            </returns>
        </member>
        <member name="M:Pchp.Core.PhpVariable.IsValidCallback(Pchp.Core.IPhpCallable)">
            <summary>
            Determines if given callable is syntactically valid.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpVariable.IsValidBoundCallback(Pchp.Core.Context,Pchp.Core.IPhpCallable)">
            <summary>
            Determines if given callable is valid and referes toi an existing function.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpVariable.IsInteger(Pchp.Core.PhpValue)">
            <summary>
            Determines whether the value is <see cref="T:System.Int32"/> or <see cref="T:System.Int64"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpVariable.IsBoolean(Pchp.Core.PhpValue)">
            <summary>
            Determines whether the value is <see cref="T:System.Boolean"/> (either as a value or an alias).
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpVariable.IsDouble(Pchp.Core.PhpValue)">
            <summary>
            Determines whether the value is <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpVariable.AsResource(Pchp.Core.PhpValue)">
            <summary>
            In case value is a resource, gets its reference.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpVariable.ArrayOrNull(Pchp.Core.PhpValue)">
            <summary>
            In case value contains <see cref="T:Pchp.Core.PhpArray"/>,
            its instance is returned. Otherwise <c>null</c>.
            </summary>
            <remarks>Value is dereferenced if necessary.</remarks>
        </member>
        <member name="M:Pchp.Core.PhpVariable.AsString(Pchp.Core.PhpValue)">
            <summary>
            Alias to <see cref="M:Pchp.Core.PhpVariable.ToStringOrNull(Pchp.Core.PhpValue)"/>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpVariable.ToStringOrNull(Pchp.Core.PhpValue)">
            <summary>
            In case given value contains a string (<see cref="T:System.String"/> or <see cref="T:Pchp.Core.PhpString"/>),
            its string representation is returned.
            Otherwise <c>null</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpVariable.ToBytesOrNull(Pchp.Core.PhpValue)">
            <summary>
            In case given value contains a string (<see cref="T:System.String"/> or <see cref="T:Pchp.Core.PhpString"/>),
            its string representation is returned.
            Otherwise <c>null</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpVariable.ToBytesOrNull(Pchp.Core.PhpValue,Pchp.Core.Context)">
            <summary>
            In case given value contains a string (<see cref="T:System.String"/> or <see cref="T:Pchp.Core.PhpString"/>),
            its string representation is returned.
            Otherwise <c>null</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpVariable.AsBytesOrNull(Pchp.Core.PhpValue,Pchp.Core.Context)">
            <summary>
            In case the value contains a php string with binary data, gets array of bytes. Otherwise <c>null</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpVariable.AsArray(Pchp.Core.PhpValue)">
            <summary>
            In case given value contains an array (<see cref="T:Pchp.Core.PhpArray"/>),
            it is returned. Otherwise <c>null</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpVariable.IsPhpArray(Pchp.Core.PhpValue,Pchp.Core.PhpArray@)">
            <summary>
            Checks the value is of type <c>string</c> or <c>&amp;string</c> and gets its value.
            Single-byte strings are decoded using <c>UTF-8</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpVariable.IsString(Pchp.Core.PhpValue,System.String@)">
            <summary>
            Checks the value is of type <c>string</c> or <c>&amp;string</c> and gets its value.
            Single-byte strings are decoded using <c>UTF-8</c>.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpVariable.IsMutableString(Pchp.Core.PhpValue,Pchp.Core.PhpString@)">
            <summary>
            Checks the value is constructed as mutable <see cref="T:Pchp.Core.PhpString"/>.
            UTF strings are not handled by this method.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpVariable.IsString(Pchp.Core.PhpValue)">
            <summary>
            Checks the value is of type <c>string</c> (both unicode and single-byte) or an alias to a string.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpVariable.IsBinaryString(Pchp.Core.PhpValue,Pchp.Core.PhpString@)">
            <summary>
            Gets value indicating the variable contains a single-byte string value.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpVariable.IsUnicodeString(Pchp.Core.PhpValue,System.String@)">
            <summary>
            Gets value indicating the variable is Unicode string value.
            </summary>
        </member>
        <member name="M:Pchp.Core.PhpVariable.IsBoolean(Pchp.Core.PhpValue,System.Boolean@)">
            <summary>
            Checks the value is of type <c>bool</c> or <c>&amp;bool</c> and gets its value.
            </summary>
        </member>
        <member name="F:Pchp.CodeAnalysis.Semantics.AccessMask.None">
            <summary>
            Serves for case when Expression is body of a ExpressionStmt.
            It is useless to push its value on the stack in that case.
            </summary>
        </member>
        <member name="F:Pchp.CodeAnalysis.Semantics.AccessMask.Read">
            <summary>
            The result value will be read first.
            </summary>
        </member>
        <member name="F:Pchp.CodeAnalysis.Semantics.AccessMask.Write">
            <summary>
            A value will be written to the place.
            Only available for VariableUse (variables, fields, properties, array items, references).
            </summary>
        </member>
        <member name="F:Pchp.CodeAnalysis.Semantics.AccessMask.ReadRef">
            <summary>
            The expression will be aliased and the alias will be read.
            </summary>
        </member>
        <member name="F:Pchp.CodeAnalysis.Semantics.AccessMask.WriteRef">
            <summary>
            An aliased value will be written to the place.
            Only available for VariableUse (variables, fields, properties, array items, references).
            </summary>
        </member>
        <member name="F:Pchp.CodeAnalysis.Semantics.AccessMask.ReadQuiet">
            <summary>
            Read is check only and won't result in an exception in case the variable does not exist.
            </summary>
        </member>
        <member name="F:Pchp.CodeAnalysis.Semantics.AccessMask.EnsureObject">
            <summary>
            The expression is accessed as a part of chain,
            its member field will be written to.
            E.g. (EnsureObject)->Field = Value
            </summary>
        </member>
        <member name="F:Pchp.CodeAnalysis.Semantics.AccessMask.EnsureArray">
            <summary>
            The expression is accessed as a part of chain,
            its item entry will be written to.
            E.g. (EnsureArray)[] = Value
            </summary>
        </member>
        <member name="F:Pchp.CodeAnalysis.Semantics.AccessMask.Unset">
            <summary>
            The variable will be unset. Combined with <c>quiet</c> flag, valid for variables, array entries and fields.
            </summary>
        </member>
        <member name="F:Pchp.CodeAnalysis.Semantics.AccessMask.Isset">
            <summary>
            The variable will be checked whether it is set.
            </summary>
        </member>
        <member name="F:Pchp.CodeAnalysis.Semantics.AccessMask.IsNotRef">
            <summary>
            A flag denotating a value that is not aliased.
            This is a hint for code generators.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.NullableContextAttribute">
            <summary>
            Attribute for compiler use only, used to indicate the nullability of contained type references without a <see cref="T:System.Runtime.CompilerServices.NullableAttribute"/> annotation.
            </summary>
            <remarks>
            Whereas the C# compiler embeds the definition in the compiled assembly, the assemblies produced by Peachpie refer to this definition.
            </remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.NullableAttribute">
            <summary>
            Attribute for compiler use only, used to indicate the nullability of type references.
            </summary>
            <remarks>
            Whereas the C# compiler embeds the definition in the compiled assembly, the assemblies produced by Peachpie refer to this definition.
            </remarks>
        </member>
        <member name="M:Peachpie.Runtime.Dynamic.EmitHelpers.CreatDefaultAbstractClassImplementation(System.Type,System.Reflection.ConstructorInfo@)">
            <summary>
            Defines non-abstract class implementing given abstract class.
            </summary>
            <param name="type">Abstract class prototype.</param>
            <param name="ctor_context">Resulting constructor that instantiates the defined type.</param>
            <returns></returns>
        </member>
        <member name="T:Peachpie.Runtime.Reflection.MetadataResourceManager">
            <summary>
            Provides access to resources embedded within the compiled assembly.
            </summary>
        </member>
        <member name="F:Peachpie.Runtime.Reflection.MetadataResourceManager.s_resourceManagers">
            <summary>
            Cache or resource managers created for '.source.metadata.resources' of assemblies.
            </summary>
        </member>
        <member name="M:Peachpie.Runtime.Reflection.MetadataResourceManager.GetResourceManager(System.Reflection.Assembly)">
            <summary>
            Gets resource manager for assembly metadata (<c>.source.metadata.resources</c>).
            </summary>
            <returns>Gets the resource manager or <c>null</c> if there are no metadata.</returns>
        </member>
        <member name="T:ArrayAccess">
            <summary>
            Interface to provide accessing objects as arrays.
            </summary>
        </member>
        <member name="M:ArrayAccess.offsetGet(Pchp.Core.PhpValue)">
            <summary>
            Returns the value at specified offset.
            </summary>
        </member>
        <member name="M:ArrayAccess.offsetSet(Pchp.Core.PhpValue,Pchp.Core.PhpValue)">
            <summary>
            Assigns a value to the specified offset.
            </summary>
        </member>
        <member name="M:ArrayAccess.offsetUnset(Pchp.Core.PhpValue)">
            <summary>
            Unsets an offset.
            </summary>
        </member>
        <member name="M:ArrayAccess.offsetExists(Pchp.Core.PhpValue)">
            <summary>
            Whether an offset exists.
            </summary>
            <remarks>This method is executed when using isset() or empty().</remarks>
        </member>
        <member name="F:Closure._callable">
            <summary>Actual anonymous function.</summary>
        </member>
        <member name="F:Closure._ctx">
            <summary>Current runtime context.</summary>
        </member>
        <member name="F:Closure._scope">
            <summary>Current class scope. (class context)</summary>
        </member>
        <member name="F:Closure._statictype">
            <summary>Late static bound type if it differs from <see cref="F:Closure._scope"/>. Otherwise <c>null</c> reference.</summary>
        </member>
        <member name="F:Closure._this">
            <summary>Reference to <c>this</c> instance. Can be <c>null</c>.</summary>
        </member>
        <member name="F:Closure.static">
            <summary>
            Fixed (use) parameters to be passed to <see cref="F:Closure._callable"/>.
            </summary>
        </member>
        <member name="F:Closure.parameter">
            <summary>
            Anonymous function parameters, for dumping only.
            </summary>
        </member>
        <member name="P:Closure.Pchp#Core#IPhpPrintable#Properties">
            <summary>
            Explicitly provide properties to be printed in var_dump and print_r.
            </summary>
        </member>
        <member name="M:Closure.#ctor(Pchp.Core.Context,Pchp.Core.IPhpCallable,System.Object,System.RuntimeTypeHandle,Pchp.Core.Reflection.PhpTypeInfo,Pchp.Core.PhpArray,Pchp.Core.PhpArray)">
            <summary>
            Constructs the closure.
            </summary>
        </member>
        <member name="M:Closure.bind(Closure,System.Object,Pchp.Core.PhpValue)">
            <summary>
            Duplicates a closure with a specific bound object and class scope.
            </summary>
        </member>
        <member name="M:Closure.fromCallable(Pchp.Core.Context,Pchp.Core.IPhpCallable)">
            <summary>
            Create and return a new anonymous function from given callable using the current scope.
            This method checks if the callable is callable in the current scope and throws a TypeError if it is not.
            </summary>
        </member>
        <member name="M:Closure.bindTo(System.Object,System.Nullable{Pchp.Core.PhpValue})">
            <summary>
            Duplicates the closure with a new bound object and class scope.
            </summary>
        </member>
        <member name="M:Closure.call(System.Object,Pchp.Core.PhpValue[])">
            <summary>
            Binds and calls the closure.
            </summary>
        </member>
        <member name="M:Closure.__invoke(Pchp.Core.PhpValue[])">
            <summary>
            Magic method <c>__invoke</c> invokes the anonymous function with given arguments.
            </summary>
        </member>
        <member name="M:Closure.Pchp#Core#IPhpCallable#Invoke(Pchp.Core.Context,Pchp.Core.PhpValue[])">
            <summary>
            Implementation of <see cref="T:Pchp.Core.IPhpCallable"/>, invokes the anonymous function.
            </summary>
        </member>
        <member name="F:Generator._ctx">
            <summary>
            Context associated in which the generator is run.
            </summary>
        </member>
        <member name="F:Generator._stateMachineMethod">
            <summary>
            Delegate to a static method implementing the state machine itself. 
            </summary>
        </member>
        <member name="F:Generator._scope">
            <summary>
            INTERNAL: In case Generator is created inside a Closure (anonymous function),
            we remember the Closure's scope here.
            Otherwise the Generator's scope is resolved statically during the compilation.
            </summary>
        </member>
        <member name="F:Generator._locals">
            <summary>
            Lifted local variables from the state machine function.
            </summary>
        </member>
        <member name="F:Generator._tmpLocals">
            <summary>
            Temporal locals of the state machine function.
            </summary>
        </member>
        <member name="F:Generator._this">
            <summary>
            Bound `$this` for non-static enumerator methods, <c>null</c> for static ones.
            </summary>
        </member>
        <member name="F:Generator._static">
            <summary>
            Lazy bound <c>static</c>.
            Can be <c>null</c> if not used in the generator state function.
            </summary>
        </member>
        <member name="F:Generator._state">
            <summary>
            Current state of the state machine implemented by <see cref="F:Generator._stateMachineMethod"/>
            </summary>
            <remarks>
              0: before first yield
             -1: running
             -2: closed
            +x: valid state
            </remarks>
        </member>
        <member name="F:Generator._maxNumericalKey">
            <summary>
            Max numerical key for next auto-incremented yield.
            </summary>
        </member>
        <member name="F:Generator._runToFirstYield">
            <summary>
            Helper variables used for <see cref="M:Generator.rewind"/> and <see cref="M:Generator.checkIfRunToFirstYieldIfNotRun"/>
            </summary>
        </member>
        <member name="M:Generator.rewind">
            <summary>
            Rewinds the iterator to the first element.
            </summary>
        </member>
        <member name="M:Generator.next">
            <summary>
            Moves forward to next element.
            </summary>
        </member>
        <member name="M:Generator.valid">
            <summary>
            Checks if there is a current element after calls to <see cref="M:Generator.rewind"/> or <see cref="M:Generator.next"/>.
            </summary>
            <returns><c>bool</c>.</returns>
        </member>
        <member name="M:Generator.key">
            <summary>
            Returns the key of the current element.
            </summary>
        </member>
        <member name="M:Generator.current">
            <summary>
            Returns the current element (value).
            </summary>
        </member>
        <member name="M:Generator.getReturn">
            <summary>
            Get the return value of a generator
            </summary>
            <returns>Returns the generator's return value once it has finished executing. </returns>
        </member>
        <member name="M:Generator.send(Pchp.Core.PhpValue)">
            <summary>
            Sends a <paramref name="value"/> to the generator and forwards to next element.
            </summary>
            <returns>Returns the yielded value. </returns>
        </member>
        <member name="M:Generator.throw(System.Exception)">
            <summary>
            Throw an exception into the generator
            </summary>
            <param name="exception">Exception to throw into the generator.</param>
            <returns>Returns the yielded value. </returns>
        </member>
        <member name="M:Generator.__wakeup">
            <summary>
            Serialize callback.
            </summary>
            <remarks>
            Throws an exception as generators can't be serialized. 
            </remarks>
        </member>
        <member name="M:Generator.moveStateMachine">
            <summary>
            Moves the state machine to next element.
            </summary>
        </member>
        <member name="M:Generator.checkIfMovingFromFirstYeild">
            <summary>
            Checks if the generator is moving beyond first yield, if so sets proper variable. Important for <see cref="M:Generator.rewind"/>.
            </summary>
        </member>
        <member name="M:Generator.checkIfRunToFirstYieldIfNotRun">
            <summary>
            Checks if generator already run to the first yield. Runs there if it didn't.
            </summary>
        </member>
        <member name="T:Iterator">
            <summary>
            Interface for external iterators or objects that can iterate themselves internally.
            </summary>
            <remarks>
            Note that contrary to the .NET framework enumerating interfaces,
            calling <c>rewind</c> positions the iterator on the first element, so <c>next</c>
            shall not be called until the first element is retrieved.
            </remarks>
        </member>
        <member name="M:Iterator.rewind">
            <summary>
            Rewinds the iterator to the first element.
            </summary>
        </member>
        <member name="M:Iterator.next">
            <summary>
            Moves forward to next element.
            </summary>
        </member>
        <member name="M:Iterator.valid">
            <summary>
            Checks if there is a current element after calls to <see cref="M:Iterator.rewind"/> or <see cref="M:Iterator.next"/>.
            </summary>
            <returns><c>bool</c>.</returns>
        </member>
        <member name="M:Iterator.key">
            <summary>
            Returns the key of the current element.
            </summary>
        </member>
        <member name="M:Iterator.current">
            <summary>
            Returns the current element (value).
            </summary>
        </member>
        <member name="T:IteratorAggregate">
            <summary>
            Interface to create an external iterator.
            </summary>
            <remarks>
            This interface contains only arg-less stubs as signatures should not be restricted.
            </remarks>
        </member>
        <member name="M:IteratorAggregate.getIterator">
            <summary>
            Returns an <see cref="T:Iterator"/> or another <see cref="T:IteratorAggregate"/> for
            the implementing object.
            </summary>
        </member>
        <member name="T:Serializable">
            <summary>
            Interface for customized serializing.
            </summary>
            <remarks>
            Classes that implement this interface no longer support __sleep() and __wakeup().
            The method serialize is called whenever an instance needs to be serialized. This does not invoke __destruct()
            or has any other side effect unless programmed inside the method.
            
            When the data is unserialized the class is known and the appropriate unserialize() method is called as a constructor instead of calling __construct().
            If you need to execute the standard constructor you may do so in the method.
            
            Note, that when an old instance of a class that implements this interface now,
            which had been serialized before the class implemeted the interface, is unserialized,
            __wakeup() is called instead of the serialize method, what might be useful for migration purposes.
            </remarks>
        </member>
        <member name="M:Serializable.serialize">
            <summary>
            Should return the string representation of the object.
            </summary>
            <returns>Returns the string representation of the object or <c>NULL</c></returns>
        </member>
        <member name="M:Serializable.unserialize(Pchp.Core.PhpString)">
            <summary>
            Called during unserialization of the object.
            </summary>
            <param name="serialized">The string representation of the object.</param>
        </member>
        <member name="T:stdClass">
            <summary>
            Generic empty class.
            Used for casting values to an <c>object</c>.
            </summary>
        </member>
        <member name="F:stdClass.__peach__runtimeFields">
            <summary>
            Special field containing runtime fields.
            </summary>
            <remarks>
            The field is recognized by runtime and is not intended for direct use.
            </remarks>
        </member>
        <member name="M:stdClass.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:stdClass.#ctor(Pchp.Core.PhpValue)">
            <summary>
            Constructs the object with single runtime field <c>scalar</c>.
            </summary>
            <param name="scalar">Value of <c>scalar</c> field.</param>
        </member>
        <member name="T:Stringable">
            <summary>
            Built-in interface for classes that implement the __toString().
            </summary>
        </member>
        <member name="M:Stringable.__toString">
            <summary>
            Converts object to string.
            </summary>
        </member>
        <member name="T:Traversable">
            <summary>
            Built-in marker interface.
            </summary>
        </member>
        <member name="T:__PHP_Incomplete_Class">
            <summary>
            Core class created by <c>unserialize</c> if an undefined class should be created.
            </summary>
        </member>
        <member name="F:__PHP_Incomplete_Class.__peach__runtimeFields">
            <summary>
            Special field containing runtime fields, handled by runtime.
            </summary>
        </member>
    </members>
</doc>
